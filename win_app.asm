; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG164049 DB	'All', 00H, '*.*', 00H, 'Text', 00H, '*.TXT', 00H, 00H
$SG164105 DB	00H
$SG164106 DB	00H
	ORG $+2
$SG164163 DB	'dll_file_copy.dll', 00H
	ORG $+2
$SG164356 DB	00H, 00H
	ORG $+2
$SG164164 DB	'lib_spranimator.dll', 00H
$SG164165 DB	'ERROR', 00H
	ORG $+2
$SG27775 DB	'%u', 00H
	ORG $+1
$SG164166 DB	'Could not copy dll to temp file', 00H
$SG164167 DB	'dll_file_copy.dll', 00H
	ORG $+2
$SG164169 DB	'ERROR', 00H
	ORG $+2
$SG27777 DB	'%u', 00H
	ORG $+1
$SG164170 DB	'Could not load library', 00H
	ORG $+1
$SG164171 DB	'updateApplication', 00H
	ORG $+2
$SG164173 DB	'ERROR', 00H
	ORG $+2
$SG27779 DB	'%u', 00H
	ORG $+1
$SG164174 DB	'Could not get address to updateGameState', 00H
	ORG $+3
$SG27782 DB	'%u', 00H
	ORG $+1
$SG164214 DB	'Create Sprite 2D', 00H
	ORG $+3
$SG31755 DB	'rb', 00H
	ORG $+1
$SG164215 DB	'Could not load bitmap', 00H
	ORG $+2
$SG164344 DB	'Init Render 2D', 00H
	ORG $+1
$SG164345 DB	'Could not get client rect', 00H
	ORG $+2
$SG31980 DB	'Import', 00H
	ORG $+1
$SG31985 DB	'OK', 00H
	ORG $+1
$SG164347 DB	'Init Render 2D', 00H
	ORG $+1
$SG164348 DB	'Could not create render target', 00H
	ORG $+1
$SG164350 DB	'Init Render 2D', 00H
	ORG $+1
$SG164351 DB	'Could not create brush', 00H
	ORG $+1
$SG164353 DB	'Init Render 2D', 00H
	ORG $+1
$SG164354 DB	'Could not create Direct2D Factory', 00H
	ORG $+2
$SG31989 DB	'Cancel', 00H
	ORG $+1
$SG32012 DB	'<', 00H
	ORG $+2
$SG164357 DB	'a', 00H, 'r', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG32015 DB	'>', 00H
	ORG $+2
$SG164358 DB	'Init Render 2D', 00H
	ORG $+1
$SG164359 DB	'Could not create Text Format', 00H
	ORG $+3
$SG164512 DB	'winUninitializeAudioStream', 00H
	ORG $+1
$SG32032 DB	'<', 00H
	ORG $+2
$SG164513 DB	'Could not stop playing buffer', 00H
	ORG $+2
$SG164530 DB	'Init Audio Stream', 00H
	ORG $+2
$SG32036 DB	'>', 00H
	ORG $+2
$SG164531 DB	'Could not run CoInitializeEx', 00H
	ORG $+3
$SG164533 DB	'Init Audio Stream', 00H
	ORG $+2
$SG32041 DB	'<', 00H
	ORG $+2
$SG164534 DB	'Could not initialize DirectSound', 00H
	ORG $+3
$SG32023 DB	'Delay', 00H
	ORG $+2
$SG32044 DB	'>', 00H
	ORG $+2
$SG164536 DB	'Init Audio Stream', 00H
	ORG $+2
$SG32047 DB	'<', 00H
	ORG $+2
$SG164537 DB	'Could not set DirectSound Cooperation Level', 00H
$SG32050 DB	'>', 00H
	ORG $+2
$SG164539 DB	'Init Audio Stream', 00H
	ORG $+2
$SG32053 DB	'<', 00H
	ORG $+2
$SG164540 DB	'Could not create Sound Buffer', 00H
	ORG $+2
$SG164542 DB	'Init Audio Stream', 00H
	ORG $+2
$SG32056 DB	'>', 00H
	ORG $+2
$SG164543 DB	'Could not set Buffer Format', 00H
$SG32059 DB	'<', 00H
	ORG $+2
$SG164545 DB	'Init Audio Stream', 00H
	ORG $+2
$SG32062 DB	'>', 00H
	ORG $+2
$SG164546 DB	'Could not create Sound Buffer', 00H
	ORG $+2
$SG164638 DB	'Initialize Window', 00H
	ORG $+2
$SG32065 DB	'bx: %i', 00H
	ORG $+5
$SG164639 DB	'Could not Create window', 00H
$SG164659 DB	'Initalize OS', 00H
	ORG $+3
$SG164660 DB	'Could not allocate application memory', 00H
	ORG $+2
$SG164679 DB	'Spranimator', 00H
	ORG $+4
$SG164680 DB	'lib_spranimator.dll', 00H
$SG27718 DB	'%.2f', 00H
	ORG $+3
$SG27720 DB	'%.2f', 00H
	ORG $+3
$SG27722 DB	'%.2f', 00H
	ORG $+3
$SG27725 DB	'%.2f', 00H
	ORG $+7
?LENGTH_EXTRA_BITS@@3QBIB DD 00H			; LENGTH_EXTRA_BITS
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	04H
	DD	04H
	DD	04H
	DD	04H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	00H
$SG32022 DB	'Play', 00H
	ORG $+7
?LENGTH_ADD_AMOUNT@@3QBIB DD 03H			; LENGTH_ADD_AMOUNT
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	08H
	DD	09H
	DD	0aH
	DD	0bH
	DD	0dH
	DD	0fH
	DD	011H
	DD	013H
	DD	017H
	DD	01bH
	DD	01fH
	DD	023H
	DD	02bH
	DD	033H
	DD	03bH
	DD	043H
	DD	053H
	DD	063H
	DD	073H
	DD	083H
	DD	0a3H
	DD	0c3H
	DD	0e3H
	DD	0102H
$SG32066 DB	'by: %i', 00H
	ORG $+5
?DISTANCE_EXTRA_BITS@@3QBIB DD 00H			; DISTANCE_EXTRA_BITS
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	02H
	DD	02H
	DD	03H
	DD	03H
	DD	04H
	DD	04H
	DD	05H
	DD	05H
	DD	06H
	DD	06H
	DD	07H
	DD	07H
	DD	08H
	DD	08H
	DD	09H
	DD	09H
	DD	0aH
	DD	0aH
	DD	0bH
	DD	0bH
	DD	0cH
	DD	0cH
	DD	0dH
	DD	0dH
$SG31773 DB	'decompressing fixed huffman codes', 0aH, 00H
	ORG $+5
?DISTANCE_ADD_AMOUNT@@3QBIB DD 01H			; DISTANCE_ADD_AMOUNT
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	07H
	DD	09H
	DD	0dH
	DD	011H
	DD	019H
	DD	021H
	DD	031H
	DD	041H
	DD	061H
	DD	081H
	DD	0c1H
	DD	0101H
	DD	0181H
	DD	0201H
	DD	0301H
	DD	0401H
	DD	0601H
	DD	0801H
	DD	0c01H
	DD	01001H
	DD	01801H
	DD	02001H
	DD	03001H
	DD	04001H
	DD	06001H
$SG31768 DB	'processing uncompressed block', 0aH, 00H
	ORG $+1
$SG31795 DB	'An error has occured. Unsupported btype: %i', 0aH, '.', 00H
	ORG $+2
$SG31986 DB	'.anipack', 00H
	ORG $+7
$SG31987 DB	'C:/Users/Dave/Desktop/%s%s', 00H
	ORG $+5
$SG31991 DB	'Load Image', 00H
	ORG $+5
$SG31998 DB	'Update Image', 00H
	ORG $+3
$SG32004 DB	'Save as Frame', 00H
	ORG $+2
$SG32007 DB	'New Animation', 00H
	ORG $+2
$SG32009 DB	'Delete Animation', 00H
	ORG $+7
$SG32018 DB	'Animation %i of %i', 00H
	ORG $+5
$SG32020 DB	'Export Animations', 00H
	ORG $+6
$SG32025 DB	'Delete Frame', 00H
	ORG $+3
$SG32029 DB	'Update Frame', 00H
	ORG $+3
$SG32039 DB	'Frame %i of %i', 00H
	ORG $+1
$SG32064 DB	'x: %i     y: %i', 00H
$SG32067 DB	'bw: %i', 00H
	ORG $+1
$SG32068 DB	'bh: %i', 00H
CONST	ENDS
PUBLIC	??0Vector2@@QEAA@M@Z				; Vector2::Vector2
PUBLIC	??0Vector2@@QEAA@MM@Z				; Vector2::Vector2
PUBLIC	??4Vector2@@QEAAXT0@@Z				; Vector2::operator=
PUBLIC	??YVector2@@QEAAXT0@@Z				; Vector2::operator+=
PUBLIC	??0Vector3@@QEAA@T__m128@@@Z			; Vector3::Vector3
PUBLIC	??0Vector3@@QEAA@M@Z				; Vector3::Vector3
PUBLIC	??0Vector3@@QEAA@MMM@Z				; Vector3::Vector3
PUBLIC	??4Vector3@@QEAAXT0@@Z				; Vector3::operator=
PUBLIC	??XVector3@@QEAAXAEAT0@@Z			; Vector3::operator*=
PUBLIC	??0Vector4@@QEAA@MMMM@Z				; Vector4::Vector4
PUBLIC	??4Vector4@@QEAAXT0@@Z				; Vector4::operator=
PUBLIC	??0Matrix4@@QEAA@XZ				; Matrix4::Matrix4
PUBLIC	?lookAt@@YA?ATMatrix4@@TVector3@@00@Z		; lookAt
PUBLIC	?toggleSwitch@@YAXPEAPEADPEAIIMMMM@Z		; toggleSwitch
PUBLIC	__local_stdio_printf_options
PUBLIC	_vfprintf_l
PUBLIC	printf
PUBLIC	_vsnprintf_l
PUBLIC	vsprintf
PUBLIC	??4Animation@@QEAAAEAU0@AEBU0@@Z		; Animation::operator=
PUBLIC	updateApplication
PUBLIC	WinMain
PUBLIC	?SetColor@ID2D1SolidColorBrush@@QEAAXAEBU_D3DCOLORVALUE@@@Z ; ID2D1SolidColorBrush::SetColor
PUBLIC	?CreateBitmap@ID2D1RenderTarget@@QEAAJUD2D_SIZE_U@@AEBUD2D1_BITMAP_PROPERTIES@@PEAPEAUID2D1Bitmap@@@Z ; ID2D1RenderTarget::CreateBitmap
PUBLIC	?CreateSolidColorBrush@ID2D1RenderTarget@@QEAAJAEBU_D3DCOLORVALUE@@PEAPEAUID2D1SolidColorBrush@@@Z ; ID2D1RenderTarget::CreateSolidColorBrush
PUBLIC	?DrawRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z ; ID2D1RenderTarget::DrawRectangle
PUBLIC	?FillRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
PUBLIC	?DrawEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z ; ID2D1RenderTarget::DrawEllipse
PUBLIC	?FillEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillEllipse
PUBLIC	?DrawBitmap@ID2D1RenderTarget@@QEAAXPEAUID2D1Bitmap@@AEBUD2D_RECT_F@@MW4D2D1_BITMAP_INTERPOLATION_MODE@@1@Z ; ID2D1RenderTarget::DrawBitmap
PUBLIC	?SetTransform@ID2D1RenderTarget@@QEAAXAEBUD2D_MATRIX_3X2_F@@@Z ; ID2D1RenderTarget::SetTransform
PUBLIC	?Clear@ID2D1RenderTarget@@QEAAXAEBU_D3DCOLORVALUE@@@Z ; ID2D1RenderTarget::Clear
PUBLIC	?CreateHwndRenderTarget@ID2D1Factory@@QEAAJAEBUD2D1_RENDER_TARGET_PROPERTIES@@AEBUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAPEAUID2D1HwndRenderTarget@@@Z ; ID2D1Factory::CreateHwndRenderTarget
PUBLIC	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z		; D2D1::Point2F
PUBLIC	??$Point2@M@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2<float>
PUBLIC	?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z		; D2D1::SizeU
PUBLIC	??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z		; D2D1::Size<unsigned int>
PUBLIC	?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z		; D2D1::RectF
PUBLIC	??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z		; D2D1::Rect<float>
PUBLIC	?RectU@D2D1@@YA?AUD2D_RECT_U@@IIII@Z		; D2D1::RectU
PUBLIC	??$Rect@I@D2D1@@YA?AUD2D_RECT_U@@IIII@Z		; D2D1::Rect<unsigned int>
PUBLIC	?Ellipse@D2D1@@YA?AUD2D1_ELLIPSE@@AEBUD2D_POINT_2F@@MM@Z ; D2D1::Ellipse
PUBLIC	?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z ; D2D1::PixelFormat
PUBLIC	?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@AEBUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z ; D2D1::RenderTargetProperties
PUBLIC	?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z ; D2D1::HwndRenderTargetProperties
PUBLIC	??0ColorF@D2D1@@QEAA@W4Enum@01@M@Z		; D2D1::ColorF::ColorF
PUBLIC	??0ColorF@D2D1@@QEAA@MMMM@Z			; D2D1::ColorF::ColorF
PUBLIC	?Init@ColorF@D2D1@@AEAAXIM@Z			; D2D1::ColorF::Init
PUBLIC	??0Matrix3x2F@D2D1@@QEAA@XZ			; D2D1::Matrix3x2F::Matrix3x2F
PUBLIC	?Identity@Matrix3x2F@D2D1@@SA?AV12@XZ		; D2D1::Matrix3x2F::Identity
PUBLIC	?Rotation@Matrix3x2F@D2D1@@SA?AV12@MUD2D_POINT_2F@@@Z ; D2D1::Matrix3x2F::Rotation
PUBLIC	?SetProduct@Matrix3x2F@D2D1@@QEAAXAEBV12@0@Z	; D2D1::Matrix3x2F::SetProduct
PUBLIC	??DMatrix3x2F@D2D1@@QEBA?AV01@AEBV01@@Z		; D2D1::Matrix3x2F::operator*
PUBLIC	?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@AEBU_GUID@@PEAPEAX@Z ; D2D1CreateFactory
PUBLIC	??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PEAPEAUID2D1Factory@@@Z ; D2D1CreateFactory<ID2D1Factory>
PUBLIC	?WindowProc@@YA_JPEAUHWND__@@I_K_J@Z		; WindowProc
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	_GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48
PUBLIC	_GUID_06152247_6f50_465a_9245_118bfd3b6007
PUBLIC	__real@00000000
PUBLIC	__real@3c23d70a
PUBLIC	__real@3dcccccd
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3e800000
PUBLIC	__real@3e99999a
PUBLIC	__real@3f000000
PUBLIC	__real@3f0ccccd
PUBLIC	__real@3f19999a
PUBLIC	__real@3f333333
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@3f666666
PUBLIC	__real@3f800000
PUBLIC	__real@3f847ae147ae147b
PUBLIC	__real@3f9eb851eb851eb8
PUBLIC	__real@3fa999999999999a
PUBLIC	__real@3fb47ae147ae147b
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fc3333333333333
PUBLIC	__real@3fc70a3d70a3d70a
PUBLIC	__real@3fc999999999999a
PUBLIC	__real@3fd3333333333333
PUBLIC	__real@3fd51eb851eb851f
PUBLIC	__real@3fd999999999999a
PUBLIC	__real@3fdccccccccccccd
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe23d70a3d70a3d
PUBLIC	__real@3fe3333333333333
PUBLIC	__real@3fe6666666666666
PUBLIC	__real@3fe70a3d70a3d70a
PUBLIC	__real@3fe8000000000000
PUBLIC	__real@3fe999999999999a
PUBLIC	__real@3fea8f5c28f5c28f
PUBLIC	__real@3feb333333333333
PUBLIC	__real@3feccccccccccccd
PUBLIC	__real@40000000
PUBLIC	__real@401921fb54442d18
PUBLIC	__real@406fe00000000000
PUBLIC	__real@40a00000
PUBLIC	__real@40efffe000000000
PUBLIC	__real@41100000
PUBLIC	__real@41200000
PUBLIC	__real@41400000
PUBLIC	__real@437f0000
PUBLIC	__real@43b40000
PUBLIC	__real@bf800000
PUBLIC	__xmm@00000000000000000000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	free:PROC
EXTRN	malloc:PROC
EXTRN	realloc:PROC
EXTRN	exit:PROC
EXTRN	mbstowcs:PROC
EXTRN	__acrt_iob_func:PROC
EXTRN	fclose:PROC
EXTRN	fopen:PROC
EXTRN	fread:PROC
EXTRN	fseek:PROC
EXTRN	ftell:PROC
EXTRN	rewind:PROC
EXTRN	__stdio_common_vfprintf:PROC
EXTRN	__stdio_common_vsprintf:PROC
EXTRN	__imp_CreateDirectoryA:PROC
EXTRN	__imp_CreateFileA:PROC
EXTRN	__imp_FindClose:PROC
EXTRN	__imp_FindFirstFileA:PROC
EXTRN	__imp_FindNextFileA:PROC
EXTRN	__imp_GetFileAttributesA:PROC
EXTRN	__imp_GetFileSize:PROC
EXTRN	__imp_ReadFile:PROC
EXTRN	__imp_SetFilePointer:PROC
EXTRN	__imp_WriteFile:PROC
EXTRN	__imp_CloseHandle:PROC
EXTRN	__imp_QueryPerformanceCounter:PROC
EXTRN	__imp_QueryPerformanceFrequency:PROC
EXTRN	__imp_HeapAlloc:PROC
EXTRN	__imp_HeapFree:PROC
EXTRN	__imp_GetProcessHeap:PROC
EXTRN	__imp_Sleep:PROC
EXTRN	__imp_FreeLibrary:PROC
EXTRN	__imp_GetModuleFileNameA:PROC
EXTRN	__imp_GetModuleHandleA:PROC
EXTRN	__imp_GetProcAddress:PROC
EXTRN	__imp_LoadLibraryA:PROC
EXTRN	__imp_CopyFileA:PROC
EXTRN	__imp_TranslateMessage:PROC
EXTRN	__imp_DispatchMessageA:PROC
EXTRN	__imp_PeekMessageA:PROC
EXTRN	__imp_DefWindowProcA:PROC
EXTRN	__imp_RegisterClassExA:PROC
EXTRN	__imp_CreateWindowExA:PROC
EXTRN	__imp_ShowWindow:PROC
EXTRN	__imp_GetKeyState:PROC
EXTRN	__imp_GetSystemMetrics:PROC
EXTRN	__imp_GetClientRect:PROC
EXTRN	__imp_AdjustWindowRect:PROC
EXTRN	__imp_MessageBoxA:PROC
EXTRN	__imp_GetCursorPos:PROC
EXTRN	__imp_ScreenToClient:PROC
EXTRN	__imp_LoadCursorA:PROC
EXTRN	__imp_CoInitializeEx:PROC
EXTRN	__imp_GetOpenFileNameA:PROC
EXTRN	DirectSoundCreate:PROC
EXTRN	D2D1CreateFactory:PROC
EXTRN	D2D1MakeRotateMatrix:PROC
EXTRN	__imp_DWriteCreateFactory:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
_BSS	SEGMENT
?os@@3PEAUOSInterface@@EA DQ 01H DUP (?)		; os
?gui@@3PEAUGUI@@EA DQ 01H DUP (?)			; gui
_BSS	ENDS
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?s@@3PEAUSpranimator@@EA DQ 01H DUP (?)			; s
?win32Interface@@3PEAUWin32Interface@@EA DQ 01H DUP (?)	; win32Interface
?win32Application@@3PEAUSpranimator@@EA DQ 01H DUP (?)	; win32Application
_BSS	ENDS
pdata	SEGMENT
$pdata$?getLength@@YAIPEAD@Z DD imagerel ?getLength@@YAIPEAD@Z
	DD	imagerel ?getLength@@YAIPEAD@Z+76
	DD	imagerel $unwind$?getLength@@YAIPEAD@Z
$pdata$?stringToF32@@YAMPEBD@Z DD imagerel ?stringToF32@@YAMPEBD@Z
	DD	imagerel ?stringToF32@@YAMPEBD@Z+259
	DD	imagerel $unwind$?stringToF32@@YAMPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Vector3@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??0Vector3@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Vector3@@QEAA@MMM@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??0Vector3@@QEAA@MMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??XVector3@@QEAAXAEAT0@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??XVector3@@QEAAXAEAT0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Vector4@@QEAA@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??0Vector4@@QEAA@MMMM@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?clamp@@YA?ATVector2@@T1@00@Z DD imagerel ?clamp@@YA?ATVector2@@T1@00@Z
	DD	imagerel ?clamp@@YA?ATVector2@@T1@00@Z+143
	DD	imagerel $unwind$?clamp@@YA?ATVector2@@T1@00@Z
$pdata$?map@@YAMMMMMM@Z DD imagerel ?map@@YAMMMMMM@Z
	DD	imagerel ?map@@YAMMMMMM@Z+89
	DD	imagerel $unwind$?map@@YAMMMMMM@Z
$pdata$??G@YA?ATVector2@@T0@0@Z DD imagerel ??G@YA?ATVector2@@T0@0@Z
	DD	imagerel ??G@YA?ATVector2@@T0@0@Z+66
	DD	imagerel $unwind$??G@YA?ATVector2@@T0@0@Z
$pdata$??G@YA?ATVector3@@T0@0@Z DD imagerel ??G@YA?ATVector3@@T0@0@Z
	DD	imagerel ??G@YA?ATVector3@@T0@0@Z+75
	DD	imagerel $unwind$??G@YA?ATVector3@@T0@0@Z
$pdata$??K@YA?ATVector2@@T0@0@Z DD imagerel ??K@YA?ATVector2@@T0@0@Z
	DD	imagerel ??K@YA?ATVector2@@T0@0@Z+66
	DD	imagerel $unwind$??K@YA?ATVector2@@T0@0@Z
$pdata$??H@YA?ATVector2@@T0@M@Z DD imagerel ??H@YA?ATVector2@@T0@M@Z
	DD	imagerel ??H@YA?ATVector2@@T0@M@Z+67
	DD	imagerel $unwind$??H@YA?ATVector2@@T0@M@Z
$pdata$??G@YA?ATVector3@@T0@@Z DD imagerel ??G@YA?ATVector3@@T0@@Z
	DD	imagerel ??G@YA?ATVector3@@T0@@Z+79
	DD	imagerel $unwind$??G@YA?ATVector3@@T0@@Z
$pdata$?squareRoot@@YAMM@Z DD imagerel ?squareRoot@@YAMM@Z
	DD	imagerel ?squareRoot@@YAMM@Z+65
	DD	imagerel $unwind$?squareRoot@@YAMM@Z
$pdata$?length@@YAMTVector3@@@Z DD imagerel ?length@@YAMTVector3@@@Z
	DD	imagerel ?length@@YAMTVector3@@@Z+113
	DD	imagerel $unwind$?length@@YAMTVector3@@@Z
$pdata$?normalOf@@YA?ATVector3@@T1@@Z DD imagerel ?normalOf@@YA?ATVector3@@T1@@Z
	DD	imagerel ?normalOf@@YA?ATVector3@@T1@@Z+237
	DD	imagerel $unwind$?normalOf@@YA?ATVector3@@T1@@Z
$pdata$?cross@@YA?ATVector3@@T1@0@Z DD imagerel ?cross@@YA?ATVector3@@T1@0@Z
	DD	imagerel ?cross@@YA?ATVector3@@T1@0@Z+275
	DD	imagerel $unwind$?cross@@YA?ATVector3@@T1@0@Z
$pdata$?lookAt@@YA?ATMatrix4@@TVector3@@00@Z DD imagerel $LN3
	DD	imagerel $LN3+1250
	DD	imagerel $unwind$?lookAt@@YA?ATMatrix4@@TVector3@@00@Z
$pdata$?inBounds@@YA_NTVector2@@MMMM@Z DD imagerel ?inBounds@@YA_NTVector2@@MMMM@Z
	DD	imagerel ?inBounds@@YA_NTVector2@@MMMM@Z+116
	DD	imagerel $unwind$?inBounds@@YA_NTVector2@@MMMM@Z
$pdata$?finalizeGUI@@YAXXZ DD imagerel ?finalizeGUI@@YAXXZ
	DD	imagerel ?finalizeGUI@@YAXXZ+339
	DD	imagerel $unwind$?finalizeGUI@@YAXXZ
$pdata$?checkBox@@YA_NPEA_NMMMM@Z DD imagerel ?checkBox@@YA_NPEA_NMMMM@Z
	DD	imagerel ?checkBox@@YA_NPEA_NMMMM@Z+1485
	DD	imagerel $unwind$?checkBox@@YA_NPEA_NMMMM@Z
$pdata$?textInput@@YA_NPEADMMMM@Z DD imagerel ?textInput@@YA_NPEADMMMM@Z
	DD	imagerel ?textInput@@YA_NPEADMMMM@Z+2420
	DD	imagerel $unwind$?textInput@@YA_NPEADMMMM@Z
$pdata$?f32Input@@YA_NPEAMMMMM@Z DD imagerel ?f32Input@@YA_NPEAMMMMM@Z
	DD	imagerel ?f32Input@@YA_NPEAMMMMM@Z+2889
	DD	imagerel $unwind$?f32Input@@YA_NPEAMMMMM@Z
$pdata$?button@@YA_NPEADMMMM@Z DD imagerel ?button@@YA_NPEADMMMM@Z
	DD	imagerel ?button@@YA_NPEADMMMM@Z+1718
	DD	imagerel $unwind$?button@@YA_NPEADMMMM@Z
$pdata$?toggleSwitch@@YAXPEAPEADPEAIIMMMM@Z DD imagerel $LN4
	DD	imagerel $LN4+184
	DD	imagerel $unwind$?toggleSwitch@@YAXPEAPEADPEAIIMMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$printf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsnprintf_l DD imagerel $LN5
	DD	imagerel $LN5+117
	DD	imagerel $unwind$_vsnprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$vsprintf DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$vsprintf
pdata	ENDS
pdata	SEGMENT
$pdata$?copyMemory@@YAXPEAX0_K@Z DD imagerel ?copyMemory@@YAXPEAX0_K@Z
	DD	imagerel ?copyMemory@@YAXPEAX0_K@Z+104
	DD	imagerel $unwind$?copyMemory@@YAXPEAX0_K@Z
$pdata$?setMemory@@YAXPEAXDI@Z DD imagerel ?setMemory@@YAXPEAXDI@Z
	DD	imagerel ?setMemory@@YAXPEAXDI@Z+73
	DD	imagerel $unwind$?setMemory@@YAXPEAXDI@Z
$pdata$?readBitsFromArray@@YAIPEAEIPEAI_N@Z DD imagerel ?readBitsFromArray@@YAIPEAEIPEAI_N@Z
	DD	imagerel ?readBitsFromArray@@YAIPEAEIPEAI_N@Z+231
	DD	imagerel $unwind$?readBitsFromArray@@YAIPEAEIPEAI_N@Z
$pdata$?readBitsFromArrayReversed@@YAIPEAEIPEAI_N@Z DD imagerel ?readBitsFromArrayReversed@@YAIPEAEIPEAI_N@Z
	DD	imagerel ?readBitsFromArrayReversed@@YAIPEAEIPEAI_N@Z+241
	DD	imagerel $unwind$?readBitsFromArrayReversed@@YAIPEAEIPEAI_N@Z
$pdata$?clearPNGHuffman@@YAXPEAUPNGHuffman@@@Z DD imagerel ?clearPNGHuffman@@YAXPEAUPNGHuffman@@@Z
	DD	imagerel ?clearPNGHuffman@@YAXPEAUPNGHuffman@@@Z+131
	DD	imagerel $unwind$?clearPNGHuffman@@YAXPEAUPNGHuffman@@@Z
$pdata$?generatePNGHuffmanFromCodeLengths@@YA?AUPNGHuffman@@IPEAII@Z DD imagerel ?generatePNGHuffmanFromCodeLengths@@YA?AUPNGHuffman@@IPEAII@Z
	DD	imagerel ?generatePNGHuffmanFromCodeLengths@@YA?AUPNGHuffman@@IPEAII@Z+1134
	DD	imagerel $unwind$?generatePNGHuffmanFromCodeLengths@@YA?AUPNGHuffman@@IPEAII@Z
$pdata$?parseHuffmanCodeFromData@@YAIPEAEPEAIPEAUPNGHuffman@@@Z DD imagerel ?parseHuffmanCodeFromData@@YAIPEAEPEAIPEAUPNGHuffman@@@Z
	DD	imagerel ?parseHuffmanCodeFromData@@YAIPEAEPEAIPEAUPNGHuffman@@@Z+262
	DD	imagerel $unwind$?parseHuffmanCodeFromData@@YAIPEAEPEAIPEAUPNGHuffman@@@Z
$pdata$?uncompressPNG@@YAPEAMPEBDPEAI111@Z DD imagerel ?uncompressPNG@@YAPEAMPEBDPEAI111@Z
	DD	imagerel ?uncompressPNG@@YAPEAMPEBDPEAI111@Z+9510
	DD	imagerel $unwind$?uncompressPNG@@YAPEAMPEBDPEAI111@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4Animation@@QEAAAEAU0@AEBU0@@Z DD imagerel $LN6
	DD	imagerel $LN6+208
	DD	imagerel $unwind$??4Animation@@QEAAAEAU0@AEBU0@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?runControllPanel@@YAXMMMM@Z DD imagerel ?runControllPanel@@YAXMMMM@Z
	DD	imagerel ?runControllPanel@@YAXMMMM@Z+10191
	DD	imagerel $unwind$?runControllPanel@@YAXMMMM@Z
$pdata$?runAnimationPanel@@YAXMMMM@Z DD imagerel ?runAnimationPanel@@YAXMMMM@Z
	DD	imagerel ?runAnimationPanel@@YAXMMMM@Z+964
	DD	imagerel $unwind$?runAnimationPanel@@YAXMMMM@Z
$pdata$?runImageMapPanel@@YAXMMMM@Z DD imagerel ?runImageMapPanel@@YAXMMMM@Z
	DD	imagerel ?runImageMapPanel@@YAXMMMM@Z+3022
	DD	imagerel $unwind$?runImageMapPanel@@YAXMMMM@Z
$pdata$updateApplication DD imagerel $LN3
	DD	imagerel $LN3+550
	DD	imagerel $unwind$updateApplication
$pdata$WinMain DD imagerel $LN7
	DD	imagerel $LN7+382
	DD	imagerel $unwind$WinMain
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetColor@ID2D1SolidColorBrush@@QEAAXAEBU_D3DCOLORVALUE@@@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?SetColor@ID2D1SolidColorBrush@@QEAAXAEBU_D3DCOLORVALUE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateBitmap@ID2D1RenderTarget@@QEAAJUD2D_SIZE_U@@AEBUD2D1_BITMAP_PROPERTIES@@PEAPEAUID2D1Bitmap@@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?CreateBitmap@ID2D1RenderTarget@@QEAAJUD2D_SIZE_U@@AEBUD2D1_BITMAP_PROPERTIES@@PEAPEAUID2D1Bitmap@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateSolidColorBrush@ID2D1RenderTarget@@QEAAJAEBU_D3DCOLORVALUE@@PEAPEAUID2D1SolidColorBrush@@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?CreateSolidColorBrush@ID2D1RenderTarget@@QEAAJAEBU_D3DCOLORVALUE@@PEAPEAUID2D1SolidColorBrush@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DrawRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?DrawRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FillRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?FillRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DrawEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?DrawEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FillEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?FillEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DrawBitmap@ID2D1RenderTarget@@QEAAXPEAUID2D1Bitmap@@AEBUD2D_RECT_F@@MW4D2D1_BITMAP_INTERPOLATION_MODE@@1@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$?DrawBitmap@ID2D1RenderTarget@@QEAAXPEAUID2D1Bitmap@@AEBUD2D_RECT_F@@MW4D2D1_BITMAP_INTERPOLATION_MODE@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetTransform@ID2D1RenderTarget@@QEAAXAEBUD2D_MATRIX_3X2_F@@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?SetTransform@ID2D1RenderTarget@@QEAAXAEBUD2D_MATRIX_3X2_F@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clear@ID2D1RenderTarget@@QEAAXAEBU_D3DCOLORVALUE@@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?Clear@ID2D1RenderTarget@@QEAAXAEBU_D3DCOLORVALUE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateHwndRenderTarget@ID2D1Factory@@QEAAJAEBUD2D1_RENDER_TARGET_PROPERTIES@@AEBUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAPEAUID2D1HwndRenderTarget@@@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?CreateHwndRenderTarget@ID2D1Factory@@QEAAJAEBUD2D1_RENDER_TARGET_PROPERTIES@@AEBUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAPEAUID2D1HwndRenderTarget@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Point2@M@D2D1@@YA?AUD2D_POINT_2F@@MM@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$Point2@M@D2D1@@YA?AUD2D_POINT_2F@@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z DD imagerel $LN3
	DD	imagerel $LN3+40
	DD	imagerel $unwind$?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+165
	DD	imagerel $unwind$?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RectU@D2D1@@YA?AUD2D_RECT_U@@IIII@Z DD imagerel $LN3
	DD	imagerel $LN3+153
	DD	imagerel $unwind$?RectU@D2D1@@YA?AUD2D_RECT_U@@IIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Rect@I@D2D1@@YA?AUD2D_RECT_U@@IIII@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$??$Rect@I@D2D1@@YA?AUD2D_RECT_U@@IIII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Ellipse@D2D1@@YA?AUD2D1_ELLIPSE@@AEBUD2D_POINT_2F@@MM@Z DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$?Ellipse@D2D1@@YA?AUD2D1_ELLIPSE@@AEBUD2D_POINT_2F@@MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@AEBUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z DD imagerel $LN3
	DD	imagerel $LN3+148
	DD	imagerel $unwind$?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@AEBUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ColorF@D2D1@@QEAA@W4Enum@01@M@Z DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??0ColorF@D2D1@@QEAA@W4Enum@01@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Identity@Matrix3x2F@D2D1@@SA?AV12@XZ DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$?Identity@Matrix3x2F@D2D1@@SA?AV12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Rotation@Matrix3x2F@D2D1@@SA?AV12@MUD2D_POINT_2F@@@Z DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$?Rotation@Matrix3x2F@D2D1@@SA?AV12@MUD2D_POINT_2F@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??DMatrix3x2F@D2D1@@QEBA?AV01@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$??DMatrix3x2F@D2D1@@QEBA?AV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@AEBU_GUID@@PEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@AEBU_GUID@@PEAPEAX@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?winGetBytesPerPixelFromFormat@@YAIW4DXGI_FORMAT@@@Z DD imagerel ?winGetBytesPerPixelFromFormat@@YAIW4DXGI_FORMAT@@@Z
	DD	imagerel ?winGetBytesPerPixelFromFormat@@YAIW4DXGI_FORMAT@@@Z+218
	DD	imagerel $unwind$?winGetBytesPerPixelFromFormat@@YAIW4DXGI_FORMAT@@@Z
$pdata$?winAllocateMemory@@YAPEAXI@Z DD imagerel ?winAllocateMemory@@YAPEAXI@Z
	DD	imagerel ?winAllocateMemory@@YAPEAXI@Z+50
	DD	imagerel $unwind$?winAllocateMemory@@YAPEAXI@Z
$pdata$?winFreeMemory@@YAXPEAX@Z DD imagerel ?winFreeMemory@@YAXPEAX@Z
	DD	imagerel ?winFreeMemory@@YAXPEAX@Z+36
	DD	imagerel $unwind$?winFreeMemory@@YAXPEAX@Z
$pdata$?winSelectFileFromComputer@@YA_NPEAD@Z DD imagerel ?winSelectFileFromComputer@@YA_NPEAD@Z
	DD	imagerel ?winSelectFileFromComputer@@YA_NPEAD@Z+149
	DD	imagerel $unwind$?winSelectFileFromComputer@@YA_NPEAD@Z
$pdata$?winCheckIfDirectoryExists@@YA_NPEAD@Z DD imagerel ?winCheckIfDirectoryExists@@YA_NPEAD@Z
	DD	imagerel ?winCheckIfDirectoryExists@@YA_NPEAD@Z+70
	DD	imagerel $unwind$?winCheckIfDirectoryExists@@YA_NPEAD@Z
$pdata$?winCheckIfFileExists@@YA_NPEAD@Z DD imagerel ?winCheckIfFileExists@@YA_NPEAD@Z
	DD	imagerel ?winCheckIfFileExists@@YA_NPEAD@Z+70
	DD	imagerel $unwind$?winCheckIfFileExists@@YA_NPEAD@Z
$pdata$?winCreateDirectory@@YA_NPEAD@Z DD imagerel ?winCreateDirectory@@YA_NPEAD@Z
	DD	imagerel ?winCreateDirectory@@YA_NPEAD@Z+48
	DD	imagerel $unwind$?winCreateDirectory@@YA_NPEAD@Z
$pdata$?winCreateFile@@YA_NPEADPEAXI_N@Z DD imagerel ?winCreateFile@@YA_NPEADPEAXI_N@Z
	DD	imagerel ?winCreateFile@@YA_NPEADPEAXI_N@Z+220
	DD	imagerel $unwind$?winCreateFile@@YA_NPEADPEAXI_N@Z
$pdata$?winGetListOfFilesInDirectory@@YAXPEAD0PEAI@Z DD imagerel ?winGetListOfFilesInDirectory@@YAXPEAD0PEAI@Z
	DD	imagerel ?winGetListOfFilesInDirectory@@YAXPEAD0PEAI@Z+306
	DD	imagerel $unwind$?winGetListOfFilesInDirectory@@YAXPEAD0PEAI@Z
$pdata$?winReadFileIntoBuffer@@YAXPEADPEAX@Z DD imagerel ?winReadFileIntoBuffer@@YAXPEADPEAX@Z
	DD	imagerel ?winReadFileIntoBuffer@@YAXPEADPEAX@Z+176
	DD	imagerel $unwind$?winReadFileIntoBuffer@@YAXPEADPEAX@Z
$pdata$?winBuildVariableString@@YAXPEAD0ZZ DD imagerel ?winBuildVariableString@@YAXPEAD0ZZ
	DD	imagerel ?winBuildVariableString@@YAXPEAD0ZZ+68
	DD	imagerel $unwind$?winBuildVariableString@@YAXPEAD0ZZ
$pdata$?winBuildVariableStringV@@YAXPEAD00@Z DD imagerel ?winBuildVariableStringV@@YAXPEAD00@Z
	DD	imagerel ?winBuildVariableStringV@@YAXPEAD00@Z+44
	DD	imagerel $unwind$?winBuildVariableStringV@@YAXPEAD00@Z
$pdata$?winGetSystemTime@@YA_KXZ DD imagerel ?winGetSystemTime@@YA_KXZ
	DD	imagerel ?winGetSystemTime@@YA_KXZ+25
	DD	imagerel $unwind$?winGetSystemTime@@YA_KXZ
$pdata$?winGetFileWriteTime@@YA?AU_FILETIME@@PEAD@Z DD imagerel ?winGetFileWriteTime@@YA?AU_FILETIME@@PEAD@Z
	DD	imagerel ?winGetFileWriteTime@@YA?AU_FILETIME@@PEAD@Z+94
	DD	imagerel $unwind$?winGetFileWriteTime@@YA?AU_FILETIME@@PEAD@Z
$pdata$?winReloadApplication@@YAXXZ DD imagerel ?winReloadApplication@@YAXXZ
	DD	imagerel ?winReloadApplication@@YAXXZ+253
	DD	imagerel $unwind$?winReloadApplication@@YAXXZ
$pdata$?winSet2DViewport@@YAXIIII@Z DD imagerel ?winSet2DViewport@@YAXIIII@Z
	DD	imagerel ?winSet2DViewport@@YAXIIII@Z+176
	DD	imagerel $unwind$?winSet2DViewport@@YAXIIII@Z
$pdata$?winCreateSprite2D@@YAXPEAUSprite2D@@IIIPEAX@Z DD imagerel ?winCreateSprite2D@@YAXPEAUSprite2D@@IIIPEAX@Z
	DD	imagerel ?winCreateSprite2D@@YAXPEAUSprite2D@@IIIPEAX@Z+708
	DD	imagerel $unwind$?winCreateSprite2D@@YAXPEAUSprite2D@@IIIPEAX@Z
$pdata$?winDeleteSprite2D@@YAXPEAUSprite2D@@@Z DD imagerel ?winDeleteSprite2D@@YAXPEAUSprite2D@@@Z
	DD	imagerel ?winDeleteSprite2D@@YAXPEAUSprite2D@@@Z+50
	DD	imagerel $unwind$?winDeleteSprite2D@@YAXPEAUSprite2D@@@Z
$pdata$?winRenderSprite2D@@YAXPEAUSprite2D@@MMMM@Z DD imagerel ?winRenderSprite2D@@YAXPEAUSprite2D@@MMMM@Z
	DD	imagerel ?winRenderSprite2D@@YAXPEAUSprite2D@@MMMM@Z+710
	DD	imagerel $unwind$?winRenderSprite2D@@YAXPEAUSprite2D@@MMMM@Z
$pdata$?winSetColor2D@@YAXMMMM@Z DD imagerel ?winSetColor2D@@YAXMMMM@Z
	DD	imagerel ?winSetColor2D@@YAXMMMM@Z+120
	DD	imagerel $unwind$?winSetColor2D@@YAXMMMM@Z
$pdata$?winClearRenderTarget2D@@YAXMMMM@Z DD imagerel ?winClearRenderTarget2D@@YAXMMMM@Z
	DD	imagerel ?winClearRenderTarget2D@@YAXMMMM@Z+120
	DD	imagerel $unwind$?winClearRenderTarget2D@@YAXMMMM@Z
$pdata$?winDrawRectangle@@YAXMMMM@Z DD imagerel ?winDrawRectangle@@YAXMMMM@Z
	DD	imagerel ?winDrawRectangle@@YAXMMMM@Z+341
	DD	imagerel $unwind$?winDrawRectangle@@YAXMMMM@Z
$pdata$?winFillRectangle@@YAXMMMM@Z DD imagerel ?winFillRectangle@@YAXMMMM@Z
	DD	imagerel ?winFillRectangle@@YAXMMMM@Z+320
	DD	imagerel $unwind$?winFillRectangle@@YAXMMMM@Z
$pdata$?winDrawEllipse@@YAXMMMM@Z DD imagerel ?winDrawEllipse@@YAXMMMM@Z
	DD	imagerel ?winDrawEllipse@@YAXMMMM@Z+329
	DD	imagerel $unwind$?winDrawEllipse@@YAXMMMM@Z
$pdata$?winFillEllipse@@YAXMMMM@Z DD imagerel ?winFillEllipse@@YAXMMMM@Z
	DD	imagerel ?winFillEllipse@@YAXMMMM@Z+290
	DD	imagerel $unwind$?winFillEllipse@@YAXMMMM@Z
$pdata$?winDrawLine@@YAXMMMM@Z DD imagerel ?winDrawLine@@YAXMMMM@Z
	DD	imagerel ?winDrawLine@@YAXMMMM@Z+261
	DD	imagerel $unwind$?winDrawLine@@YAXMMMM@Z
$pdata$?winDrawText@@YAXPEADMM@Z DD imagerel ?winDrawText@@YAXPEADMM@Z
	DD	imagerel ?winDrawText@@YAXPEADMM@Z+516
	DD	imagerel $unwind$?winDrawText@@YAXPEADMM@Z
$pdata$?winGetTextDimensions@@YAXPEADPEAM1@Z DD imagerel ?winGetTextDimensions@@YAXPEADPEAM1@Z
	DD	imagerel ?winGetTextDimensions@@YAXPEADPEAM1@Z+348
	DD	imagerel $unwind$?winGetTextDimensions@@YAXPEADPEAM1@Z
$pdata$?winBegin2DRender@@YAXXZ DD imagerel ?winBegin2DRender@@YAXXZ
	DD	imagerel ?winBegin2DRender@@YAXXZ+40
	DD	imagerel $unwind$?winBegin2DRender@@YAXXZ
$pdata$?winEnd2DRender@@YAXXZ DD imagerel ?winEnd2DRender@@YAXXZ
	DD	imagerel ?winEnd2DRender@@YAXXZ+45
	DD	imagerel $unwind$?winEnd2DRender@@YAXXZ
$pdata$?winInitializeRendering2D@@YAXXZ DD imagerel ?winInitializeRendering2D@@YAXXZ
	DD	imagerel ?winInitializeRendering2D@@YAXXZ+885
	DD	imagerel $unwind$?winInitializeRendering2D@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PEAPEAUID2D1Factory@@@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PEAPEAUID2D1Factory@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?winStartAudioStream@@YAXXZ DD imagerel ?winStartAudioStream@@YAXXZ
	DD	imagerel ?winStartAudioStream@@YAXXZ+48
	DD	imagerel $unwind$?winStartAudioStream@@YAXXZ
$pdata$?winStopAudioStream@@YAXXZ DD imagerel ?winStopAudioStream@@YAXXZ
	DD	imagerel ?winStopAudioStream@@YAXXZ+40
	DD	imagerel $unwind$?winStopAudioStream@@YAXXZ
$pdata$?winClearAudioBuffer@@YAXXZ DD imagerel ?winClearAudioBuffer@@YAXXZ
	DD	imagerel ?winClearAudioBuffer@@YAXXZ+677
	DD	imagerel $unwind$?winClearAudioBuffer@@YAXXZ
$pdata$?winUninitializeAudioStream@@YAXXZ DD imagerel ?winUninitializeAudioStream@@YAXXZ
	DD	imagerel ?winUninitializeAudioStream@@YAXXZ+169
	DD	imagerel $unwind$?winUninitializeAudioStream@@YAXXZ
$pdata$?winInitializeAudioStream@@YAXIIIM@Z DD imagerel ?winInitializeAudioStream@@YAXIIIM@Z
	DD	imagerel ?winInitializeAudioStream@@YAXIIIM@Z+953
	DD	imagerel $unwind$?winInitializeAudioStream@@YAXIIIM@Z
$pdata$?WindowProc@@YA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN42
	DD	imagerel $LN42+1896
	DD	imagerel $unwind$?WindowProc@@YA_JPEAUHWND__@@I_K_J@Z
$pdata$?winInitializeWindow@@YAXIIPEAD@Z DD imagerel ?winInitializeWindow@@YAXIIPEAD@Z
	DD	imagerel ?winInitializeWindow@@YAXIIPEAD@Z+796
	DD	imagerel $unwind$?winInitializeWindow@@YAXIIPEAD@Z
$pdata$?winInitializeOS@@YAXXZ DD imagerel ?winInitializeOS@@YAXXZ
	DD	imagerel ?winInitializeOS@@YAXXZ+2831
	DD	imagerel $unwind$?winInitializeOS@@YAXXZ
pdata	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@00000000000000000000000000000000
CONST	SEGMENT
__xmm@00000000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@43b40000
CONST	SEGMENT
__real@43b40000 DD 043b40000r			; 360
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@41400000
CONST	SEGMENT
__real@41400000 DD 041400000r			; 12
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@41100000
CONST	SEGMENT
__real@41100000 DD 041100000r			; 9
CONST	ENDS
;	COMDAT __real@40efffe000000000
CONST	SEGMENT
__real@40efffe000000000 DQ 040efffe000000000r	; 65535
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@406fe00000000000
CONST	SEGMENT
__real@406fe00000000000 DQ 0406fe00000000000r	; 255
CONST	ENDS
;	COMDAT __real@401921fb54442d18
CONST	SEGMENT
__real@401921fb54442d18 DQ 0401921fb54442d18r	; 6.28319
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3feccccccccccccd
CONST	SEGMENT
__real@3feccccccccccccd DQ 03feccccccccccccdr	; 0.9
CONST	ENDS
;	COMDAT __real@3feb333333333333
CONST	SEGMENT
__real@3feb333333333333 DQ 03feb333333333333r	; 0.85
CONST	ENDS
;	COMDAT __real@3fea8f5c28f5c28f
CONST	SEGMENT
__real@3fea8f5c28f5c28f DQ 03fea8f5c28f5c28fr	; 0.83
CONST	ENDS
;	COMDAT __real@3fe999999999999a
CONST	SEGMENT
__real@3fe999999999999a DQ 03fe999999999999ar	; 0.8
CONST	ENDS
;	COMDAT __real@3fe8000000000000
CONST	SEGMENT
__real@3fe8000000000000 DQ 03fe8000000000000r	; 0.75
CONST	ENDS
;	COMDAT __real@3fe70a3d70a3d70a
CONST	SEGMENT
__real@3fe70a3d70a3d70a DQ 03fe70a3d70a3d70ar	; 0.72
CONST	ENDS
;	COMDAT __real@3fe6666666666666
CONST	SEGMENT
__real@3fe6666666666666 DQ 03fe6666666666666r	; 0.7
CONST	ENDS
;	COMDAT __real@3fe3333333333333
CONST	SEGMENT
__real@3fe3333333333333 DQ 03fe3333333333333r	; 0.6
CONST	ENDS
;	COMDAT __real@3fe23d70a3d70a3d
CONST	SEGMENT
__real@3fe23d70a3d70a3d DQ 03fe23d70a3d70a3dr	; 0.57
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fdccccccccccccd
CONST	SEGMENT
__real@3fdccccccccccccd DQ 03fdccccccccccccdr	; 0.45
CONST	ENDS
;	COMDAT __real@3fd999999999999a
CONST	SEGMENT
__real@3fd999999999999a DQ 03fd999999999999ar	; 0.4
CONST	ENDS
;	COMDAT __real@3fd51eb851eb851f
CONST	SEGMENT
__real@3fd51eb851eb851f DQ 03fd51eb851eb851fr	; 0.33
CONST	ENDS
;	COMDAT __real@3fd3333333333333
CONST	SEGMENT
__real@3fd3333333333333 DQ 03fd3333333333333r	; 0.3
CONST	ENDS
;	COMDAT __real@3fc999999999999a
CONST	SEGMENT
__real@3fc999999999999a DQ 03fc999999999999ar	; 0.2
CONST	ENDS
;	COMDAT __real@3fc70a3d70a3d70a
CONST	SEGMENT
__real@3fc70a3d70a3d70a DQ 03fc70a3d70a3d70ar	; 0.18
CONST	ENDS
;	COMDAT __real@3fc3333333333333
CONST	SEGMENT
__real@3fc3333333333333 DQ 03fc3333333333333r	; 0.15
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3fb47ae147ae147b
CONST	SEGMENT
__real@3fb47ae147ae147b DQ 03fb47ae147ae147br	; 0.08
CONST	ENDS
;	COMDAT __real@3fa999999999999a
CONST	SEGMENT
__real@3fa999999999999a DQ 03fa999999999999ar	; 0.05
CONST	ENDS
;	COMDAT __real@3f9eb851eb851eb8
CONST	SEGMENT
__real@3f9eb851eb851eb8 DQ 03f9eb851eb851eb8r	; 0.03
CONST	ENDS
;	COMDAT __real@3f847ae147ae147b
CONST	SEGMENT
__real@3f847ae147ae147b DQ 03f847ae147ae147br	; 0.01
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f333333
CONST	SEGMENT
__real@3f333333 DD 03f333333r			; 0.7
CONST	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT __real@3f0ccccd
CONST	SEGMENT
__real@3f0ccccd DD 03f0ccccdr			; 0.55
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT _GUID_06152247_6f50_465a_9245_118bfd3b6007
CONST	SEGMENT
_GUID_06152247_6f50_465a_9245_118bfd3b6007 DD 06152247H
	DW	06f50H
	DW	0465aH
	DB	092H
	DB	045H
	DB	011H
	DB	08bH
	DB	0fdH
	DB	03bH
	DB	060H
	DB	07H
CONST	ENDS
;	COMDAT _GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48
CONST	SEGMENT
_GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48 DD 0b859ee5aH
	DW	0d838H
	DW	04b5bH
	DB	0a2H
	DB	0e8H
	DB	01aH
	DB	0dcH
	DB	07dH
	DB	093H
	DB	0dbH
	DB	048H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PEAPEAUID2D1Factory@@@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@AEBU_GUID@@PEAPEAX@Z DD 011201H
	DD	04212H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	01fH
	DB	05bH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??DMatrix3x2F@D2D1@@QEBA?AV01@AEBV01@@Z DD 032419H
	DD	070118215H
	DD	06010H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	020H
	DB	05dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Rotation@Matrix3x2F@D2D1@@SA?AV12@MUD2D_POINT_2F@@@Z DD 032519H
	DD	070128216H
	DD	06011H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	015H
	DB	07dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Identity@Matrix3x2F@D2D1@@SA?AV12@XZ DD 031a19H
	DD	07007820bH
	DD	06006H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ColorF@D2D1@@QEAA@W4Enum@01@M@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z DD 031a01H
	DD	07016421aH
	DD	06015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	024H
	DB	080H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@AEBUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z DD 032919H
	DD	07016621aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	020H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z DD 010c01H
	DD	0220cH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	026H
	DB	067H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Ellipse@D2D1@@YA?AUD2D1_ELLIPSE@@AEBUD2D_POINT_2F@@MM@Z DD 032b19H
	DD	07018421cH
	DD	06017H
	DD	imagerel __GSHandlerCheck
	DD	010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	023H
	DB	05fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Rect@I@D2D1@@YA?AUD2D_RECT_U@@IIII@Z DD 032819H
	DD	070154219H
	DD	06014H
	DD	imagerel __GSHandlerCheck
	DD	010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	023H
	DB	085H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RectU@D2D1@@YA?AUD2D_RECT_U@@IIII@Z DD 032819H
	DD	07015c219H
	DD	06014H
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	027H
	DB	073H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z DD 032c19H
	DD	07019421dH
	DD	06018H
	DD	imagerel __GSHandlerCheck
	DD	010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	027H
	DB	091H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z DD 032c19H
	DD	07019c21dH
	DD	06018H
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z DD 010c01H
	DD	0220cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z DD 010c01H
	DD	0620cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Point2@M@D2D1@@YA?AUD2D_POINT_2F@@MM@Z DD 011001H
	DD	02210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z DD 011001H
	DD	06210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateHwndRenderTarget@ID2D1Factory@@QEAAJAEBUD2D1_RENDER_TARGET_PROPERTIES@@AEBUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAPEAUID2D1HwndRenderTarget@@@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@ID2D1RenderTarget@@QEAAXAEBU_D3DCOLORVALUE@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetTransform@ID2D1RenderTarget@@QEAAXAEBUD2D_MATRIX_3X2_F@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DrawBitmap@ID2D1RenderTarget@@QEAAXPEAUID2D1Bitmap@@AEBUD2D_RECT_F@@MW4D2D1_BITMAP_INTERPOLATION_MODE@@1@Z DD 011901H
	DD	06219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FillEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DrawEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z DD 011901H
	DD	06219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FillRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DrawRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z DD 011901H
	DD	06219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateSolidColorBrush@ID2D1RenderTarget@@QEAAJAEBU_D3DCOLORVALUE@@PEAPEAUID2D1SolidColorBrush@@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateBitmap@ID2D1RenderTarget@@QEAAJUD2D_SIZE_U@@AEBUD2D1_BITMAP_PROPERTIES@@PEAPEAUID2D1Bitmap@@@Z DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetColor@ID2D1SolidColorBrush@@QEAAXAEBU_D3DCOLORVALUE@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4Animation@@QEAAAEAU0@AEBU0@@Z DD 010e01H
	DD	0820eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$vsprintf DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsnprintf_l DD 011801H
	DD	08218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 011801H
	DD	06218H
xdata	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winInitializeWindow@@YAXIIPEAD@Z
	DD	01fH
	DD	0303H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?WindowProc@@YA_JPEAUHWND__@@I_K_J@Z
	DD	021H
	DD	072eH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winInitializeAudioStream@@YAXIIIM@Z
	DD	025H
	DD	03a0H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winInitializeRendering2D@@YAXXZ
	DD	014H
	DD	035bH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winGetTextDimensions@@YAXPEADPEAM1@Z
	DD	020H
	DD	0144H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winDrawText@@YAXPEADMM@Z
	DD	022H
	DD	01ecH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winFillEllipse@@YAXMMMM@Z
	DD	028H
	DD	010eH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winDrawEllipse@@YAXMMMM@Z
	DD	028H
	DD	0135H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winFillRectangle@@YAXMMMM@Z
	DD	028H
	DD	012cH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winDrawRectangle@@YAXMMMM@Z
	DD	028H
	DD	0141H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winClearRenderTarget2D@@YAXMMMM@Z
	DD	026H
	DD	066H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winSetColor2D@@YAXMMMM@Z
	DD	026H
	DD	066H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winRenderSprite2D@@YAXPEAUSprite2D@@MMMM@Z
	DD	02aH
	DD	02acH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winCreateSprite2D@@YAXPEAUSprite2D@@IIIPEAX@Z
	DD	026H
	DD	02aaH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winSet2DViewport@@YAXIIII@Z
	DD	020H
	DD	09eH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winGetFileWriteTime@@YA?AU_FILETIME@@PEAD@Z
	DD	016H
	DD	046H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?winGetListOfFilesInDirectory@@YAXPEAD0PEAI@Z
	DD	020H
	DD	011aH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?runImageMapPanel@@YAXMMMM@Z
	DD	029H
	DD	0bb6H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?runAnimationPanel@@YAXMMMM@Z
	DD	02bH
	DD	03aaH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?runControllPanel@@YAXMMMM@Z
	DD	029H
	DD	027b7H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?uncompressPNG@@YAPEAMPEBDPEAI111@Z
	DD	027H
	DD	0250cH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?button@@YA_NPEADMMMM@Z
	DD	028H
	DD	069eH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?f32Input@@YA_NPEAMMMMM@Z
	DD	028H
	DD	0b31H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?textInput@@YA_NPEADMMMM@Z
	DD	028H
	DD	095cH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?checkBox@@YA_NPEA_NMMMM@Z
	DD	025H
	DD	05bbH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?lookAt@@YA?ATMatrix4@@TVector3@@00@Z
	DD	027H
	DD	04c8H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?clamp@@YA?ATVector2@@T1@00@Z
	DD	022H
	DD	07dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Vector4@@QEAA@MMMM@Z DD 011b01H
	DD	0221bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??XVector3@@QEAAXAEAT0@@Z DD 010e01H
	DD	0220eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Vector3@@QEAA@MMM@Z DD 011b01H
	DD	0221bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Vector3@@QEAA@M@Z DD 010f01H
	DD	0220fH
xdata	ENDS
xdata	SEGMENT
$unwind$?getLength@@YAIPEAD@Z DD 010901H
	DD	02209H
$unwind$?stringToF32@@YAMPEBD@Z DD 010901H
	DD	04209H
$unwind$?clamp@@YA?ATVector2@@T1@00@Z DD 012719H
	DD	06218H
	DD	imagerel __GSHandlerCheck
	DD	028H
$unwind$?map@@YAMMMMMM@Z DD 011c01H
	DD	0221cH
$unwind$??G@YA?ATVector2@@T0@0@Z DD 011301H
	DD	04213H
$unwind$??G@YA?ATVector3@@T0@0@Z DD 011301H
	DD	08213H
$unwind$??K@YA?ATVector2@@T0@0@Z DD 011301H
	DD	04213H
$unwind$??H@YA?ATVector2@@T0@M@Z DD 011401H
	DD	04214H
$unwind$??G@YA?ATVector3@@T0@@Z DD 010e01H
	DD	0a20eH
$unwind$?squareRoot@@YAMM@Z DD 010a01H
	DD	0620aH
$unwind$?length@@YAMTVector3@@@Z DD 010901H
	DD	08209H
$unwind$?normalOf@@YA?ATVector3@@T1@@Z DD 010e01H
	DD	0820eH
$unwind$?cross@@YA?ATVector3@@T1@0@Z DD 021601H
	DD	01d0116H
$unwind$?lookAt@@YA?ATMatrix4@@TVector3@@00@Z DD 042f19H
	DD	03f011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck
	DD	01e0H
$unwind$?inBounds@@YA_NTVector2@@MMMM@Z DD 011b01H
	DD	0221bH
$unwind$?finalizeGUI@@YAXXZ DD 010401H
	DD	04204H
$unwind$?checkBox@@YA_NPEA_NMMMM@Z DD 012a19H
	DD	0e21bH
	DD	imagerel __GSHandlerCheck
	DD	068H
$unwind$?textInput@@YA_NPEADMMMM@Z DD 023019H
	DD	013011eH
	DD	imagerel __GSHandlerCheck
	DD	088H
$unwind$?f32Input@@YA_NPEAMMMMM@Z DD 023019H
	DD	015011eH
	DD	imagerel __GSHandlerCheck
	DD	090H
$unwind$?button@@YA_NPEADMMMM@Z DD 023019H
	DD	013011eH
	DD	imagerel __GSHandlerCheck
	DD	088H
$unwind$?toggleSwitch@@YAXPEAPEADPEAIIMMMM@Z DD 011901H
	DD	06219H
$unwind$?copyMemory@@YAXPEAX0_K@Z DD 011301H
	DD	02213H
$unwind$?setMemory@@YAXPEAXDI@Z DD 011201H
	DD	02212H
$unwind$?readBitsFromArray@@YAIPEAEIPEAI_N@Z DD 011701H
	DD	02217H
$unwind$?readBitsFromArrayReversed@@YAIPEAEIPEAI_N@Z DD 011701H
	DD	02217H
$unwind$?clearPNGHuffman@@YAXPEAUPNGHuffman@@@Z DD 010901H
	DD	04209H
$unwind$?generatePNGHuffmanFromCodeLengths@@YA?AUPNGHuffman@@IPEAII@Z DD 041c01H
	DD	017011cH
	DD	060147015H
$unwind$?parseHuffmanCodeFromData@@YAIPEAEPEAIPEAUPNGHuffman@@@Z DD 011301H
	DD	06213H
$unwind$?uncompressPNG@@YAPEAMPEBDPEAI111@Z DD 042f19H
	DD	01d9011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck
	DD	0eb0H
$unwind$?runControllPanel@@YAXMMMM@Z DD 023119H
	DD	03d011fH
	DD	imagerel __GSHandlerCheck
	DD	01d0H
$unwind$?runAnimationPanel@@YAXMMMM@Z DD 043319H
	DD	0130121H
	DD	06019701aH
	DD	imagerel __GSHandlerCheck
	DD	080H
$unwind$?runImageMapPanel@@YAXMMMM@Z DD 023119H
	DD	01f011fH
	DD	imagerel __GSHandlerCheck
	DD	0e0H
$unwind$updateApplication DD 010901H
	DD	06209H
$unwind$WinMain DD 031c01H
	DD	012011cH
	DD	07015H
$unwind$?winGetBytesPerPixelFromFormat@@YAIW4DXGI_FORMAT@@@Z DD 010801H
	DD	02208H
$unwind$?winAllocateMemory@@YAPEAXI@Z DD 010801H
	DD	06208H
$unwind$?winFreeMemory@@YAXPEAX@Z DD 010901H
	DD	04209H
$unwind$?winSelectFileFromComputer@@YA_NPEAD@Z DD 030d01H
	DD	01a010dH
	DD	07006H
$unwind$?winCheckIfDirectoryExists@@YA_NPEAD@Z DD 010901H
	DD	06209H
$unwind$?winCheckIfFileExists@@YA_NPEAD@Z DD 010901H
	DD	06209H
$unwind$?winCreateDirectory@@YA_NPEAD@Z DD 010901H
	DD	06209H
$unwind$?winCreateFile@@YA_NPEADPEAXI_N@Z DD 011801H
	DD	0c218H
$unwind$?winGetListOfFilesInDirectory@@YAXPEAD0PEAI@Z DD 022819H
	DD	0330116H
	DD	imagerel __GSHandlerCheck
	DD	0180H
$unwind$?winReadFileIntoBuffer@@YAXPEADPEAX@Z DD 010e01H
	DD	0a20eH
$unwind$?winBuildVariableString@@YAXPEAD0ZZ DD 011801H
	DD	06218H
$unwind$?winBuildVariableStringV@@YAXPEAD00@Z DD 011301H
	DD	04213H
$unwind$?winGetSystemTime@@YA_KXZ DD 010401H
	DD	06204H
$unwind$?winGetFileWriteTime@@YA?AU_FILETIME@@PEAD@Z DD 021e19H
	DD	031010cH
	DD	imagerel __GSHandlerCheck
	DD	0170H
$unwind$?winReloadApplication@@YAXXZ DD 010401H
	DD	04204H
$unwind$?winSet2DViewport@@YAXIIII@Z DD 012519H
	DD	08216H
	DD	imagerel __GSHandlerCheck
	DD	038H
$unwind$?winCreateSprite2D@@YAXPEAUSprite2D@@IIIPEAX@Z DD 042e19H
	DD	01b011cH
	DD	060147015H
	DD	imagerel __GSHandlerCheck
	DD	0c0H
$unwind$?winDeleteSprite2D@@YAXPEAUSprite2D@@@Z DD 010901H
	DD	04209H
$unwind$?winRenderSprite2D@@YAXPEAUSprite2D@@MMMM@Z DD 043219H
	DD	01b0120H
	DD	060187019H
	DD	imagerel __GSHandlerCheck
	DD	0c8H
$unwind$?winSetColor2D@@YAXMMMM@Z DD 012b19H
	DD	0a21cH
	DD	imagerel __GSHandlerCheck
	DD	040H
$unwind$?winClearRenderTarget2D@@YAXMMMM@Z DD 012b19H
	DD	0a21cH
	DD	imagerel __GSHandlerCheck
	DD	040H
$unwind$?winDrawRectangle@@YAXMMMM@Z DD 032d19H
	DD	0701ac21eH
	DD	06019H
	DD	imagerel __GSHandlerCheck
	DD	050H
$unwind$?winFillRectangle@@YAXMMMM@Z DD 032d19H
	DD	0701ac21eH
	DD	06019H
	DD	imagerel __GSHandlerCheck
	DD	050H
$unwind$?winDrawEllipse@@YAXMMMM@Z DD 032d19H
	DD	0701ac21eH
	DD	06019H
	DD	imagerel __GSHandlerCheck
	DD	058H
$unwind$?winFillEllipse@@YAXMMMM@Z DD 032d19H
	DD	0701aa21eH
	DD	06019H
	DD	imagerel __GSHandlerCheck
	DD	048H
$unwind$?winDrawLine@@YAXMMMM@Z DD 011c01H
	DD	0821cH
$unwind$?winDrawText@@YAXPEADMM@Z DD 022a19H
	DD	0510118H
	DD	imagerel __GSHandlerCheck
	DD	0270H
$unwind$?winGetTextDimensions@@YAXPEADPEAM1@Z DD 022819H
	DD	0530116H
	DD	imagerel __GSHandlerCheck
	DD	0280H
$unwind$?winBegin2DRender@@YAXXZ DD 010401H
	DD	04204H
$unwind$?winEnd2DRender@@YAXXZ DD 010401H
	DD	04204H
$unwind$?winInitializeRendering2D@@YAXXZ DD 041c19H
	DD	027010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0128H
$unwind$?winStartAudioStream@@YAXXZ DD 010401H
	DD	04204H
$unwind$?winStopAudioStream@@YAXXZ DD 010401H
	DD	04204H
$unwind$?winClearAudioBuffer@@YAXXZ DD 020701H
	DD	0150107H
$unwind$?winUninitializeAudioStream@@YAXXZ DD 010401H
	DD	04204H
$unwind$?winInitializeAudioStream@@YAXIIIM@Z DD 032d19H
	DD	012011bH
	DD	07014H
	DD	imagerel __GSHandlerCheck
	DD	080H
$unwind$?WindowProc@@YA_JPEAUHWND__@@I_K_J@Z DD 012619H
	DD	0e217H
	DD	imagerel __GSHandlerCheck
	DD	068H
$unwind$?winInitializeWindow@@YAXIIPEAD@Z DD 032719H
	DD	01e0115H
	DD	0700eH
	DD	imagerel __GSHandlerCheck
	DD	0e8H
$unwind$?winInitializeOS@@YAXXZ DD 010401H
	DD	08204H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
totalSize$ = 32
c$ = 40
tv67 = 48
?winInitializeOS@@YAXXZ PROC				; winInitializeOS
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 748
	sub	rsp, 72					; 00000048H
; Line 749
	mov	DWORD PTR totalSize$[rsp], 1090603536	; 41014a10H
; Line 751
	mov	eax, DWORD PTR totalSize$[rsp]
	mov	QWORD PTR tv67[rsp], rax
	call	QWORD PTR __imp_GetProcessHeap
	mov	rcx, QWORD PTR tv67[rsp]
	mov	r8, rcx
	mov	edx, 8
	mov	rcx, rax
	call	QWORD PTR __imp_HeapAlloc
	mov	QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA, rax
; Line 752
	cmp	QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA, 0
	jne	SHORT $LN6@winInitial
; Line 753
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164659
	lea	rdx, OFFSET FLAT:$SG164660
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 754
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 0
; Line 755
	jmp	$LN1@winInitial
$LN6@winInitial:
; Line 758
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	add	rax, 160				; 000000a0H
	mov	QWORD PTR ?os@@3PEAUOSInterface@@EA, rax
; Line 759
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	add	rax, 1712				; 000006b0H
	mov	QWORD PTR ?win32Application@@3PEAUSpranimator@@EA, rax
; Line 761
	mov	rax, QWORD PTR ?win32Application@@3PEAUSpranimator@@EA
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	QWORD PTR [rax], rcx
; Line 763
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	add	rax, 128				; 00000080H
	mov	r8d, 260				; 00000104H
	mov	rdx, rax
	xor	ecx, ecx
	call	QWORD PTR __imp_GetModuleFileNameA
; Line 764
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	add	rax, 128				; 00000080H
	mov	QWORD PTR c$[rsp], rax
$LN2@winInitial:
; Line 765
	mov	rax, QWORD PTR c$[rsp]
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN3@winInitial
; Line 766
	mov	rax, QWORD PTR c$[rsp]
	inc	rax
	mov	QWORD PTR c$[rsp], rax
; Line 767
	jmp	SHORT $LN2@winInitial
$LN3@winInitial:
$LN4@winInitial:
; Line 768
	mov	rax, QWORD PTR c$[rsp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN5@winInitial
; Line 769
	mov	rax, QWORD PTR c$[rsp]
	dec	rax
	mov	QWORD PTR c$[rsp], rax
; Line 770
	jmp	SHORT $LN4@winInitial
$LN5@winInitial:
; Line 771
	mov	rax, QWORD PTR c$[rsp]
	inc	rax
	mov	QWORD PTR c$[rsp], rax
; Line 772
	mov	rax, QWORD PTR c$[rsp]
	mov	BYTE PTR [rax], 0
; Line 774
	mov	eax, 48					; 00000030H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1520], ax
; Line 775
	mov	eax, 49					; 00000031H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1522], ax
; Line 776
	mov	eax, 50					; 00000032H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1524], ax
; Line 777
	mov	eax, 51					; 00000033H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1526], ax
; Line 778
	mov	eax, 52					; 00000034H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1528], ax
; Line 779
	mov	eax, 53					; 00000035H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1530], ax
; Line 780
	mov	eax, 54					; 00000036H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1532], ax
; Line 781
	mov	eax, 55					; 00000037H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1534], ax
; Line 782
	mov	eax, 56					; 00000038H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1536], ax
; Line 783
	mov	eax, 57					; 00000039H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1538], ax
; Line 784
	mov	eax, 65					; 00000041H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1540], ax
; Line 785
	mov	eax, 66					; 00000042H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1542], ax
; Line 786
	mov	eax, 67					; 00000043H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1544], ax
; Line 787
	mov	eax, 68					; 00000044H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1546], ax
; Line 788
	mov	eax, 69					; 00000045H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1548], ax
; Line 789
	mov	eax, 70					; 00000046H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1550], ax
; Line 790
	mov	eax, 71					; 00000047H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1552], ax
; Line 791
	mov	eax, 72					; 00000048H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1554], ax
; Line 792
	mov	eax, 73					; 00000049H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1556], ax
; Line 793
	mov	eax, 74					; 0000004aH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1558], ax
; Line 794
	mov	eax, 75					; 0000004bH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1560], ax
; Line 795
	mov	eax, 76					; 0000004cH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1562], ax
; Line 796
	mov	eax, 77					; 0000004dH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1564], ax
; Line 797
	mov	eax, 78					; 0000004eH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1566], ax
; Line 798
	mov	eax, 79					; 0000004fH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1568], ax
; Line 799
	mov	eax, 80					; 00000050H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1570], ax
; Line 800
	mov	eax, 81					; 00000051H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1572], ax
; Line 801
	mov	eax, 82					; 00000052H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1574], ax
; Line 802
	mov	eax, 83					; 00000053H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1576], ax
; Line 803
	mov	eax, 84					; 00000054H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1578], ax
; Line 804
	mov	eax, 85					; 00000055H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1580], ax
; Line 805
	mov	eax, 86					; 00000056H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1582], ax
; Line 806
	mov	eax, 87					; 00000057H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1584], ax
; Line 807
	mov	eax, 88					; 00000058H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1586], ax
; Line 808
	mov	eax, 89					; 00000059H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1588], ax
; Line 809
	mov	eax, 90					; 0000005aH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1590], ax
; Line 810
	mov	eax, 112				; 00000070H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1592], ax
; Line 811
	mov	eax, 113				; 00000071H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1594], ax
; Line 812
	mov	eax, 114				; 00000072H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1596], ax
; Line 813
	mov	eax, 115				; 00000073H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1598], ax
; Line 814
	mov	eax, 116				; 00000074H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1600], ax
; Line 815
	mov	eax, 117				; 00000075H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1602], ax
; Line 816
	mov	eax, 118				; 00000076H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1604], ax
; Line 817
	mov	eax, 119				; 00000077H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1606], ax
; Line 818
	mov	eax, 120				; 00000078H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1608], ax
; Line 819
	mov	eax, 121				; 00000079H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1610], ax
; Line 820
	mov	eax, 122				; 0000007aH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1612], ax
; Line 821
	mov	eax, 123				; 0000007bH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1614], ax
; Line 822
	mov	eax, 160				; 000000a0H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1616], ax
; Line 823
	mov	eax, 161				; 000000a1H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1618], ax
; Line 824
	mov	eax, 17
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1620], ax
; Line 825
	mov	eax, 163				; 000000a3H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1622], ax
; Line 826
	mov	eax, 38					; 00000026H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1624], ax
; Line 827
	mov	eax, 40					; 00000028H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1626], ax
; Line 828
	mov	eax, 37					; 00000025H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1628], ax
; Line 829
	mov	eax, 39					; 00000027H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1630], ax
; Line 830
	mov	eax, 32					; 00000020H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1632], ax
; Line 831
	mov	eax, 13
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1634], ax
; Line 832
	mov	eax, 27
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1636], ax
; Line 833
	mov	eax, 186				; 000000baH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1638], ax
; Line 834
	mov	eax, 33					; 00000021H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1642], ax
; Line 835
	mov	eax, 34					; 00000022H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1644], ax
; Line 836
	mov	eax, 9
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1646], ax
; Line 837
	mov	eax, 188				; 000000bcH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1648], ax
; Line 838
	mov	eax, 190				; 000000beH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1650], ax
; Line 839
	mov	eax, 220				; 000000dcH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1652], ax
; Line 840
	mov	eax, 191				; 000000bfH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1654], ax
; Line 841
	mov	eax, 8
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1640], ax
; Line 842
	mov	eax, 222				; 000000deH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1656], ax
; Line 843
	mov	eax, 219				; 000000dbH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1658], ax
; Line 844
	mov	eax, 221				; 000000ddH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1660], ax
; Line 845
	mov	eax, 187				; 000000bbH
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1662], ax
; Line 846
	mov	eax, 18
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	WORD PTR [rcx+1664], ax
; Line 848
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1666], 0
; Line 849
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1667], 1
; Line 850
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1668], 2
; Line 851
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1669], 0
; Line 852
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1670], 1
; Line 853
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1671], 2
; Line 854
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1672], 3
; Line 855
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1673], 4
; Line 856
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1674], 5
; Line 857
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1675], 6
; Line 858
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1676], 7
; Line 859
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1677], 8
; Line 860
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1678], 9
; Line 861
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1679], 10
; Line 862
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1680], 11
; Line 863
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1681], 12
; Line 864
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1682], 13
; Line 866
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	DWORD PTR [rax+1684], 71		; 00000047H
; Line 867
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	DWORD PTR [rax+1688], 81		; 00000051H
; Line 868
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	DWORD PTR [rax+1692], 80		; 00000050H
; Line 869
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	DWORD PTR [rax+1696], 83		; 00000053H
; Line 870
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	DWORD PTR [rax+1700], 61		; 0000003dH
; Line 871
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	DWORD PTR [rax+1704], 49		; 00000031H
; Line 872
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	DWORD PTR [rax+1708], 28
; Line 874
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winInitializeWindow@@YAXIIPEAD@Z ; winInitializeWindow
	mov	QWORD PTR [rax+1224], rcx
; Line 875
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winInitializeRendering2D@@YAXXZ ; winInitializeRendering2D
	mov	QWORD PTR [rax+1232], rcx
; Line 876
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winInitializeAudioStream@@YAXIIIM@Z ; winInitializeAudioStream
	mov	QWORD PTR [rax+1240], rcx
; Line 877
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winUninitializeAudioStream@@YAXXZ ; winUninitializeAudioStream
	mov	QWORD PTR [rax+1248], rcx
; Line 878
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winSetAudioStreamUpdateFunction1@@YAXP6AMM@Z@Z ; winSetAudioStreamUpdateFunction1
	mov	QWORD PTR [rax+1256], rcx
; Line 879
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winSetAudioStreamUpdateFunction2@@YAXP6AXMPEAM0@Z@Z ; winSetAudioStreamUpdateFunction2
	mov	QWORD PTR [rax+1264], rcx
; Line 880
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winSetColor2D@@YAXMMMM@Z ; winSetColor2D
	mov	QWORD PTR [rax+1272], rcx
; Line 881
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winClearRenderTarget2D@@YAXMMMM@Z ; winClearRenderTarget2D
	mov	QWORD PTR [rax+1280], rcx
; Line 882
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winDrawRectangle@@YAXMMMM@Z ; winDrawRectangle
	mov	QWORD PTR [rax+1288], rcx
; Line 883
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winFillRectangle@@YAXMMMM@Z ; winFillRectangle
	mov	QWORD PTR [rax+1296], rcx
; Line 884
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winDrawEllipse@@YAXMMMM@Z ; winDrawEllipse
	mov	QWORD PTR [rax+1304], rcx
; Line 885
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winFillEllipse@@YAXMMMM@Z ; winFillEllipse
	mov	QWORD PTR [rax+1312], rcx
; Line 886
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winDrawLine@@YAXMMMM@Z ; winDrawLine
	mov	QWORD PTR [rax+1320], rcx
; Line 887
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winDrawText@@YAXPEADMM@Z ; winDrawText
	mov	QWORD PTR [rax+1328], rcx
; Line 888
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winBegin2DRender@@YAXXZ ; winBegin2DRender
	mov	QWORD PTR [rax+1336], rcx
; Line 889
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winEnd2DRender@@YAXXZ	; winEnd2DRender
	mov	QWORD PTR [rax+1344], rcx
; Line 890
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winSetStrokeSize@@YAXM@Z ; winSetStrokeSize
	mov	QWORD PTR [rax+1352], rcx
; Line 891
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winSetFontSize@@YAXM@Z ; winSetFontSize
	mov	QWORD PTR [rax+1360], rcx
; Line 892
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winBuildVariableString@@YAXPEAD0ZZ ; winBuildVariableString
	mov	QWORD PTR [rax+1368], rcx
; Line 893
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winBuildVariableStringV@@YAXPEAD00@Z ; winBuildVariableStringV
	mov	QWORD PTR [rax+1376], rcx
; Line 894
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winGetAudioStreamTime@@YAMXZ ; winGetAudioStreamTime
	mov	QWORD PTR [rax+1456], rcx
; Line 895
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winGetSystemTime@@YA_KXZ ; winGetSystemTime
	mov	QWORD PTR [rax+1464], rcx
; Line 896
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winCreateSprite2D@@YAXPEAUSprite2D@@IIIPEAX@Z ; winCreateSprite2D
	mov	QWORD PTR [rax+1384], rcx
; Line 897
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winDeleteSprite2D@@YAXPEAUSprite2D@@@Z ; winDeleteSprite2D
	mov	QWORD PTR [rax+1392], rcx
; Line 898
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winRenderSprite2D@@YAXPEAUSprite2D@@MMMM@Z ; winRenderSprite2D
	mov	QWORD PTR [rax+1400], rcx
; Line 899
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winGetTextDimensions@@YAXPEADPEAM1@Z ; winGetTextDimensions
	mov	QWORD PTR [rax+1408], rcx
; Line 900
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winCheckIfDirectoryExists@@YA_NPEAD@Z ; winCheckIfDirectoryExists
	mov	QWORD PTR [rax+1472], rcx
; Line 901
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winCheckIfFileExists@@YA_NPEAD@Z ; winCheckIfFileExists
	mov	QWORD PTR [rax+1480], rcx
; Line 902
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winCreateDirectory@@YA_NPEAD@Z ; winCreateDirectory
	mov	QWORD PTR [rax+1488], rcx
; Line 903
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winCreateFile@@YA_NPEADPEAXI_N@Z ; winCreateFile
	mov	QWORD PTR [rax+1496], rcx
; Line 904
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winGetListOfFilesInDirectory@@YAXPEAD0PEAI@Z ; winGetListOfFilesInDirectory
	mov	QWORD PTR [rax+1424], rcx
; Line 905
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winReadFileIntoBuffer@@YAXPEADPEAX@Z ; winReadFileIntoBuffer
	mov	QWORD PTR [rax+1416], rcx
; Line 906
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winAllocateMemory@@YAPEAXI@Z ; winAllocateMemory
	mov	QWORD PTR [rax+1512], rcx
; Line 907
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winFreeMemory@@YAXPEAX@Z ; winFreeMemory
	mov	QWORD PTR [rax+1432], rcx
; Line 908
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winStartAudioStream@@YAXXZ ; winStartAudioStream
	mov	QWORD PTR [rax+1440], rcx
; Line 909
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winStopAudioStream@@YAXXZ ; winStopAudioStream
	mov	QWORD PTR [rax+1448], rcx
; Line 910
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	lea	rcx, OFFSET FLAT:?winSelectFileFromComputer@@YA_NPEAD@Z ; winSelectFileFromComputer
	mov	QWORD PTR [rax+1504], rcx
; Line 912
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 1
$LN1@winInitial:
; Line 913
	add	rsp, 72					; 00000048H
	ret	0
?winInitializeOS@@YAXXZ ENDP				; winInitializeOS
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
monitorWidth$ = 96
tv135 = 100
monitorHeight$ = 104
tv138 = 108
windowY$ = 112
windowX$ = 116
hInstance$ = 120
windowClass$ = 128
windowRect$ = 208
$T1 = 224
__$ArrayPad$ = 232
width$ = 256
height$ = 264
title$ = 272
?winInitializeWindow@@YAXIIPEAD@Z PROC			; winInitializeWindow
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 704
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 240				; 000000f0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 705
	mov	eax, DWORD PTR width$[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	DWORD PTR [rax+1180], xmm0
; Line 706
	mov	eax, DWORD PTR height$[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	DWORD PTR [rax+1184], xmm0
; Line 707
	mov	eax, DWORD PTR width$[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	DWORD PTR [rax+1188], xmm0
; Line 708
	mov	eax, DWORD PTR height$[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	DWORD PTR [rax+1192], xmm0
; Line 709
	mov	eax, DWORD PTR width$[rsp]
	cvtsi2ss xmm0, rax
	mov	eax, DWORD PTR height$[rsp]
	cvtsi2ss xmm1, rax
	divss	xmm0, xmm1
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	DWORD PTR [rax+1216], xmm0
; Line 710
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0Vector2@@QEAA@M@Z			; Vector2::Vector2
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	add	rcx, 1196				; 000004acH
	mov	rdx, QWORD PTR [rax]
	call	??4Vector2@@QEAAXT0@@Z			; Vector2::operator=
; Line 712
	xor	ecx, ecx
	call	QWORD PTR __imp_GetModuleHandleA
	mov	QWORD PTR hInstance$[rsp], rax
; Line 713
	lea	rax, QWORD PTR windowClass$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 80					; 00000050H
	rep stosb
; Line 714
	mov	DWORD PTR windowClass$[rsp], 80		; 00000050H
; Line 715
	mov	DWORD PTR windowClass$[rsp+4], 3
; Line 716
	lea	rax, OFFSET FLAT:?WindowProc@@YA_JPEAUHWND__@@I_K_J@Z ; WindowProc
	mov	QWORD PTR windowClass$[rsp+8], rax
; Line 717
	mov	rax, QWORD PTR hInstance$[rsp]
	mov	QWORD PTR windowClass$[rsp+24], rax
; Line 718
	mov	edx, 32512				; 00007f00H
	xor	ecx, ecx
	call	QWORD PTR __imp_LoadCursorA
	mov	QWORD PTR windowClass$[rsp+40], rax
; Line 719
	mov	rax, QWORD PTR title$[rsp]
	mov	QWORD PTR windowClass$[rsp+64], rax
; Line 720
	lea	rcx, QWORD PTR windowClass$[rsp]
	call	QWORD PTR __imp_RegisterClassExA
; Line 722
	mov	DWORD PTR windowRect$[rsp], 0
	mov	DWORD PTR windowRect$[rsp+4], 0
	mov	eax, DWORD PTR width$[rsp]
	mov	DWORD PTR windowRect$[rsp+8], eax
	mov	eax, DWORD PTR height$[rsp]
	mov	DWORD PTR windowRect$[rsp+12], eax
; Line 723
	xor	r8d, r8d
	mov	edx, 13565952				; 00cf0000H
	lea	rcx, QWORD PTR windowRect$[rsp]
	call	QWORD PTR __imp_AdjustWindowRect
; Line 725
	xor	ecx, ecx
	call	QWORD PTR __imp_GetSystemMetrics
	mov	DWORD PTR monitorWidth$[rsp], eax
; Line 726
	mov	ecx, 1
	call	QWORD PTR __imp_GetSystemMetrics
	mov	DWORD PTR monitorHeight$[rsp], eax
; Line 727
	xor	edx, edx
	mov	eax, DWORD PTR monitorWidth$[rsp]
	mov	ecx, 2
	div	ecx
	mov	DWORD PTR tv135[rsp], eax
	xor	edx, edx
	mov	eax, DWORD PTR width$[rsp]
	mov	ecx, 2
	div	ecx
	mov	ecx, DWORD PTR tv135[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR windowX$[rsp], eax
; Line 728
	xor	edx, edx
	mov	eax, DWORD PTR monitorHeight$[rsp]
	mov	ecx, 2
	div	ecx
	mov	DWORD PTR tv138[rsp], eax
	xor	edx, edx
	mov	eax, DWORD PTR height$[rsp]
	mov	ecx, 2
	div	ecx
	mov	ecx, DWORD PTR tv138[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR windowY$[rsp], eax
; Line 731
	mov	eax, DWORD PTR windowRect$[rsp+4]
	mov	ecx, DWORD PTR windowRect$[rsp+12]
	sub	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR windowRect$[rsp]
	mov	edx, DWORD PTR windowRect$[rsp+8]
	sub	edx, ecx
	mov	ecx, edx
	mov	QWORD PTR [rsp+88], 0
	mov	rdx, QWORD PTR hInstance$[rsp]
	mov	QWORD PTR [rsp+80], rdx
	mov	QWORD PTR [rsp+72], 0
	mov	QWORD PTR [rsp+64], 0
	mov	DWORD PTR [rsp+56], eax
	mov	DWORD PTR [rsp+48], ecx
	mov	eax, DWORD PTR windowY$[rsp]
	mov	DWORD PTR [rsp+40], eax
	mov	eax, DWORD PTR windowX$[rsp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, 13565952				; 00cf0000H
	mov	r8, QWORD PTR title$[rsp]
	mov	rdx, QWORD PTR windowClass$[rsp+64]
	xor	ecx, ecx
	call	QWORD PTR __imp_CreateWindowExA
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	QWORD PTR [rcx+16], rax
; Line 735
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	cmp	QWORD PTR [rax+16], 0
	jne	SHORT $LN2@winInitial
; Line 736
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164638
	lea	rdx, OFFSET FLAT:$SG164639
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 737
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 0
; Line 738
	jmp	SHORT $LN1@winInitial
$LN2@winInitial:
; Line 744
	mov	edx, 5
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_ShowWindow
$LN1@winInitial:
; Line 746
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 240				; 000000f0H
	pop	rdi
	ret	0
?winInitializeWindow@@YAXIIPEAD@Z ENDP			; winInitializeWindow
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv64 = 32
tv78 = 36
tv91 = 37
tv139 = 38
tv152 = 39
nw$1 = 40
nh$2 = 44
xrat$3 = 48
yrat$4 = 52
w$5 = 56
h$6 = 60
mousePosition$7 = 64
h$8 = 72
x$9 = 76
tv267 = 80
w$10 = 84
y$11 = 88
$T12 = 96
__$ArrayPad$ = 104
hWnd$ = 128
message$ = 136
wParam$ = 144
lParam$ = 152
?WindowProc@@YA_JPEAUHWND__@@I_K_J@Z PROC		; WindowProc
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 603
$LN42:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 604
	mov	eax, DWORD PTR message$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 256		; 00000100H
	ja	SHORT $LN37@WindowProc
	cmp	DWORD PTR tv64[rsp], 256		; 00000100H
	je	$LN6@WindowProc
	cmp	DWORD PTR tv64[rsp], 5
	je	$LN21@WindowProc
	cmp	DWORD PTR tv64[rsp], 16
	je	$LN5@WindowProc
	cmp	DWORD PTR tv64[rsp], 18
	je	$LN4@WindowProc
	cmp	DWORD PTR tv64[rsp], 126		; 0000007eH
	je	$LN20@WindowProc
	jmp	$LN2@WindowProc
$LN37@WindowProc:
	cmp	DWORD PTR tv64[rsp], 512		; 00000200H
	ja	SHORT $LN38@WindowProc
	cmp	DWORD PTR tv64[rsp], 512		; 00000200H
	je	$LN10@WindowProc
	cmp	DWORD PTR tv64[rsp], 257		; 00000101H
	je	$LN7@WindowProc
	cmp	DWORD PTR tv64[rsp], 258		; 00000102H
	je	$LN19@WindowProc
	cmp	DWORD PTR tv64[rsp], 260		; 00000104H
	je	$LN8@WindowProc
	cmp	DWORD PTR tv64[rsp], 261		; 00000105H
	je	$LN9@WindowProc
	jmp	$LN2@WindowProc
$LN38@WindowProc:
	mov	eax, DWORD PTR tv64[rsp]
	sub	eax, 513				; 00000201H
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 9
	ja	$LN2@WindowProc
	mov	eax, DWORD PTR tv64[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN41@WindowProc[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@WindowProc:
$LN5@WindowProc:
; Line 607
	xor	ecx, ecx
	call	exit
$LN6@WindowProc:
; Line 610
	mov	ecx, 160				; 000000a0H
	call	QWORD PTR __imp_GetKeyState
	movsx	rax, ax
	shr	rax, 16
	and	rax, 65535				; 0000ffffH
	test	ax, ax
	je	SHORT $LN29@WindowProc
	mov	BYTE PTR tv78[rsp], 1
	jmp	SHORT $LN30@WindowProc
$LN29@WindowProc:
	mov	BYTE PTR tv78[rsp], 0
$LN30@WindowProc:
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, WORD PTR [rax+1616]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	edx, BYTE PTR tv78[rsp]
	mov	BYTE PTR [rcx+rax+640], dl
; Line 611
	mov	ecx, 161				; 000000a1H
	call	QWORD PTR __imp_GetKeyState
	movsx	rax, ax
	shr	rax, 16
	and	rax, 65535				; 0000ffffH
	test	ax, ax
	je	SHORT $LN31@WindowProc
	mov	BYTE PTR tv91[rsp], 1
	jmp	SHORT $LN32@WindowProc
$LN31@WindowProc:
	mov	BYTE PTR tv91[rsp], 0
$LN32@WindowProc:
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, WORD PTR [rax+1618]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	edx, BYTE PTR tv91[rsp]
	mov	BYTE PTR [rcx+rax+640], dl
; Line 612
	mov	rax, QWORD PTR wParam$[rsp]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	add	rcx, rax
	mov	rax, rcx
	mov	BYTE PTR [rax+640], 1
; Line 613
	jmp	$LN2@WindowProc
$LN7@WindowProc:
; Line 616
	mov	ecx, 160				; 000000a0H
	call	QWORD PTR __imp_GetKeyState
	movsx	rax, ax
	shr	rax, 16
	and	rax, 65535				; 0000ffffH
	test	ax, ax
	je	SHORT $LN33@WindowProc
	mov	BYTE PTR tv139[rsp], 1
	jmp	SHORT $LN34@WindowProc
$LN33@WindowProc:
	mov	BYTE PTR tv139[rsp], 0
$LN34@WindowProc:
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, WORD PTR [rax+1616]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	edx, BYTE PTR tv139[rsp]
	mov	BYTE PTR [rcx+rax+640], dl
; Line 617
	mov	ecx, 161				; 000000a1H
	call	QWORD PTR __imp_GetKeyState
	movsx	rax, ax
	shr	rax, 16
	and	rax, 65535				; 0000ffffH
	test	ax, ax
	je	SHORT $LN35@WindowProc
	mov	BYTE PTR tv152[rsp], 1
	jmp	SHORT $LN36@WindowProc
$LN35@WindowProc:
	mov	BYTE PTR tv152[rsp], 0
$LN36@WindowProc:
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, WORD PTR [rax+1618]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	edx, BYTE PTR tv152[rsp]
	mov	BYTE PTR [rcx+rax+640], dl
; Line 618
	mov	rax, QWORD PTR wParam$[rsp]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	add	rcx, rax
	mov	rax, rcx
	mov	BYTE PTR [rax+640], 0
; Line 619
	jmp	$LN2@WindowProc
$LN8@WindowProc:
; Line 622
	mov	rax, QWORD PTR wParam$[rsp]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	add	rcx, rax
	mov	rax, rcx
	mov	BYTE PTR [rax+640], 1
; Line 623
	jmp	$LN2@WindowProc
$LN9@WindowProc:
; Line 626
	mov	rax, QWORD PTR wParam$[rsp]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	add	rcx, rax
	mov	rax, rcx
	mov	BYTE PTR [rax+640], 0
; Line 627
	jmp	$LN2@WindowProc
$LN10@WindowProc:
; Line 631
	lea	rcx, QWORD PTR mousePosition$7[rsp]
	call	QWORD PTR __imp_GetCursorPos
; Line 632
	lea	rdx, QWORD PTR mousePosition$7[rsp]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_ScreenToClient
; Line 633
	cvtsi2ss xmm0, DWORD PTR mousePosition$7[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	ucomiss	xmm0, DWORD PTR [rax+1172]
	jp	SHORT $LN12@WindowProc
	jne	SHORT $LN12@WindowProc
	cvtsi2ss xmm0, DWORD PTR mousePosition$7[rsp+4]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	ucomiss	xmm0, DWORD PTR [rax+1176]
	jp	SHORT $LN40@WindowProc
	je	SHORT $LN11@WindowProc
$LN40@WindowProc:
$LN12@WindowProc:
; Line 634
	cvtsi2ss xmm0, DWORD PTR mousePosition$7[rsp+4]
	cvtsi2ss xmm1, DWORD PTR mousePosition$7[rsp]
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T12[rsp]
	call	??0Vector2@@QEAA@MM@Z			; Vector2::Vector2
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	add	rcx, 1172				; 00000494H
	mov	rdx, QWORD PTR [rax]
	call	??4Vector2@@QEAAXT0@@Z			; Vector2::operator=
$LN11@WindowProc:
; Line 636
	jmp	$LN2@WindowProc
$LN13@WindowProc:
; Line 639
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1666]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rcx+rax+1152], 1
; Line 640
	jmp	$LN2@WindowProc
$LN14@WindowProc:
; Line 643
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1666]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rcx+rax+1152], 0
; Line 644
	jmp	$LN2@WindowProc
$LN15@WindowProc:
; Line 647
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1667]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rcx+rax+1152], 1
; Line 648
	jmp	$LN2@WindowProc
$LN16@WindowProc:
; Line 651
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1667]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rcx+rax+1152], 0
; Line 652
	jmp	$LN2@WindowProc
$LN17@WindowProc:
; Line 655
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1668]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rcx+rax+1152], 1
; Line 656
	jmp	$LN2@WindowProc
$LN18@WindowProc:
; Line 659
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1668]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rcx+rax+1152], 0
; Line 660
	jmp	$LN2@WindowProc
$LN19@WindowProc:
; Line 663
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	ecx, BYTE PTR wParam$[rsp]
	mov	BYTE PTR [rax+1169], cl
; Line 664
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1168], 1
; Line 665
	jmp	$LN2@WindowProc
$LN20@WindowProc:
$LN21@WindowProc:
; Line 669
	mov	rax, QWORD PTR lParam$[rsp]
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR nw$1[rsp], eax
; Line 670
	mov	rax, QWORD PTR lParam$[rsp]
	shr	rax, 16
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR nh$2[rsp], eax
; Line 672
	mov	eax, DWORD PTR nw$1[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	ucomiss	xmm0, DWORD PTR [rax+1180]
	jp	SHORT $LN23@WindowProc
	jne	SHORT $LN23@WindowProc
	mov	eax, DWORD PTR nh$2[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	ucomiss	xmm0, DWORD PTR [rax+1184]
	jp	SHORT $LN39@WindowProc
	je	$LN22@WindowProc
$LN39@WindowProc:
$LN23@WindowProc:
; Line 673
	mov	eax, DWORD PTR nw$1[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm1, DWORD PTR [rax+1188]
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR xrat$3[rsp], xmm0
; Line 674
	mov	eax, DWORD PTR nh$2[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm1, DWORD PTR [rax+1192]
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR yrat$4[rsp], xmm0
; Line 675
	mov	eax, DWORD PTR nw$1[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	DWORD PTR [rax+1180], xmm0
; Line 676
	mov	eax, DWORD PTR nh$2[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	DWORD PTR [rax+1184], xmm0
; Line 678
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	cmp	QWORD PTR [rax+24], 0
	je	$LN24@WindowProc
; Line 679
	mov	eax, DWORD PTR nw$1[rsp]
	cvtsi2ss xmm0, rax
	mov	eax, DWORD PTR nh$2[rsp]
	cvtsi2ss xmm1, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mulss	xmm1, DWORD PTR [rax+1216]
	comiss	xmm0, xmm1
	jbe	$LN25@WindowProc
; Line 680
	mov	eax, DWORD PTR nh$2[rsp]
	cvtsi2ss xmm0, rax
	mulss	xmm0, DWORD PTR yrat$4[rsp]
	movss	DWORD PTR h$8[rsp], xmm0
; Line 681
	mov	eax, DWORD PTR nh$2[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mulss	xmm0, DWORD PTR [rax+1216]
	movss	DWORD PTR w$5[rsp], xmm0
; Line 682
	xor	edx, edx
	mov	eax, DWORD PTR nw$1[rsp]
	mov	ecx, 2
	div	ecx
	mov	eax, eax
	cvtsi2ss xmm0, rax
	movss	xmm1, DWORD PTR w$5[rsp]
	divss	xmm1, DWORD PTR __real@40000000
	subss	xmm0, xmm1
	movss	DWORD PTR x$9[rsp], xmm0
; Line 683
	cvttss2si rax, DWORD PTR h$8[rsp]
	movss	xmm0, DWORD PTR w$5[rsp]
	mulss	xmm0, DWORD PTR xrat$3[rsp]
	cvttss2si rcx, xmm0
	movss	xmm0, DWORD PTR x$9[rsp]
	mulss	xmm0, DWORD PTR xrat$3[rsp]
	cvttss2si rdx, xmm0
	mov	DWORD PTR tv267[rsp], edx
	mov	r9d, eax
	mov	r8d, ecx
	xor	edx, edx
	mov	eax, DWORD PTR tv267[rsp]
	mov	ecx, eax
	call	?winSet2DViewport@@YAXIIII@Z		; winSet2DViewport
; Line 684
	jmp	$LN26@WindowProc
$LN25@WindowProc:
; Line 685
	mov	eax, DWORD PTR nw$1[rsp]
	cvtsi2ss xmm0, rax
	mulss	xmm0, DWORD PTR xrat$3[rsp]
	movss	DWORD PTR w$10[rsp], xmm0
; Line 686
	mov	eax, DWORD PTR nw$1[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, DWORD PTR [rax+1216]
	mulss	xmm0, xmm1
	movss	DWORD PTR h$6[rsp], xmm0
; Line 687
	xor	edx, edx
	mov	eax, DWORD PTR nh$2[rsp]
	mov	ecx, 2
	div	ecx
	mov	eax, eax
	cvtsi2ss xmm0, rax
	movss	xmm1, DWORD PTR h$6[rsp]
	divss	xmm1, DWORD PTR __real@40000000
	subss	xmm0, xmm1
	movss	DWORD PTR y$11[rsp], xmm0
; Line 688
	movss	xmm0, DWORD PTR h$6[rsp]
	mulss	xmm0, DWORD PTR yrat$4[rsp]
	cvttss2si rax, xmm0
	cvttss2si rcx, DWORD PTR w$10[rsp]
	movss	xmm0, DWORD PTR y$11[rsp]
	mulss	xmm0, DWORD PTR yrat$4[rsp]
	cvttss2si rdx, xmm0
	mov	r9d, eax
	mov	r8d, ecx
	xor	ecx, ecx
	call	?winSet2DViewport@@YAXIIII@Z		; winSet2DViewport
$LN26@WindowProc:
$LN24@WindowProc:
; Line 691
	mov	eax, DWORD PTR nw$1[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	divss	xmm0, DWORD PTR [rax+1188]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	DWORD PTR [rax+1196], xmm0
; Line 692
	mov	eax, DWORD PTR nh$2[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	divss	xmm0, DWORD PTR [rax+1192]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	DWORD PTR [rax+1200], xmm0
$LN22@WindowProc:
; Line 694
	jmp	SHORT $LN2@WindowProc
$LN27@WindowProc:
; Line 697
	mov	rax, QWORD PTR wParam$[rsp]
	shr	rax, 16
	and	rax, 65535				; 0000ffffH
	cwde
	cdq
	mov	ecx, 120				; 00000078H
	idiv	ecx
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	DWORD PTR [rcx+1204], eax
$LN2@WindowProc:
; Line 701
	mov	r9, QWORD PTR lParam$[rsp]
	mov	r8, QWORD PTR wParam$[rsp]
	mov	edx, DWORD PTR message$[rsp]
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_DefWindowProcA
$LN28@WindowProc:
; Line 702
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	ret	0
$LN41@WindowProc:
	DD	$LN13@WindowProc
	DD	$LN14@WindowProc
	DD	$LN2@WindowProc
	DD	$LN17@WindowProc
	DD	$LN18@WindowProc
	DD	$LN2@WindowProc
	DD	$LN15@WindowProc
	DD	$LN16@WindowProc
	DD	$LN2@WindowProc
	DD	$LN27@WindowProc
?WindowProc@@YA_JPEAUHWND__@@I_K_J@Z ENDP		; WindowProc
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv147 = 32
tv216 = 40
tv199 = 48
tv214 = 56
bufferDescription$ = 64
waveFormat$ = 104
__$ArrayPad$ = 128
channels$ = 160
samplesPerSecond$ = 168
bytesPerSample$ = 176
bufferAdvanceInSeconds$ = 184
?winInitializeAudioStream@@YAXIIIM@Z PROC		; winInitializeAudioStream
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 545
	movss	DWORD PTR [rsp+32], xmm3
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 144				; 00000090H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 546
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	ecx, DWORD PTR samplesPerSecond$[rsp]
	mov	DWORD PTR [rax+132], ecx
; Line 547
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	ecx, DWORD PTR bytesPerSample$[rsp]
	mov	DWORD PTR [rax+136], ecx
; Line 548
	xor	edx, edx
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	eax, DWORD PTR [rax+132]
	mov	ecx, 100				; 00000064H
	div	ecx
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	DWORD PTR [rcx+144], eax
; Line 549
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	ecx, DWORD PTR channels$[rsp]
	mov	DWORD PTR [rax+148], ecx
; Line 551
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_CoInitializeEx
	test	eax, eax
	jge	SHORT $LN2@winInitial
; Line 552
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164530
	lea	rdx, OFFSET FLAT:$SG164531
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 553
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 0
; Line 554
	jmp	$LN1@winInitial
$LN2@winInitial:
; Line 556
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	add	rax, 88					; 00000058H
	xor	r8d, r8d
	mov	rdx, rax
	xor	ecx, ecx
	call	DirectSoundCreate
	test	eax, eax
	jge	SHORT $LN3@winInitial
; Line 557
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164533
	lea	rdx, OFFSET FLAT:$SG164534
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 558
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 0
; Line 559
	jmp	$LN1@winInitial
$LN3@winInitial:
; Line 561
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+88]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+88]
	mov	rax, QWORD PTR [rax]
	mov	r8d, 2
	mov	rdx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rdx, QWORD PTR [rdx+16]
	call	QWORD PTR [rax+48]
	test	eax, eax
	jge	SHORT $LN4@winInitial
; Line 562
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164536
	lea	rdx, OFFSET FLAT:$SG164537
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 563
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 0
; Line 564
	jmp	$LN1@winInitial
$LN4@winInitial:
; Line 566
	lea	rax, QWORD PTR bufferDescription$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 40					; 00000028H
	rep stosb
; Line 567
	mov	DWORD PTR bufferDescription$[rsp], 40	; 00000028H
; Line 568
	mov	DWORD PTR bufferDescription$[rsp+4], 1
; Line 569
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	add	rax, 96					; 00000060H
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+88]
	mov	rdx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rdx, QWORD PTR [rdx+88]
	mov	QWORD PTR tv147[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv216[rsp], rcx
	xor	r9d, r9d
	mov	r8, rax
	lea	rdx, QWORD PTR bufferDescription$[rsp]
	mov	rax, QWORD PTR tv147[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv216[rsp]
	call	QWORD PTR [rax+24]
	test	eax, eax
	jge	SHORT $LN5@winInitial
; Line 570
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164539
	lea	rdx, OFFSET FLAT:$SG164540
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 571
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 0
; Line 572
	jmp	$LN1@winInitial
$LN5@winInitial:
; Line 575
	lea	rax, QWORD PTR waveFormat$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 18
	rep stosb
; Line 576
	mov	eax, 1
	mov	WORD PTR waveFormat$[rsp], ax
; Line 577
	movzx	eax, WORD PTR channels$[rsp]
	mov	WORD PTR waveFormat$[rsp+2], ax
; Line 578
	mov	eax, DWORD PTR samplesPerSecond$[rsp]
	mov	DWORD PTR waveFormat$[rsp+4], eax
; Line 579
	mov	eax, DWORD PTR bytesPerSample$[rsp]
	shl	eax, 3
	mov	WORD PTR waveFormat$[rsp+14], ax
; Line 580
	movzx	eax, WORD PTR waveFormat$[rsp+2]
	movzx	ecx, WORD PTR waveFormat$[rsp+14]
	imul	eax, ecx
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	WORD PTR waveFormat$[rsp+12], ax
; Line 581
	movzx	eax, WORD PTR waveFormat$[rsp+12]
	mov	ecx, DWORD PTR waveFormat$[rsp+4]
	imul	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR waveFormat$[rsp+8], eax
; Line 582
	xor	eax, eax
	mov	WORD PTR waveFormat$[rsp+16], ax
; Line 583
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+96]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+96]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR waveFormat$[rsp]
	call	QWORD PTR [rax+112]
	test	eax, eax
	jge	SHORT $LN6@winInitial
; Line 584
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164542
	lea	rdx, OFFSET FLAT:$SG164543
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 585
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 0
; Line 586
	jmp	$LN1@winInitial
$LN6@winInitial:
; Line 589
	mov	DWORD PTR bufferDescription$[rsp+4], 65536 ; 00010000H
; Line 590
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	eax, DWORD PTR [rax+132]
	imul	eax, DWORD PTR bytesPerSample$[rsp]
	imul	eax, DWORD PTR channels$[rsp]
	mov	eax, eax
	cvtsi2ss xmm0, rax
	mulss	xmm0, DWORD PTR bufferAdvanceInSeconds$[rsp]
	cvttss2si rax, xmm0
	mov	DWORD PTR bufferDescription$[rsp+8], eax
; Line 591
	lea	rax, QWORD PTR waveFormat$[rsp]
	mov	QWORD PTR bufferDescription$[rsp+16], rax
; Line 592
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	add	rax, 104				; 00000068H
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+88]
	mov	rdx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rdx, QWORD PTR [rdx+88]
	mov	QWORD PTR tv199[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv214[rsp], rcx
	xor	r9d, r9d
	mov	r8, rax
	lea	rdx, QWORD PTR bufferDescription$[rsp]
	mov	rax, QWORD PTR tv199[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv214[rsp]
	call	QWORD PTR [rax+24]
	test	eax, eax
	jge	SHORT $LN7@winInitial
; Line 593
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164545
	lea	rdx, OFFSET FLAT:$SG164546
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 594
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 0
; Line 595
	jmp	SHORT $LN1@winInitial
$LN7@winInitial:
; Line 598
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	ecx, DWORD PTR bufferDescription$[rsp+8]
	mov	DWORD PTR [rax+152], ecx
; Line 600
	call	?winClearAudioBuffer@@YAXXZ		; winClearAudioBuffer
$LN1@winInitial:
; Line 601
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 144				; 00000090H
	pop	rdi
	ret	0
?winInitializeAudioStream@@YAXIIIM@Z ENDP		; winInitializeAudioStream
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
?winUninitializeAudioStream@@YAXXZ PROC			; winUninitializeAudioStream
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 533
	sub	rsp, 40					; 00000028H
; Line 534
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+104]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+104]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+144]
	test	eax, eax
	jge	SHORT $LN2@winUniniti
; Line 535
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164512
	lea	rdx, OFFSET FLAT:$SG164513
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 536
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 0
; Line 537
	jmp	SHORT $LN1@winUniniti
$LN2@winUniniti:
; Line 540
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+104]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+104]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+16]
; Line 541
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+96]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+96]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+16]
; Line 542
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+88]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+88]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+16]
$LN1@winUniniti:
; Line 543
	add	rsp, 40					; 00000028H
	ret	0
?winUninitializeAudioStream@@YAXXZ ENDP			; winUninitializeAudioStream
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
update$ = 8
?winSetAudioStreamUpdateFunction2@@YAXP6AXMPEAM0@Z@Z PROC ; winSetAudioStreamUpdateFunction2
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 529
	mov	QWORD PTR [rsp+8], rcx
; Line 530
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR update$[rsp]
	mov	QWORD PTR [rax+120], rcx
; Line 531
	ret	0
?winSetAudioStreamUpdateFunction2@@YAXP6AXMPEAM0@Z@Z ENDP ; winSetAudioStreamUpdateFunction2
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
update$ = 8
?winSetAudioStreamUpdateFunction1@@YAXP6AMM@Z@Z PROC	; winSetAudioStreamUpdateFunction1
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 525
	mov	QWORD PTR [rsp+8], rcx
; Line 526
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR update$[rsp]
	mov	QWORD PTR [rax+112], rcx
; Line 527
	ret	0
?winSetAudioStreamUpdateFunction1@@YAXP6AMM@Z@Z ENDP	; winSetAudioStreamUpdateFunction1
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
r1Size$ = 64
tv81 = 68
i$1 = 72
j$2 = 76
i$3 = 80
j$4 = 84
i$5 = 88
j$6 = 92
region1$ = 96
totalSamples$7 = 104
totalSamples$8 = 108
totalSamples$9 = 112
r2Size$ = 116
regionPtr$10 = 120
regionPtr$11 = 128
regionPtr$12 = 136
region2$ = 144
?winClearAudioBuffer@@YAXXZ PROC			; winClearAudioBuffer
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 388
	sub	rsp, 168				; 000000a8H
; Line 393
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+104]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+104]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+56], 2
	lea	rdx, QWORD PTR r2Size$[rsp]
	mov	QWORD PTR [rsp+48], rdx
	lea	rdx, QWORD PTR region2$[rsp]
	mov	QWORD PTR [rsp+40], rdx
	lea	rdx, QWORD PTR r1Size$[rsp]
	mov	QWORD PTR [rsp+32], rdx
	lea	r9, QWORD PTR region1$[rsp]
	xor	r8d, r8d
	xor	edx, edx
	call	QWORD PTR [rax+88]
	test	eax, eax
	jl	$LN22@winClearAu
; Line 394
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	eax, DWORD PTR [rax+136]
	mov	DWORD PTR tv81[rsp], eax
	cmp	DWORD PTR tv81[rsp], 1
	je	SHORT $LN23@winClearAu
	cmp	DWORD PTR tv81[rsp], 2
	je	$LN24@winClearAu
	cmp	DWORD PTR tv81[rsp], 4
	je	$LN25@winClearAu
	jmp	$LN2@winClearAu
$LN23@winClearAu:
; Line 396
	mov	rax, QWORD PTR region1$[rsp]
	mov	QWORD PTR regionPtr$10[rsp], rax
; Line 397
	xor	edx, edx
	mov	eax, DWORD PTR r1Size$[rsp]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	div	DWORD PTR [rcx+148]
	xor	edx, edx
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	div	DWORD PTR [rcx+136]
	mov	DWORD PTR totalSamples$7[rsp], eax
; Line 398
	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN6@winClearAu
$LN4@winClearAu:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN6@winClearAu:
	mov	eax, DWORD PTR totalSamples$7[rsp]
	cmp	DWORD PTR i$1[rsp], eax
	jae	SHORT $LN5@winClearAu
; Line 399
	mov	DWORD PTR j$2[rsp], 0
	jmp	SHORT $LN9@winClearAu
$LN7@winClearAu:
	mov	eax, DWORD PTR j$2[rsp]
	inc	eax
	mov	DWORD PTR j$2[rsp], eax
$LN9@winClearAu:
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	eax, DWORD PTR [rax+148]
	cmp	DWORD PTR j$2[rsp], eax
	jae	SHORT $LN8@winClearAu
; Line 400
	mov	rax, QWORD PTR regionPtr$10[rsp]
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR regionPtr$10[rsp]
	inc	rax
	mov	QWORD PTR regionPtr$10[rsp], rax
; Line 401
	jmp	SHORT $LN7@winClearAu
$LN8@winClearAu:
; Line 402
	jmp	SHORT $LN4@winClearAu
$LN5@winClearAu:
; Line 403
	jmp	$LN2@winClearAu
$LN24@winClearAu:
; Line 406
	mov	rax, QWORD PTR region1$[rsp]
	mov	QWORD PTR regionPtr$11[rsp], rax
; Line 407
	xor	edx, edx
	mov	eax, DWORD PTR r1Size$[rsp]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	div	DWORD PTR [rcx+148]
	xor	edx, edx
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	div	DWORD PTR [rcx+136]
	mov	DWORD PTR totalSamples$8[rsp], eax
; Line 408
	mov	DWORD PTR i$3[rsp], 0
	jmp	SHORT $LN12@winClearAu
$LN10@winClearAu:
	mov	eax, DWORD PTR i$3[rsp]
	inc	eax
	mov	DWORD PTR i$3[rsp], eax
$LN12@winClearAu:
	mov	eax, DWORD PTR totalSamples$8[rsp]
	cmp	DWORD PTR i$3[rsp], eax
	jae	SHORT $LN11@winClearAu
; Line 409
	mov	DWORD PTR j$4[rsp], 0
	jmp	SHORT $LN15@winClearAu
$LN13@winClearAu:
	mov	eax, DWORD PTR j$4[rsp]
	inc	eax
	mov	DWORD PTR j$4[rsp], eax
$LN15@winClearAu:
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	eax, DWORD PTR [rax+148]
	cmp	DWORD PTR j$4[rsp], eax
	jae	SHORT $LN14@winClearAu
; Line 410
	xor	eax, eax
	mov	rcx, QWORD PTR regionPtr$11[rsp]
	mov	WORD PTR [rcx], ax
	mov	rax, QWORD PTR regionPtr$11[rsp]
	add	rax, 2
	mov	QWORD PTR regionPtr$11[rsp], rax
; Line 411
	jmp	SHORT $LN13@winClearAu
$LN14@winClearAu:
; Line 412
	jmp	SHORT $LN10@winClearAu
$LN11@winClearAu:
; Line 413
	jmp	$LN2@winClearAu
$LN25@winClearAu:
; Line 416
	mov	rax, QWORD PTR region1$[rsp]
	mov	QWORD PTR regionPtr$12[rsp], rax
; Line 417
	xor	edx, edx
	mov	eax, DWORD PTR r1Size$[rsp]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	div	DWORD PTR [rcx+148]
	xor	edx, edx
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	div	DWORD PTR [rcx+136]
	mov	DWORD PTR totalSamples$9[rsp], eax
; Line 418
	mov	DWORD PTR i$5[rsp], 0
	jmp	SHORT $LN18@winClearAu
$LN16@winClearAu:
	mov	eax, DWORD PTR i$5[rsp]
	inc	eax
	mov	DWORD PTR i$5[rsp], eax
$LN18@winClearAu:
	mov	eax, DWORD PTR totalSamples$9[rsp]
	cmp	DWORD PTR i$5[rsp], eax
	jae	SHORT $LN17@winClearAu
; Line 419
	mov	DWORD PTR j$6[rsp], 0
	jmp	SHORT $LN21@winClearAu
$LN19@winClearAu:
	mov	eax, DWORD PTR j$6[rsp]
	inc	eax
	mov	DWORD PTR j$6[rsp], eax
$LN21@winClearAu:
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	eax, DWORD PTR [rax+148]
	cmp	DWORD PTR j$6[rsp], eax
	jae	SHORT $LN20@winClearAu
; Line 420
	mov	rax, QWORD PTR regionPtr$12[rsp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR regionPtr$12[rsp]
	add	rax, 4
	mov	QWORD PTR regionPtr$12[rsp], rax
; Line 421
	jmp	SHORT $LN19@winClearAu
$LN20@winClearAu:
; Line 422
	jmp	SHORT $LN16@winClearAu
$LN17@winClearAu:
$LN2@winClearAu:
; Line 427
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+104]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+104]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR r2Size$[rsp]
	mov	DWORD PTR [rsp+32], edx
	mov	r9, QWORD PTR region2$[rsp]
	mov	r8d, DWORD PTR r1Size$[rsp]
	mov	rdx, QWORD PTR region1$[rsp]
	call	QWORD PTR [rax+152]
$LN22@winClearAu:
; Line 429
	add	rsp, 168				; 000000a8H
	ret	0
?winClearAudioBuffer@@YAXXZ ENDP			; winClearAudioBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
?winStopAudioStream@@YAXXZ PROC				; winStopAudioStream
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 384
	sub	rsp, 40					; 00000028H
; Line 385
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+104]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+104]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+144]
; Line 386
	add	rsp, 40					; 00000028H
	ret	0
?winStopAudioStream@@YAXXZ ENDP				; winStopAudioStream
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
?winStartAudioStream@@YAXXZ PROC			; winStartAudioStream
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 380
	sub	rsp, 40					; 00000028H
; Line 381
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+104]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+104]
	mov	rax, QWORD PTR [rax]
	mov	r9d, 1
	xor	r8d, r8d
	xor	edx, edx
	call	QWORD PTR [rax+96]
; Line 382
	add	rsp, 40					; 00000028H
	ret	0
?winStartAudioStream@@YAXXZ ENDP			; winStartAudioStream
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
?winGetAudioStreamTime@@YAMXZ PROC			; winGetAudioStreamTime
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 377
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	movss	xmm0, DWORD PTR [rax+128]
; Line 378
	ret	0
?winGetAudioStreamTime@@YAMXZ ENDP			; winGetAudioStreamTime
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PEAPEAUID2D1Factory@@@Z
_TEXT	SEGMENT
factoryType$ = 48
factory$ = 56
??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PEAPEAUID2D1Factory@@@Z PROC ; D2D1CreateFactory<ID2D1Factory>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1.h
; Line 3739
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 40					; 00000028H
; Line 3740
	mov	r8, QWORD PTR factory$[rsp]
	lea	rdx, OFFSET FLAT:_GUID_06152247_6f50_465a_9245_118bfd3b6007
	mov	ecx, DWORD PTR factoryType$[rsp]
	call	?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@AEBU_GUID@@PEAPEAX@Z ; D2D1CreateFactory
; Line 3745
	add	rsp, 40					; 00000028H
	ret	0
??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PEAPEAUID2D1Factory@@@Z ENDP ; D2D1CreateFactory<ID2D1Factory>
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
hr$ = 80
$T1 = 84
$T2 = 92
tv160 = 104
tv192 = 112
tv212 = 120
$T3 = 128
hrtp$ = 152
$T4 = 176
$T5 = 200
rc$ = 232
$T6 = 248
$T7 = 280
__$ArrayPad$ = 296
?winInitializeRendering2D@@YAXXZ PROC			; winInitializeRendering2D
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 333
	push	rsi
	push	rdi
	sub	rsp, 312				; 00000138H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 334
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax+80], xmm0
; Line 335
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	movss	xmm0, DWORD PTR __real@41400000
	movss	DWORD PTR [rax+84], xmm0
; Line 336
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	add	rax, 24
	mov	rdx, rax
	xor	ecx, ecx
	call	??$D2D1CreateFactory@UID2D1Factory@@@@YAJW4D2D1_FACTORY_TYPE@@PEAPEAUID2D1Factory@@@Z ; D2D1CreateFactory<ID2D1Factory>
	mov	DWORD PTR hr$[rsp], eax
; Line 338
	lea	rax, QWORD PTR rc$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb
; Line 339
	lea	rdx, QWORD PTR rc$[rsp]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_GetClientRect
	test	eax, eax
	jne	SHORT $LN2@winInitial
; Line 340
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164344
	lea	rdx, OFFSET FLAT:$SG164345
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 341
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 0
; Line 342
	jmp	$LN1@winInitial
$LN2@winInitial:
; Line 344
	mov	eax, DWORD PTR rc$[rsp+4]
	mov	ecx, DWORD PTR rc$[rsp+12]
	sub	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR rc$[rsp]
	mov	edx, DWORD PTR rc$[rsp+8]
	sub	edx, ecx
	mov	ecx, edx
	mov	edx, eax
	call	?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z	; D2D1::SizeU
	mov	QWORD PTR $T1[rsp], rax
	mov	r9d, 2
	mov	r8, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rdx, QWORD PTR [rax+16]
	lea	rcx, QWORD PTR $T4[rsp]
	call	?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z ; D2D1::HwndRenderTargetProperties
	lea	rcx, QWORD PTR $T3[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 24
	rep movsb
	lea	rax, QWORD PTR hrtp$[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 24
	rep movsb
; Line 347
	xor	edx, edx
	xor	ecx, ecx
	call	?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z ; D2D1::PixelFormat
	mov	QWORD PTR $T2[rsp], rax
	mov	DWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 0
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	lea	r8, QWORD PTR $T2[rsp]
	xor	edx, edx
	lea	rcx, QWORD PTR $T5[rsp]
	call	?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@AEBUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z ; D2D1::RenderTargetProperties
	lea	rcx, QWORD PTR $T6[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 28
	rep movsb
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	add	rax, 64					; 00000040H
	mov	r9, rax
	lea	r8, QWORD PTR hrtp$[rsp]
	lea	rdx, QWORD PTR $T6[rsp]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+24]
	call	?CreateHwndRenderTarget@ID2D1Factory@@QEAAJAEBUD2D1_RENDER_TARGET_PROPERTIES@@AEBUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAPEAUID2D1HwndRenderTarget@@@Z ; ID2D1Factory::CreateHwndRenderTarget
	test	eax, eax
	jge	SHORT $LN3@winInitial
; Line 348
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164347
	lea	rdx, OFFSET FLAT:$SG164348
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 349
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 0
; Line 350
	jmp	$LN1@winInitial
$LN3@winInitial:
; Line 352
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	add	rax, 40					; 00000028H
	mov	QWORD PTR tv160[rsp], rax
	movss	xmm2, DWORD PTR __real@3f800000
	xor	edx, edx
	lea	rcx, QWORD PTR $T7[rsp]
	call	??0ColorF@D2D1@@QEAA@W4Enum@01@M@Z	; D2D1::ColorF::ColorF
	mov	rcx, QWORD PTR tv160[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+64]
	call	?CreateSolidColorBrush@ID2D1RenderTarget@@QEAAJAEBU_D3DCOLORVALUE@@PEAPEAUID2D1SolidColorBrush@@@Z ; ID2D1RenderTarget::CreateSolidColorBrush
	test	eax, eax
	jge	SHORT $LN4@winInitial
; Line 353
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164350
	lea	rdx, OFFSET FLAT:$SG164351
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 354
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 0
; Line 355
	jmp	$LN1@winInitial
$LN4@winInitial:
; Line 358
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	add	rax, 32					; 00000020H
	mov	r8, rax
	lea	rdx, OFFSET FLAT:_GUID_b859ee5a_d838_4b5b_a2e8_1adc7d93db48
	xor	ecx, ecx
	call	QWORD PTR __imp_DWriteCreateFactory
	test	eax, eax
	jge	SHORT $LN5@winInitial
; Line 359
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164353
	lea	rdx, OFFSET FLAT:$SG164354
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 360
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 0
; Line 361
	jmp	$LN1@winInitial
$LN5@winInitial:
; Line 364
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	add	rax, 72					; 00000048H
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+32]
	mov	rdx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rdx, QWORD PTR [rdx+32]
	mov	QWORD PTR tv192[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv212[rsp], rcx
	mov	QWORD PTR [rsp+64], rax
	lea	rax, OFFSET FLAT:$SG164356
	mov	QWORD PTR [rsp+56], rax
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	movss	xmm0, DWORD PTR [rax+84]
	movss	DWORD PTR [rsp+48], xmm0
	mov	DWORD PTR [rsp+40], 5
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 400				; 00000190H
	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:$SG164357
	mov	rax, QWORD PTR tv192[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv212[rsp]
	call	QWORD PTR [rax+120]
	test	eax, eax
	jge	SHORT $LN6@winInitial
; Line 370
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164358
	lea	rdx, OFFSET FLAT:$SG164359
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 371
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 0
$LN6@winInitial:
$LN1@winInitial:
; Line 374
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 312				; 00000138H
	pop	rdi
	pop	rsi
	ret	0
?winInitializeRendering2D@@YAXXZ ENDP			; winInitializeRendering2D
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
size$ = 8
?winSetStrokeSize@@YAXM@Z PROC				; winSetStrokeSize
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 329
	movss	DWORD PTR [rsp+8], xmm0
; Line 330
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR size$[rsp]
	mulss	xmm0, DWORD PTR [rax+1200]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	movss	DWORD PTR [rax+80], xmm0
; Line 331
	ret	0
?winSetStrokeSize@@YAXM@Z ENDP				; winSetStrokeSize
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
?winEnd2DRender@@YAXXZ PROC				; winEnd2DRender
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 325
	sub	rsp, 40					; 00000028H
; Line 326
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+64]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+64]
	mov	rax, QWORD PTR [rax]
	xor	r8d, r8d
	xor	edx, edx
	call	QWORD PTR [rax+392]
; Line 327
	add	rsp, 40					; 00000028H
	ret	0
?winEnd2DRender@@YAXXZ ENDP				; winEnd2DRender
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
?winBegin2DRender@@YAXXZ PROC				; winBegin2DRender
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 321
	sub	rsp, 40					; 00000028H
; Line 322
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+64]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+64]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+384]
; Line 323
	add	rsp, 40					; 00000028H
	ret	0
?winBegin2DRender@@YAXXZ ENDP				; winBegin2DRender
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
len$ = 64
textLayout$ = 72
$T1 = 80
met$ = 88
str$ = 128
__$ArrayPad$ = 640
text$ = 672
w$ = 680
h$ = 688
?winGetTextDimensions@@YAXPEADPEAM1@Z PROC		; winGetTextDimensions
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 307
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 664				; 00000298H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 309
	mov	rcx, QWORD PTR text$[rsp]
	call	?getLength@@YAIPEAD@Z			; getLength
	mov	DWORD PTR len$[rsp], eax
; Line 311
	mov	eax, DWORD PTR len$[rsp]
	inc	eax
	mov	eax, eax
	mov	r8d, eax
	mov	rdx, QWORD PTR text$[rsp]
	lea	rcx, QWORD PTR str$[rsp]
	call	mbstowcs
; Line 312
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+32]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+32]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR textLayout$[rsp]
	mov	QWORD PTR [rsp+48], rdx
	mov	rdx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR [rdx+1184]
	movss	DWORD PTR [rsp+40], xmm0
	mov	rdx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR [rdx+1180]
	movss	DWORD PTR [rsp+32], xmm0
	mov	rdx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	r9, QWORD PTR [rdx+72]
	mov	r8d, DWORD PTR len$[rsp]
	lea	rdx, QWORD PTR str$[rsp]
	call	QWORD PTR [rax+144]
; Line 313
	mov	DWORD PTR $T1[rsp], 0
	mov	eax, DWORD PTR len$[rsp]
	mov	DWORD PTR $T1[rsp+4], eax
	mov	rax, QWORD PTR textLayout$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	movss	xmm1, DWORD PTR [rcx+84]
	mov	rcx, QWORD PTR textLayout$[rsp]
	call	QWORD PTR [rax+280]
; Line 315
	mov	rax, QWORD PTR textLayout$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR met$[rsp]
	mov	rcx, QWORD PTR textLayout$[rsp]
	call	QWORD PTR [rax+480]
; Line 316
	mov	rax, QWORD PTR w$[rsp]
	movss	xmm0, DWORD PTR met$[rsp+8]
	movss	DWORD PTR [rax], xmm0
; Line 317
	mov	rax, QWORD PTR h$[rsp]
	movss	xmm0, DWORD PTR met$[rsp+16]
	movss	DWORD PTR [rax], xmm0
; Line 318
	mov	rax, QWORD PTR textLayout$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR textLayout$[rsp]
	call	QWORD PTR [rax+16]
; Line 319
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 664				; 00000298H
	ret	0
?winGetTextDimensions@@YAXPEADPEAM1@Z ENDP		; winGetTextDimensions
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
h$ = 64
w$ = 68
len$ = 72
textLayout$ = 80
$T1 = 88
$T2 = 96
str$ = 112
__$ArrayPad$ = 624
text$ = 656
x$ = 664
y$ = 672
?winDrawText@@YAXPEADMM@Z PROC				; winDrawText
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 293
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 648				; 00000288H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 294
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR [rax+1188]
	movss	DWORD PTR w$[rsp], xmm0
; Line 295
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR [rax+1192]
	movss	DWORD PTR h$[rsp], xmm0
; Line 296
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR x$[rsp]
	mulss	xmm0, DWORD PTR [rax+1196]
	movss	DWORD PTR x$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR y$[rsp]
	mulss	xmm0, DWORD PTR [rax+1200]
	movss	DWORD PTR y$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR w$[rsp]
	mulss	xmm0, DWORD PTR [rax+1196]
	movss	DWORD PTR w$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR h$[rsp]
	mulss	xmm0, DWORD PTR [rax+1200]
	movss	DWORD PTR h$[rsp], xmm0
; Line 298
	mov	rcx, QWORD PTR text$[rsp]
	call	?getLength@@YAIPEAD@Z			; getLength
	mov	DWORD PTR len$[rsp], eax
; Line 300
	mov	eax, DWORD PTR len$[rsp]
	inc	eax
	mov	eax, eax
	mov	r8d, eax
	mov	rdx, QWORD PTR text$[rsp]
	lea	rcx, QWORD PTR str$[rsp]
	call	mbstowcs
; Line 301
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+32]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+32]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR textLayout$[rsp]
	mov	QWORD PTR [rsp+48], rdx
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR w$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	mov	rdx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	r9, QWORD PTR [rdx+72]
	mov	r8d, DWORD PTR len$[rsp]
	lea	rdx, QWORD PTR str$[rsp]
	call	QWORD PTR [rax+144]
; Line 302
	mov	DWORD PTR $T1[rsp], 0
	mov	eax, DWORD PTR len$[rsp]
	mov	DWORD PTR $T1[rsp+4], eax
	mov	rax, QWORD PTR textLayout$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	movss	xmm1, DWORD PTR [rcx+84]
	mov	rcx, QWORD PTR textLayout$[rsp]
	call	QWORD PTR [rax+280]
; Line 303
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+64]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+64]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 8
	mov	rdx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	r9, QWORD PTR [rdx+40]
	mov	r8, QWORD PTR textLayout$[rsp]
	mov	rdx, QWORD PTR $T2[rsp]
	call	QWORD PTR [rax+224]
; Line 304
	mov	rax, QWORD PTR textLayout$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR textLayout$[rsp]
	call	QWORD PTR [rax+16]
; Line 305
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 648				; 00000288H
	ret	0
?winDrawText@@YAXPEADMM@Z ENDP				; winDrawText
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = 48
$T2 = 56
x1$ = 80
y1$ = 88
x2$ = 96
y2$ = 104
?winDrawLine@@YAXMMMM@Z PROC				; winDrawLine
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 288
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 72					; 00000048H
; Line 289
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR x1$[rsp]
	mulss	xmm0, DWORD PTR [rax+1196]
	movss	DWORD PTR x1$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR y1$[rsp]
	mulss	xmm0, DWORD PTR [rax+1200]
	movss	DWORD PTR y1$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR x2$[rsp]
	mulss	xmm0, DWORD PTR [rax+1196]
	movss	DWORD PTR x2$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR y2$[rsp]
	mulss	xmm0, DWORD PTR [rax+1200]
	movss	DWORD PTR y2$[rsp], xmm0
; Line 290
	movss	xmm1, DWORD PTR y2$[rsp]
	movss	xmm0, DWORD PTR x2$[rsp]
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	mov	QWORD PTR $T1[rsp], rax
	movss	xmm1, DWORD PTR y1$[rsp]
	movss	xmm0, DWORD PTR x1$[rsp]
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+64]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+64]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rsp+40], 0
	mov	rdx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	movss	xmm0, DWORD PTR [rdx+80]
	movss	DWORD PTR [rsp+32], xmm0
	mov	rdx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	r9, QWORD PTR [rdx+40]
	mov	r8, QWORD PTR $T1[rsp]
	mov	rdx, QWORD PTR $T2[rsp]
	call	QWORD PTR [rax+120]
; Line 291
	add	rsp, 72					; 00000048H
	ret	0
?winDrawLine@@YAXMMMM@Z ENDP				; winDrawLine
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 56
__$ArrayPad$ = 72
x$ = 112
y$ = 120
w$ = 128
h$ = 136
?winFillEllipse@@YAXMMMM@Z PROC				; winFillEllipse
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 283
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rsi
	push	rdi
	sub	rsp, 88					; 00000058H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 284
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR x$[rsp]
	mulss	xmm0, DWORD PTR [rax+1196]
	movss	DWORD PTR x$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR y$[rsp]
	mulss	xmm0, DWORD PTR [rax+1200]
	movss	DWORD PTR y$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR w$[rsp]
	mulss	xmm0, DWORD PTR [rax+1196]
	movss	DWORD PTR w$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR h$[rsp]
	mulss	xmm0, DWORD PTR [rax+1200]
	movss	DWORD PTR h$[rsp], xmm0
; Line 285
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	mov	QWORD PTR $T1[rsp], rax
	movss	xmm3, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR w$[rsp]
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?Ellipse@D2D1@@YA?AUD2D1_ELLIPSE@@AEBUD2D_POINT_2F@@MM@Z ; D2D1::Ellipse
	lea	rcx, QWORD PTR $T3[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	r8, QWORD PTR [rax+40]
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+64]
	call	?FillEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillEllipse
; Line 286
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rsi
	ret	0
?winFillEllipse@@YAXMMMM@Z ENDP				; winFillEllipse
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = 48
$T2 = 56
$T3 = 72
__$ArrayPad$ = 88
x$ = 128
y$ = 136
w$ = 144
h$ = 152
?winDrawEllipse@@YAXMMMM@Z PROC				; winDrawEllipse
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 278
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 279
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR x$[rsp]
	mulss	xmm0, DWORD PTR [rax+1196]
	movss	DWORD PTR x$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR y$[rsp]
	mulss	xmm0, DWORD PTR [rax+1200]
	movss	DWORD PTR y$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR w$[rsp]
	mulss	xmm0, DWORD PTR [rax+1196]
	movss	DWORD PTR w$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR h$[rsp]
	mulss	xmm0, DWORD PTR [rax+1200]
	movss	DWORD PTR h$[rsp], xmm0
; Line 280
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	mov	QWORD PTR $T1[rsp], rax
	movss	xmm3, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR w$[rsp]
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?Ellipse@D2D1@@YA?AUD2D1_ELLIPSE@@AEBUD2D_POINT_2F@@MM@Z ; D2D1::Ellipse
	lea	rcx, QWORD PTR $T3[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	QWORD PTR [rsp+32], 0
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	movss	xmm3, DWORD PTR [rax+80]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	r8, QWORD PTR [rax+40]
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+64]
	call	?DrawEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z ; ID2D1RenderTarget::DrawEllipse
; Line 281
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
?winDrawEllipse@@YAXMMMM@Z ENDP				; winDrawEllipse
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = 48
$T2 = 64
__$ArrayPad$ = 80
x$ = 128
y$ = 136
w$ = 144
h$ = 152
?winFillRectangle@@YAXMMMM@Z PROC			; winFillRectangle
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 273
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 274
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR x$[rsp]
	mulss	xmm0, DWORD PTR [rax+1196]
	movss	DWORD PTR x$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR y$[rsp]
	mulss	xmm0, DWORD PTR [rax+1200]
	movss	DWORD PTR y$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR w$[rsp]
	mulss	xmm0, DWORD PTR [rax+1196]
	movss	DWORD PTR w$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR h$[rsp]
	mulss	xmm0, DWORD PTR [rax+1200]
	movss	DWORD PTR h$[rsp], xmm0
; Line 275
	movss	xmm0, DWORD PTR y$[rsp]
	addss	xmm0, DWORD PTR h$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	addss	xmm1, DWORD PTR w$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z	; D2D1::RectF
	lea	rcx, QWORD PTR $T2[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	r8, QWORD PTR [rax+40]
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+64]
	call	?FillRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@@Z ; ID2D1RenderTarget::FillRectangle
; Line 276
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
?winFillRectangle@@YAXMMMM@Z ENDP			; winFillRectangle
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = 48
$T2 = 64
__$ArrayPad$ = 80
x$ = 128
y$ = 136
w$ = 144
h$ = 152
?winDrawRectangle@@YAXMMMM@Z PROC			; winDrawRectangle
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 268
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 269
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR x$[rsp]
	mulss	xmm0, DWORD PTR [rax+1196]
	movss	DWORD PTR x$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR y$[rsp]
	mulss	xmm0, DWORD PTR [rax+1200]
	movss	DWORD PTR y$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR w$[rsp]
	mulss	xmm0, DWORD PTR [rax+1196]
	movss	DWORD PTR w$[rsp], xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR h$[rsp]
	mulss	xmm0, DWORD PTR [rax+1200]
	movss	DWORD PTR h$[rsp], xmm0
; Line 270
	movss	xmm0, DWORD PTR y$[rsp]
	addss	xmm0, DWORD PTR h$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	addss	xmm1, DWORD PTR w$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z	; D2D1::RectF
	lea	rcx, QWORD PTR $T2[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	QWORD PTR [rsp+32], 0
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	movss	xmm3, DWORD PTR [rax+80]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	r8, QWORD PTR [rax+40]
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+64]
	call	?DrawRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z ; ID2D1RenderTarget::DrawRectangle
; Line 271
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
?winDrawRectangle@@YAXMMMM@Z ENDP			; winDrawRectangle
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = 48
__$ArrayPad$ = 64
r$ = 96
g$ = 104
b$ = 112
a$ = 120
?winClearRenderTarget2D@@YAXMMMM@Z PROC			; winClearRenderTarget2D
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 264
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 88					; 00000058H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 265
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR b$[rsp]
	movss	xmm2, DWORD PTR g$[rsp]
	movss	xmm1, DWORD PTR r$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0ColorF@D2D1@@QEAA@MMMM@Z		; D2D1::ColorF::ColorF
	mov	rdx, rax
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+64]
	call	?Clear@ID2D1RenderTarget@@QEAAXAEBU_D3DCOLORVALUE@@@Z ; ID2D1RenderTarget::Clear
; Line 266
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 88					; 00000058H
	ret	0
?winClearRenderTarget2D@@YAXMMMM@Z ENDP			; winClearRenderTarget2D
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = 48
__$ArrayPad$ = 64
r$ = 96
g$ = 104
b$ = 112
a$ = 120
?winSetColor2D@@YAXMMMM@Z PROC				; winSetColor2D
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 260
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 88					; 00000058H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 261
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR b$[rsp]
	movss	xmm2, DWORD PTR g$[rsp]
	movss	xmm1, DWORD PTR r$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0ColorF@D2D1@@QEAA@MMMM@Z		; D2D1::ColorF::ColorF
	mov	rdx, rax
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+40]
	call	?SetColor@ID2D1SolidColorBrush@@QEAAXAEBU_D3DCOLORVALUE@@@Z ; ID2D1SolidColorBrush::SetColor
; Line 262
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 88					; 00000058H
	ret	0
?winSetColor2D@@YAXMMMM@Z ENDP				; winSetColor2D
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
size$ = 8
?winSetFontSize@@YAXM@Z PROC				; winSetFontSize
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 256
	movss	DWORD PTR [rsp+8], xmm0
; Line 257
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR size$[rsp]
	mulss	xmm0, DWORD PTR [rax+1200]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	movss	DWORD PTR [rax+84], xmm0
; Line 258
	ret	0
?winSetFontSize@@YAXM@Z ENDP				; winSetFontSize
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv76 = 48
tv190 = 52
$T1 = 56
$T2 = 64
$T3 = 80
tnsfm$ = 96
$T4 = 120
$T5 = 136
rotation$ = 152
$T6 = 176
__$ArrayPad$ = 200
sprite$ = 240
x$ = 248
y$ = 256
w$ = 264
h$ = 272
?winRenderSprite2D@@YAXPEAUSprite2D@@MMMM@Z PROC	; winRenderSprite2D
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 238
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 216				; 000000d8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 239
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvtss2sd xmm1, DWORD PTR y$[rsp]
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	cvtss2sd xmm2, DWORD PTR x$[rsp]
	addsd	xmm1, xmm2
	cvtsd2ss xmm1, xmm1
	movss	DWORD PTR tv76[rsp], xmm1
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR tv76[rsp]
	call	?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z	; D2D1::Point2F
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR sprite$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR __real@43b40000
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@401921fb54442d18
	cvtsd2ss xmm0, xmm0
	mov	r8, QWORD PTR $T1[rsp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR rotation$[rsp]
	call	?Rotation@Matrix3x2F@D2D1@@SA?AV12@MUD2D_POINT_2F@@@Z ; D2D1::Matrix3x2F::Rotation
; Line 241
	lea	rcx, QWORD PTR tnsfm$[rsp]
	call	??0Matrix3x2F@D2D1@@QEAA@XZ		; D2D1::Matrix3x2F::Matrix3x2F
; Line 242
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rax, QWORD PTR [rax+64]
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rcx+64]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR tnsfm$[rsp]
	call	QWORD PTR [rax+248]
; Line 243
	lea	r8, QWORD PTR rotation$[rsp]
	lea	rdx, QWORD PTR $T6[rsp]
	lea	rcx, QWORD PTR tnsfm$[rsp]
	call	??DMatrix3x2F@D2D1@@QEBA?AV01@AEBV01@@Z	; D2D1::Matrix3x2F::operator*
	mov	rdx, rax
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+64]
	call	?SetTransform@ID2D1RenderTarget@@QEAAXAEBUD2D_MATRIX_3X2_F@@@Z ; ID2D1RenderTarget::SetTransform
; Line 244
	mov	rax, QWORD PTR sprite$[rsp]
	mov	rcx, QWORD PTR sprite$[rsp]
	movss	xmm0, DWORD PTR [rax+20]
	mulss	xmm0, DWORD PTR [rcx+36]
	mov	rax, QWORD PTR sprite$[rsp]
	mov	rcx, QWORD PTR sprite$[rsp]
	movss	xmm1, DWORD PTR [rax+28]
	mulss	xmm1, DWORD PTR [rcx+36]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR sprite$[rsp]
	mov	rcx, QWORD PTR sprite$[rsp]
	movss	xmm1, DWORD PTR [rax+16]
	mulss	xmm1, DWORD PTR [rcx+32]
	mov	rax, QWORD PTR sprite$[rsp]
	mov	rcx, QWORD PTR sprite$[rsp]
	movss	xmm2, DWORD PTR [rax+24]
	mulss	xmm2, DWORD PTR [rcx+32]
	addss	xmm1, xmm2
	mov	rax, QWORD PTR sprite$[rsp]
	mov	rcx, QWORD PTR sprite$[rsp]
	movss	xmm2, DWORD PTR [rax+20]
	mulss	xmm2, DWORD PTR [rcx+36]
	mov	rax, QWORD PTR sprite$[rsp]
	mov	rcx, QWORD PTR sprite$[rsp]
	movss	xmm3, DWORD PTR [rax+16]
	mulss	xmm3, DWORD PTR [rcx+32]
	movss	DWORD PTR tv190[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv190[rsp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T2[rsp]
	call	?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z	; D2D1::RectF
	lea	rcx, QWORD PTR $T4[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	movss	xmm0, DWORD PTR y$[rsp]
	addss	xmm0, DWORD PTR h$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	addss	xmm1, DWORD PTR w$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z	; D2D1::RectF
	lea	rcx, QWORD PTR $T5[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR $T4[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@3f800000
	lea	r8, QWORD PTR $T5[rsp]
	mov	rax, QWORD PTR sprite$[rsp]
	mov	rdx, QWORD PTR [rax+40]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+64]
	call	?DrawBitmap@ID2D1RenderTarget@@QEAAXPEAUID2D1Bitmap@@AEBUD2D_RECT_F@@MW4D2D1_BITMAP_INTERPOLATION_MODE@@1@Z ; ID2D1RenderTarget::DrawBitmap
; Line 253
	lea	rdx, QWORD PTR tnsfm$[rsp]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+64]
	call	?SetTransform@ID2D1RenderTarget@@QEAAXAEBUD2D_MATRIX_3X2_F@@@Z ; ID2D1RenderTarget::SetTransform
; Line 254
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 216				; 000000d8H
	pop	rdi
	pop	rsi
	ret	0
?winRenderSprite2D@@YAXPEAUSprite2D@@MMMM@Z ENDP	; winRenderSprite2D
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
sprite$ = 48
?winDeleteSprite2D@@YAXPEAUSprite2D@@@Z PROC		; winDeleteSprite2D
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 232
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 233
	mov	rax, QWORD PTR sprite$[rsp]
	cmp	QWORD PTR [rax+40], 0
	je	SHORT $LN2@winDeleteS
; Line 234
	mov	rax, QWORD PTR sprite$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR sprite$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+16]
$LN2@winDeleteS:
; Line 236
	add	rsp, 40					; 00000028H
	ret	0
?winDeleteSprite2D@@YAXPEAUSprite2D@@@Z ENDP		; winDeleteSprite2D
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
hr$ = 48
pitch$ = 52
ps$ = 56
is$ = 64
$T1 = 72
$T2 = 80
$T3 = 96
bmprop$ = 112
$T4 = 128
$T5 = 136
ru$ = 152
$T6 = 176
__$ArrayPad$ = 192
sprite$ = 240
width$ = 248
height$ = 256
format$ = 264
data$ = 272
?winCreateSprite2D@@YAXPEAUSprite2D@@IIIPEAX@Z PROC	; winCreateSprite2D
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 205
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 216				; 000000d8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 206
	lea	rax, QWORD PTR bmprop$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb
; Line 207
	mov	eax, DWORD PTR format$[rsp]
	mov	DWORD PTR bmprop$[rsp], eax
; Line 208
	mov	DWORD PTR bmprop$[rsp+4], 1
; Line 209
	mov	eax, DWORD PTR width$[rsp]
	cvtsi2ss xmm0, rax
	movss	DWORD PTR bmprop$[rsp+8], xmm0
; Line 210
	mov	eax, DWORD PTR height$[rsp]
	cvtsi2ss xmm0, rax
	movss	DWORD PTR bmprop$[rsp+12], xmm0
; Line 211
	mov	edx, DWORD PTR height$[rsp]
	mov	ecx, DWORD PTR width$[rsp]
	call	?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z	; D2D1::SizeU
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR sprite$[rsp]
	add	rax, 40					; 00000028H
	mov	r9, rax
	lea	r8, QWORD PTR bmprop$[rsp]
	mov	rdx, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+64]
	call	?CreateBitmap@ID2D1RenderTarget@@QEAAJUD2D_SIZE_U@@AEBUD2D1_BITMAP_PROPERTIES@@PEAPEAUID2D1Bitmap@@@Z ; ID2D1RenderTarget::CreateBitmap
	mov	DWORD PTR hr$[rsp], eax
; Line 212
	cmp	DWORD PTR hr$[rsp], 0
	je	SHORT $LN2@winCreateS
; Line 213
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164214
	lea	rdx, OFFSET FLAT:$SG164215
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 214
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1220], 0
$LN2@winCreateS:
; Line 216
	mov	eax, DWORD PTR height$[rsp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR width$[rsp]
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	?RectU@D2D1@@YA?AUD2D_RECT_U@@IIII@Z	; D2D1::RectU
	lea	rcx, QWORD PTR $T5[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR ru$[rsp]
	lea	rcx, QWORD PTR $T5[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
; Line 218
	mov	ecx, DWORD PTR format$[rsp]
	call	?winGetBytesPerPixelFromFormat@@YAIW4DXGI_FORMAT@@@Z ; winGetBytesPerPixelFromFormat
	imul	eax, DWORD PTR width$[rsp]
	mov	DWORD PTR pitch$[rsp], eax
; Line 219
	mov	rax, QWORD PTR sprite$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR sprite$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	mov	r9d, DWORD PTR pitch$[rsp]
	mov	r8, QWORD PTR data$[rsp]
	lea	rdx, QWORD PTR ru$[rsp]
	call	QWORD PTR [rax+80]
; Line 221
	mov	rax, QWORD PTR sprite$[rsp]
	mov	ecx, DWORD PTR width$[rsp]
	mov	DWORD PTR [rax+8], ecx
; Line 222
	mov	rax, QWORD PTR sprite$[rsp]
	mov	ecx, DWORD PTR height$[rsp]
	mov	DWORD PTR [rax+12], ecx
; Line 223
	mov	rax, QWORD PTR sprite$[rsp]
	mov	ecx, DWORD PTR format$[rsp]
	mov	DWORD PTR [rax+4], ecx
; Line 224
	mov	eax, DWORD PTR height$[rsp]
	cvtsi2ss xmm0, rax
	mov	eax, DWORD PTR width$[rsp]
	cvtsi2ss xmm1, rax
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T6[rsp]
	call	??0Vector4@@QEAA@MMMM@Z			; Vector4::Vector4
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T2[rsp], xmm0
	mov	rax, QWORD PTR sprite$[rsp]
	add	rax, 16
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rax
	call	??4Vector4@@QEAAXT0@@Z			; Vector4::operator=
; Line 226
	mov	rax, QWORD PTR sprite$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR sprite$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR is$[rsp]
	call	QWORD PTR [rax+32]
; Line 227
	mov	rax, QWORD PTR sprite$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	rcx, QWORD PTR sprite$[rsp]
	mov	rcx, QWORD PTR [rcx+40]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR ps$[rsp]
	call	QWORD PTR [rax+40]
; Line 229
	mov	eax, DWORD PTR ps$[rsp+4]
	cvtsi2ss xmm0, rax
	movss	xmm1, DWORD PTR is$[rsp+4]
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	eax, DWORD PTR ps$[rsp]
	cvtsi2ss xmm1, rax
	movss	xmm2, DWORD PTR is$[rsp]
	divss	xmm2, xmm1
	movaps	xmm1, xmm2
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T4[rsp]
	call	??0Vector2@@QEAA@MM@Z			; Vector2::Vector2
	mov	rcx, QWORD PTR sprite$[rsp]
	add	rcx, 32					; 00000020H
	mov	rdx, QWORD PTR [rax]
	call	??4Vector2@@QEAAXT0@@Z			; Vector2::operator=
; Line 230
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 216				; 000000d8H
	pop	rdi
	pop	rsi
	ret	0
?winCreateSprite2D@@YAXPEAUSprite2D@@IIIPEAX@Z ENDP	; winCreateSprite2D
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
trans$ = 32
__$ArrayPad$ = 56
x$ = 80
y$ = 88
w$ = 96
h$ = 104
?winSet2DViewport@@YAXIIII@Z PROC			; winSet2DViewport
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 196
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 197
	lea	rcx, QWORD PTR trans$[rsp]
	call	?Identity@Matrix3x2F@D2D1@@SA?AV12@XZ	; D2D1::Matrix3x2F::Identity
; Line 198
	mov	eax, DWORD PTR w$[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	divss	xmm0, DWORD PTR [rax+1180]
	movss	DWORD PTR trans$[rsp], xmm0
; Line 199
	mov	eax, DWORD PTR h$[rsp]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	divss	xmm0, DWORD PTR [rax+1184]
	movss	DWORD PTR trans$[rsp+12], xmm0
; Line 200
	mov	eax, DWORD PTR x$[rsp]
	cvtsi2ss xmm0, rax
	movss	DWORD PTR trans$[rsp+16], xmm0
; Line 201
	mov	eax, DWORD PTR y$[rsp]
	cvtsi2ss xmm0, rax
	movss	DWORD PTR trans$[rsp+20], xmm0
; Line 202
	lea	rdx, QWORD PTR trans$[rsp]
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+64]
	call	?SetTransform@ID2D1RenderTarget@@QEAAXAEBUD2D_MATRIX_3X2_F@@@Z ; ID2D1RenderTarget::SetTransform
; Line 203
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	ret	0
?winSet2DViewport@@YAXIIII@Z ENDP			; winSet2DViewport
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
?winReloadApplication@@YAXXZ PROC			; winReloadApplication
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 174
	sub	rsp, 40					; 00000028H
; Line 175
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN2@winReloadA
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_FreeLibrary
	test	eax, eax
	jne	SHORT $LN2@winReloadA
; Line 176
	jmp	$LN1@winReloadA
$LN2@winReloadA:
; Line 178
	mov	ecx, 200				; 000000c8H
	call	QWORD PTR __imp_Sleep
; Line 179
	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:$SG164163
	lea	rcx, OFFSET FLAT:$SG164164
	call	QWORD PTR __imp_CopyFileA
	test	eax, eax
	jne	SHORT $LN3@winReloadA
; Line 180
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164165
	lea	rdx, OFFSET FLAT:$SG164166
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 181
	jmp	$LN1@winReloadA
$LN3@winReloadA:
; Line 183
	lea	rcx, OFFSET FLAT:$SG164167
	call	QWORD PTR __imp_LoadLibraryA
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	QWORD PTR [rcx+8], rax
; Line 184
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	cmp	QWORD PTR [rax+8], 0
	jne	SHORT $LN4@winReloadA
; Line 185
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164169
	lea	rdx, OFFSET FLAT:$SG164170
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
; Line 186
	jmp	SHORT $LN1@winReloadA
$LN4@winReloadA:
; Line 189
	lea	rdx, OFFSET FLAT:$SG164171
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_GetProcAddress
	mov	rcx, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	mov	QWORD PTR [rcx], rax
; Line 190
	lea	rax, OFFSET FLAT:updateApplication
	test	rax, rax
	jne	SHORT $LN5@winReloadA
; Line 191
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164173
	lea	rdx, OFFSET FLAT:$SG164174
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
$LN5@winReloadA:
$LN1@winReloadA:
; Line 194
	add	rsp, 40					; 00000028H
	ret	0
?winReloadApplication@@YAXXZ ENDP			; winReloadApplication
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
dllFileHandle$ = 32
findData$ = 48
__$ArrayPad$ = 368
filename$ = 400
?winGetFileWriteTime@@YA?AU_FILETIME@@PEAD@Z PROC	; winGetFileWriteTime
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 167
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 392				; 00000188H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 169
	lea	rdx, QWORD PTR findData$[rsp]
	mov	rcx, QWORD PTR filename$[rsp]
	call	QWORD PTR __imp_FindFirstFileA
	mov	QWORD PTR dllFileHandle$[rsp], rax
; Line 170
	mov	rcx, QWORD PTR dllFileHandle$[rsp]
	call	QWORD PTR __imp_FindClose
; Line 171
	mov	rax, QWORD PTR findData$[rsp+20]
; Line 172
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 392				; 00000188H
	ret	0
?winGetFileWriteTime@@YA?AU_FILETIME@@PEAD@Z ENDP	; winGetFileWriteTime
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
t$ = 32
?winGetSystemTime@@YA_KXZ PROC				; winGetSystemTime
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 161
	sub	rsp, 56					; 00000038H
; Line 163
	lea	rcx, QWORD PTR t$[rsp]
	call	QWORD PTR __imp_QueryPerformanceCounter
; Line 164
	mov	rax, QWORD PTR t$[rsp]
; Line 165
	add	rsp, 56					; 00000038H
	ret	0
?winGetSystemTime@@YA_KXZ ENDP				; winGetSystemTime
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
buffer$ = 48
text$ = 56
argptr$ = 64
?winBuildVariableStringV@@YAXPEAD00@Z PROC		; winBuildVariableStringV
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 157
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 158
	mov	r8, QWORD PTR argptr$[rsp]
	mov	rdx, QWORD PTR text$[rsp]
	mov	rcx, QWORD PTR buffer$[rsp]
	call	vsprintf
; Line 159
	add	rsp, 40					; 00000028H
	ret	0
?winBuildVariableStringV@@YAXPEAD00@Z ENDP		; winBuildVariableStringV
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
argptr$ = 32
buffer$ = 64
text$ = 72
?winBuildVariableString@@YAXPEAD0ZZ PROC		; winBuildVariableString
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 150
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	sub	rsp, 56					; 00000038H
; Line 152
	lea	rax, QWORD PTR text$[rsp+8]
	mov	QWORD PTR argptr$[rsp], rax
; Line 153
	mov	r8, QWORD PTR argptr$[rsp]
	mov	rdx, QWORD PTR text$[rsp]
	mov	rcx, QWORD PTR buffer$[rsp]
	call	vsprintf
; Line 154
	mov	QWORD PTR argptr$[rsp], 0
; Line 155
	add	rsp, 56					; 00000038H
	ret	0
?winBuildVariableString@@YAXPEAD0ZZ ENDP		; winBuildVariableString
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
fileSize$1 = 64
b$2 = 68
fh$ = 72
fileName$ = 96
buffer$ = 104
?winReadFileIntoBuffer@@YAXPEADPEAX@Z PROC		; winReadFileIntoBuffer
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 138
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H
; Line 139
	mov	QWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 128			; 00000080H
	mov	DWORD PTR [rsp+32], 3
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, -2147483648			; 80000000H
	mov	rcx, QWORD PTR fileName$[rsp]
	call	QWORD PTR __imp_CreateFileA
	mov	QWORD PTR fh$[rsp], rax
; Line 140
	cmp	QWORD PTR fh$[rsp], -1
	je	SHORT $LN2@winReadFil
; Line 141
	xor	edx, edx
	mov	rcx, QWORD PTR fh$[rsp]
	call	QWORD PTR __imp_GetFileSize
	mov	DWORD PTR fileSize$1[rsp], eax
; Line 142
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR fileSize$1[rsp]
	mov	rdx, QWORD PTR buffer$[rsp]
	mov	rcx, QWORD PTR fh$[rsp]
	call	QWORD PTR __imp_ReadFile
	mov	DWORD PTR b$2[rsp], eax
; Line 143
	cmp	DWORD PTR b$2[rsp], 0
	jne	SHORT $LN3@winReadFil
; Line 144
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG164105
	lea	rdx, OFFSET FLAT:$SG164106
	xor	ecx, ecx
	call	QWORD PTR __imp_MessageBoxA
$LN3@winReadFil:
; Line 146
	mov	rcx, QWORD PTR fh$[rsp]
	call	QWORD PTR __imp_CloseHandle
$LN2@winReadFil:
; Line 148
	add	rsp, 88					; 00000058H
	ret	0
?winReadFileIntoBuffer@@YAXPEADPEAX@Z ENDP		; winReadFileIntoBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
bl$ = 32
c$1 = 40
$T2 = 48
fh$ = 56
fd$ = 64
__$ArrayPad$ = 384
dirName$ = 416
buffer$ = 424
strLen$ = 432
?winGetListOfFilesInDirectory@@YAXPEAD0PEAI@Z PROC	; winGetListOfFilesInDirectory
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 116
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 408				; 00000198H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 118
	lea	rdx, QWORD PTR fd$[rsp]
	mov	rcx, QWORD PTR dirName$[rsp]
	call	QWORD PTR __imp_FindFirstFileA
	mov	QWORD PTR fh$[rsp], rax
; Line 119
	cmp	QWORD PTR fh$[rsp], -1
	jne	SHORT $LN7@winGetList
; Line 120
	jmp	$LN1@winGetList
$LN7@winGetList:
; Line 123
	mov	DWORD PTR bl$[rsp], 0
$LN4@winGetList:
; Line 125
	mov	eax, DWORD PTR fd$[rsp]
	and	eax, 16
	test	eax, eax
	jne	$LN8@winGetList
; Line 126
	lea	rax, QWORD PTR fd$[rsp+44]
	mov	QWORD PTR c$1[rsp], rax
$LN5@winGetList:
; Line 127
	mov	rax, QWORD PTR c$1[rsp]
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@winGetList
; Line 128
	mov	eax, DWORD PTR bl$[rsp]
	mov	rcx, QWORD PTR buffer$[rsp]
	mov	rdx, QWORD PTR c$1[rsp]
	movzx	edx, BYTE PTR [rdx]
	mov	BYTE PTR [rcx+rax], dl
	mov	eax, DWORD PTR bl$[rsp]
	inc	eax
	mov	DWORD PTR bl$[rsp], eax
; Line 129
	mov	rax, QWORD PTR c$1[rsp]
	inc	rax
	mov	QWORD PTR c$1[rsp], rax
	jmp	SHORT $LN5@winGetList
$LN6@winGetList:
; Line 130
	mov	eax, DWORD PTR bl$[rsp]
	mov	rcx, QWORD PTR buffer$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	movzx	eax, BYTE PTR [rax]
	inc	al
	mov	rcx, QWORD PTR $T2[rsp]
	mov	BYTE PTR [rcx], al
	mov	eax, DWORD PTR bl$[rsp]
	inc	eax
	mov	DWORD PTR bl$[rsp], eax
	mov	rax, QWORD PTR $T2[rsp]
	mov	BYTE PTR [rax], 10
; Line 132
	mov	eax, DWORD PTR bl$[rsp]
	mov	rcx, QWORD PTR buffer$[rsp]
	mov	BYTE PTR [rcx+rax], 0
$LN8@winGetList:
; Line 134
	lea	rdx, QWORD PTR fd$[rsp]
	mov	rcx, QWORD PTR fh$[rsp]
	call	QWORD PTR __imp_FindNextFileA
	test	eax, eax
	jne	$LN4@winGetList
; Line 135
	mov	rax, QWORD PTR strLen$[rsp]
	mov	ecx, DWORD PTR bl$[rsp]
	mov	DWORD PTR [rax], ecx
$LN1@winGetList:
; Line 136
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 408				; 00000198H
	ret	0
?winGetListOfFilesInDirectory@@YAXPEAD0PEAI@Z ENDP	; winGetListOfFilesInDirectory
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv66 = 64
fileSize$ = 68
type$ = 72
fh$ = 80
fileName$ = 112
data$ = 120
dataSize$ = 128
append$ = 136
?winCreateFile@@YA_NPEADPEAXI_N@Z PROC			; winCreateFile
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 101
	mov	BYTE PTR [rsp+32], r9b
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H
; Line 103
	movzx	eax, BYTE PTR append$[rsp]
	test	eax, eax
	je	SHORT $LN4@winCreateF
	mov	DWORD PTR tv66[rsp], 3
	jmp	SHORT $LN5@winCreateF
$LN4@winCreateF:
	mov	DWORD PTR tv66[rsp], 2
$LN5@winCreateF:
	mov	eax, DWORD PTR tv66[rsp]
	mov	DWORD PTR type$[rsp], eax
; Line 104
	mov	QWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 128			; 00000080H
	mov	eax, DWORD PTR type$[rsp]
	mov	DWORD PTR [rsp+32], eax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 1073741824				; 40000000H
	mov	rcx, QWORD PTR fileName$[rsp]
	call	QWORD PTR __imp_CreateFileA
	mov	QWORD PTR fh$[rsp], rax
; Line 105
	cmp	QWORD PTR fh$[rsp], -1
	jne	SHORT $LN2@winCreateF
; Line 106
	xor	al, al
	jmp	SHORT $LN1@winCreateF
$LN2@winCreateF:
; Line 109
	xor	edx, edx
	mov	rcx, QWORD PTR fh$[rsp]
	call	QWORD PTR __imp_GetFileSize
	mov	DWORD PTR fileSize$[rsp], eax
; Line 110
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, DWORD PTR fileSize$[rsp]
	mov	rcx, QWORD PTR fh$[rsp]
	call	QWORD PTR __imp_SetFilePointer
; Line 111
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR fileSize$[rsp]
	mov	r8d, DWORD PTR dataSize$[rsp]
	mov	rdx, QWORD PTR data$[rsp]
	mov	rcx, QWORD PTR fh$[rsp]
	call	QWORD PTR __imp_WriteFile
; Line 112
	mov	rcx, QWORD PTR fh$[rsp]
	call	QWORD PTR __imp_CloseHandle
; Line 113
	mov	al, 1
$LN1@winCreateF:
; Line 114
	add	rsp, 104				; 00000068H
	ret	0
?winCreateFile@@YA_NPEADPEAXI_N@Z ENDP			; winCreateFile
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv68 = 32
fileName$ = 64
?winCreateDirectory@@YA_NPEAD@Z PROC			; winCreateDirectory
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 97
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 98
	xor	edx, edx
	mov	rcx, QWORD PTR fileName$[rsp]
	call	QWORD PTR __imp_CreateDirectoryA
	test	eax, eax
	je	SHORT $LN3@winCreateD
	mov	BYTE PTR tv68[rsp], 1
	jmp	SHORT $LN4@winCreateD
$LN3@winCreateD:
	mov	BYTE PTR tv68[rsp], 0
$LN4@winCreateD:
	movzx	eax, BYTE PTR tv68[rsp]
; Line 99
	add	rsp, 56					; 00000038H
	ret	0
?winCreateDirectory@@YA_NPEAD@Z ENDP			; winCreateDirectory
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
attr$ = 32
tv69 = 36
fileName$ = 64
?winCheckIfFileExists@@YA_NPEAD@Z PROC			; winCheckIfFileExists
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 92
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 93
	mov	rcx, QWORD PTR fileName$[rsp]
	call	QWORD PTR __imp_GetFileAttributesA
	mov	DWORD PTR attr$[rsp], eax
; Line 94
	cmp	DWORD PTR attr$[rsp], -1		; ffffffffH
	je	SHORT $LN3@winCheckIf
	mov	eax, DWORD PTR attr$[rsp]
	and	eax, 16
	test	eax, eax
	jne	SHORT $LN3@winCheckIf
	mov	DWORD PTR tv69[rsp], 1
	jmp	SHORT $LN4@winCheckIf
$LN3@winCheckIf:
	mov	DWORD PTR tv69[rsp], 0
$LN4@winCheckIf:
	movzx	eax, BYTE PTR tv69[rsp]
; Line 95
	add	rsp, 56					; 00000038H
	ret	0
?winCheckIfFileExists@@YA_NPEAD@Z ENDP			; winCheckIfFileExists
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
attr$ = 32
tv69 = 36
directoryName$ = 64
?winCheckIfDirectoryExists@@YA_NPEAD@Z PROC		; winCheckIfDirectoryExists
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 87
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 88
	mov	rcx, QWORD PTR directoryName$[rsp]
	call	QWORD PTR __imp_GetFileAttributesA
	mov	DWORD PTR attr$[rsp], eax
; Line 89
	cmp	DWORD PTR attr$[rsp], -1		; ffffffffH
	je	SHORT $LN3@winCheckIf
	mov	eax, DWORD PTR attr$[rsp]
	and	eax, 16
	test	eax, eax
	je	SHORT $LN3@winCheckIf
	mov	DWORD PTR tv69[rsp], 1
	jmp	SHORT $LN4@winCheckIf
$LN3@winCheckIf:
	mov	DWORD PTR tv69[rsp], 0
$LN4@winCheckIf:
	movzx	eax, BYTE PTR tv69[rsp]
; Line 90
	add	rsp, 56					; 00000038H
	ret	0
?winCheckIfDirectoryExists@@YA_NPEAD@Z ENDP		; winCheckIfDirectoryExists
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv73 = 32
ofn$ = 48
fileBuffer$ = 224
?winSelectFileFromComputer@@YA_NPEAD@Z PROC		; winSelectFileFromComputer
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 75
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 208				; 000000d0H
; Line 76
	lea	rax, QWORD PTR ofn$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 152				; 00000098H
	rep stosb
; Line 77
	mov	DWORD PTR ofn$[rsp], 152		; 00000098H
; Line 78
	mov	DWORD PTR ofn$[rsp+96], 6144		; 00001800H
; Line 79
	mov	rax, QWORD PTR fileBuffer$[rsp]
	mov	QWORD PTR ofn$[rsp+48], rax
; Line 80
	mov	DWORD PTR ofn$[rsp+56], 260		; 00000104H
; Line 81
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ofn$[rsp+48]
	mov	BYTE PTR [rcx+rax], 0
; Line 82
	mov	DWORD PTR ofn$[rsp+44], 1
; Line 83
	lea	rax, OFFSET FLAT:$SG164049
	mov	QWORD PTR ofn$[rsp+24], rax
; Line 84
	lea	rcx, QWORD PTR ofn$[rsp]
	call	QWORD PTR __imp_GetOpenFileNameA
	test	eax, eax
	je	SHORT $LN3@winSelectF
	mov	BYTE PTR tv73[rsp], 1
	jmp	SHORT $LN4@winSelectF
$LN3@winSelectF:
	mov	BYTE PTR tv73[rsp], 0
$LN4@winSelectF:
	movzx	eax, BYTE PTR tv73[rsp]
; Line 85
	add	rsp, 208				; 000000d0H
	pop	rdi
	ret	0
?winSelectFileFromComputer@@YA_NPEAD@Z ENDP		; winSelectFileFromComputer
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
m$ = 48
?winFreeMemory@@YAXPEAX@Z PROC				; winFreeMemory
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 71
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 72
	call	QWORD PTR __imp_GetProcessHeap
	mov	r8, QWORD PTR m$[rsp]
	xor	edx, edx
	mov	rcx, rax
	call	QWORD PTR __imp_HeapFree
; Line 73
	add	rsp, 40					; 00000028H
	ret	0
?winFreeMemory@@YAXPEAX@Z ENDP				; winFreeMemory
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv67 = 32
amt$ = 64
?winAllocateMemory@@YAPEAXI@Z PROC			; winAllocateMemory
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 67
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 56					; 00000038H
; Line 68
	mov	eax, DWORD PTR amt$[rsp]
	mov	QWORD PTR tv67[rsp], rax
	call	QWORD PTR __imp_GetProcessHeap
	mov	rcx, QWORD PTR tv67[rsp]
	mov	r8, rcx
	mov	edx, 8
	mov	rcx, rax
	call	QWORD PTR __imp_HeapAlloc
; Line 69
	add	rsp, 56					; 00000038H
	ret	0
?winAllocateMemory@@YAPEAXI@Z ENDP			; winAllocateMemory
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv64 = 0
format$ = 32
?winGetBytesPerPixelFromFormat@@YAIW4DXGI_FORMAT@@@Z PROC ; winGetBytesPerPixelFromFormat
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 47
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 24
; Line 48
	mov	eax, DWORD PTR format$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	mov	eax, DWORD PTR tv64[rsp]
	sub	eax, 6
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 77			; 0000004dH
	ja	SHORT $LN14@winGetByte
	movsxd	rax, DWORD PTR tv64[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	movzx	eax, BYTE PTR $LN16@winGetByte[rcx+rax]
	mov	eax, DWORD PTR $LN17@winGetByte[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@winGetByte:
; Line 50
	mov	eax, 1
	jmp	SHORT $LN1@winGetByte
$LN5@winGetByte:
$LN6@winGetByte:
$LN7@winGetByte:
$LN8@winGetByte:
; Line 55
	mov	eax, 2
	jmp	SHORT $LN1@winGetByte
$LN9@winGetByte:
$LN10@winGetByte:
$LN11@winGetByte:
$LN12@winGetByte:
; Line 60
	mov	eax, 4
	jmp	SHORT $LN1@winGetByte
$LN13@winGetByte:
; Line 62
	mov	eax, 12
	jmp	SHORT $LN1@winGetByte
$LN14@winGetByte:
; Line 63
	xor	eax, eax
$LN1@winGetByte:
; Line 65
	add	rsp, 24
	ret	0
$LN17@winGetByte:
	DD	$LN13@winGetByte
	DD	$LN9@winGetByte
	DD	$LN10@winGetByte
	DD	$LN11@winGetByte
	DD	$LN6@winGetByte
	DD	$LN4@winGetByte
	DD	$LN8@winGetByte
	DD	$LN7@winGetByte
	DD	$LN5@winGetByte
	DD	$LN12@winGetByte
	DD	$LN14@winGetByte
$LN16@winGetByte:
	DB	0
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	1
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	2
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	3
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	4
	DB	10
	DB	10
	DB	10
	DB	10
	DB	5
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	6
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	10
	DB	7
	DB	8
	DB	10
	DB	9
?winGetBytesPerPixelFromFormat@@YAIW4DXGI_FORMAT@@@Z ENDP ; winGetBytesPerPixelFromFormat
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@AEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
factoryType$ = 48
riid$ = 56
factory$ = 64
?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@AEBU_GUID@@PEAPEAX@Z PROC ; D2D1CreateFactory, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1.h
; Line 3722
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 40					; 00000028H
; Line 3723
	mov	r9, QWORD PTR factory$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR riid$[rsp]
	mov	ecx, DWORD PTR factoryType$[rsp]
	call	D2D1CreateFactory
; Line 3729
	add	rsp, 40					; 00000028H
	ret	0
?D2D1CreateFactory@@YAJW4D2D1_FACTORY_TYPE@@AEBU_GUID@@PEAPEAX@Z ENDP ; D2D1CreateFactory
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??DMatrix3x2F@D2D1@@QEBA?AV01@AEBV01@@Z
_TEXT	SEGMENT
result$ = 32
__$ArrayPad$ = 56
this$ = 96
__$ReturnUdt$ = 104
matrix$ = 112
??DMatrix3x2F@D2D1@@QEBA?AV01@AEBV01@@Z PROC		; D2D1::Matrix3x2F::operator*, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 955
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 956
	lea	rcx, QWORD PTR result$[rsp]
	call	??0Matrix3x2F@D2D1@@QEAA@XZ		; D2D1::Matrix3x2F::Matrix3x2F
; Line 958
	mov	r8, QWORD PTR matrix$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR result$[rsp]
	call	?SetProduct@Matrix3x2F@D2D1@@QEAAXAEBV12@0@Z ; D2D1::Matrix3x2F::SetProduct
; Line 960
	lea	rax, QWORD PTR result$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 961
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
??DMatrix3x2F@D2D1@@QEBA?AV01@AEBV01@@Z ENDP		; D2D1::Matrix3x2F::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetProduct@Matrix3x2F@D2D1@@QEAAXAEBV12@0@Z
_TEXT	SEGMENT
this$ = 8
a$ = 16
b$ = 24
?SetProduct@Matrix3x2F@D2D1@@QEAAXAEBV12@0@Z PROC	; D2D1::Matrix3x2F::SetProduct, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 940
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
; Line 941
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR [rcx+8]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0
; Line 942
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR [rcx+12]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0
; Line 943
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	mulss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm1, DWORD PTR [rax+12]
	mulss	xmm1, DWORD PTR [rcx+8]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0
; Line 944
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	mulss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm1, DWORD PTR [rax+12]
	mulss	xmm1, DWORD PTR [rcx+12]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0
; Line 945
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rax+16]
	mulss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm1, DWORD PTR [rax+20]
	mulss	xmm1, DWORD PTR [rcx+8]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR b$[rsp]
	addss	xmm0, DWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+16], xmm0
; Line 946
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rax+16]
	mulss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm1, DWORD PTR [rax+20]
	mulss	xmm1, DWORD PTR [rcx+12]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR b$[rsp]
	addss	xmm0, DWORD PTR [rax+20]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+20], xmm0
; Line 947
	ret	0
?SetProduct@Matrix3x2F@D2D1@@QEAAXAEBV12@0@Z ENDP	; D2D1::Matrix3x2F::SetProduct
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Rotation@Matrix3x2F@D2D1@@SA?AV12@MUD2D_POINT_2F@@@Z
_TEXT	SEGMENT
rotation$ = 32
__$ArrayPad$ = 56
__$ReturnUdt$ = 96
angle$ = 104
center$ = 112
?Rotation@Matrix3x2F@D2D1@@SA?AV12@MUD2D_POINT_2F@@@Z PROC ; D2D1::Matrix3x2F::Rotation, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 853
$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 854
	lea	rcx, QWORD PTR rotation$[rsp]
	call	??0Matrix3x2F@D2D1@@QEAA@XZ		; D2D1::Matrix3x2F::Matrix3x2F
; Line 856
	lea	r8, QWORD PTR rotation$[rsp]
	mov	rdx, QWORD PTR center$[rsp]
	movss	xmm0, DWORD PTR angle$[rsp]
	call	D2D1MakeRotateMatrix
; Line 858
	lea	rax, QWORD PTR rotation$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 859
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
?Rotation@Matrix3x2F@D2D1@@SA?AV12@MUD2D_POINT_2F@@@Z ENDP ; D2D1::Matrix3x2F::Rotation
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Identity@Matrix3x2F@D2D1@@SA?AV12@XZ
_TEXT	SEGMENT
identity$ = 32
__$ArrayPad$ = 56
__$ReturnUdt$ = 96
?Identity@Matrix3x2F@D2D1@@SA?AV12@XZ PROC		; D2D1::Matrix3x2F::Identity, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 770
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 771
	lea	rcx, QWORD PTR identity$[rsp]
	call	??0Matrix3x2F@D2D1@@QEAA@XZ		; D2D1::Matrix3x2F::Matrix3x2F
; Line 773
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR identity$[rsp], xmm0
; Line 774
	xorps	xmm0, xmm0
	movss	DWORD PTR identity$[rsp+4], xmm0
; Line 775
	xorps	xmm0, xmm0
	movss	DWORD PTR identity$[rsp+8], xmm0
; Line 776
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR identity$[rsp+12], xmm0
; Line 777
	xorps	xmm0, xmm0
	movss	DWORD PTR identity$[rsp+16], xmm0
; Line 778
	xorps	xmm0, xmm0
	movss	DWORD PTR identity$[rsp+20], xmm0
; Line 780
	lea	rax, QWORD PTR identity$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 781
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rsi
	ret	0
?Identity@Matrix3x2F@D2D1@@SA?AV12@XZ ENDP		; D2D1::Matrix3x2F::Identity
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Matrix3x2F@D2D1@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Matrix3x2F@D2D1@@QEAA@XZ PROC			; D2D1::Matrix3x2F::Matrix3x2F, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 757
	mov	QWORD PTR [rsp+8], rcx
; Line 760
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Matrix3x2F@D2D1@@QEAA@XZ ENDP			; D2D1::Matrix3x2F::Matrix3x2F
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Init@ColorF@D2D1@@AEAAXIM@Z
_TEXT	SEGMENT
this$ = 8
rgb$ = 16
alpha$ = 24
?Init@ColorF@D2D1@@AEAAXIM@Z PROC			; D2D1::ColorF::Init, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 713
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
; Line 714
	mov	eax, DWORD PTR rgb$[rsp]
	and	eax, 16711680				; 00ff0000H
	shr	eax, 16
	mov	eax, eax
	cvtsi2ss xmm0, rax
	divss	xmm0, DWORD PTR __real@437f0000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0
; Line 715
	mov	eax, DWORD PTR rgb$[rsp]
	and	eax, 65280				; 0000ff00H
	shr	eax, 8
	mov	eax, eax
	cvtsi2ss xmm0, rax
	divss	xmm0, DWORD PTR __real@437f0000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0
; Line 716
	mov	eax, DWORD PTR rgb$[rsp]
	and	eax, 255				; 000000ffH
	mov	eax, eax
	cvtsi2ss xmm0, rax
	divss	xmm0, DWORD PTR __real@437f0000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0
; Line 717
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR alpha$[rsp]
	movss	DWORD PTR [rax+12], xmm0
; Line 718
	ret	0
?Init@ColorF@D2D1@@AEAAXIM@Z ENDP			; D2D1::ColorF::Init
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ColorF@D2D1@@QEAA@MMMM@Z
_TEXT	SEGMENT
this$ = 8
red$ = 16
green$ = 24
blue$ = 32
alpha$ = 40
??0ColorF@D2D1@@QEAA@MMMM@Z PROC			; D2D1::ColorF::ColorF, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 691
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
; Line 698
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR red$[rsp]
	movss	DWORD PTR [rax], xmm0
; Line 699
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR green$[rsp]
	movss	DWORD PTR [rax+4], xmm0
; Line 700
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR blue$[rsp]
	movss	DWORD PTR [rax+8], xmm0
; Line 701
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR alpha$[rsp]
	movss	DWORD PTR [rax+12], xmm0
; Line 702
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0ColorF@D2D1@@QEAA@MMMM@Z ENDP			; D2D1::ColorF::ColorF
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ColorF@D2D1@@QEAA@W4Enum@01@M@Z
_TEXT	SEGMENT
this$ = 48
knownColor$ = 56
a$ = 64
??0ColorF@D2D1@@QEAA@W4Enum@01@M@Z PROC			; D2D1::ColorF::ColorF, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 681
$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 686
	movss	xmm2, DWORD PTR a$[rsp]
	mov	edx, DWORD PTR knownColor$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?Init@ColorF@D2D1@@AEAAXIM@Z		; D2D1::ColorF::Init
; Line 687
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0ColorF@D2D1@@QEAA@W4Enum@01@M@Z ENDP			; D2D1::ColorF::ColorF
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z
_TEXT	SEGMENT
hwndRenderTargetProperties$ = 0
$T1 = 64
hwnd$ = 72
pixelSize$ = 80
presentOptions$ = 88
?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z PROC ; D2D1::HwndRenderTargetProperties, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 456
$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
; Line 459
	mov	rax, QWORD PTR hwnd$[rsp]
	mov	QWORD PTR hwndRenderTargetProperties$[rsp], rax
; Line 460
	mov	rax, QWORD PTR pixelSize$[rsp]
	mov	QWORD PTR hwndRenderTargetProperties$[rsp+8], rax
; Line 461
	mov	eax, DWORD PTR presentOptions$[rsp]
	mov	DWORD PTR hwndRenderTargetProperties$[rsp+16], eax
; Line 463
	lea	rax, QWORD PTR hwndRenderTargetProperties$[rsp]
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 24
	rep movsb
	mov	rax, QWORD PTR $T1[rsp]
; Line 464
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
?HwndRenderTargetProperties@D2D1@@YA?AUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAUHWND__@@UD2D_SIZE_U@@W4D2D1_PRESENT_OPTIONS@@@Z ENDP ; D2D1::HwndRenderTargetProperties
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@AEBUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z
_TEXT	SEGMENT
renderTargetProperties$ = 0
__$ArrayPad$ = 32
$T1 = 80
type$ = 88
pixelFormat$ = 96
dpiX$ = 104
dpiY$ = 112
usage$ = 120
minLevel$ = 128
?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@AEBUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z PROC ; D2D1::RenderTargetProperties, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 435
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 438
	mov	eax, DWORD PTR type$[rsp]
	mov	DWORD PTR renderTargetProperties$[rsp], eax
; Line 439
	mov	rax, QWORD PTR pixelFormat$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR renderTargetProperties$[rsp+4], rax
; Line 440
	movss	xmm0, DWORD PTR dpiX$[rsp]
	movss	DWORD PTR renderTargetProperties$[rsp+12], xmm0
; Line 441
	movss	xmm0, DWORD PTR dpiY$[rsp]
	movss	DWORD PTR renderTargetProperties$[rsp+16], xmm0
; Line 442
	mov	eax, DWORD PTR usage$[rsp]
	mov	DWORD PTR renderTargetProperties$[rsp+20], eax
; Line 443
	mov	eax, DWORD PTR minLevel$[rsp]
	mov	DWORD PTR renderTargetProperties$[rsp+24], eax
; Line 445
	lea	rax, QWORD PTR renderTargetProperties$[rsp]
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 28
	rep movsb
	mov	rax, QWORD PTR $T1[rsp]
; Line 446
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
?RenderTargetProperties@D2D1@@YA?AUD2D1_RENDER_TARGET_PROPERTIES@@W4D2D1_RENDER_TARGET_TYPE@@AEBUD2D1_PIXEL_FORMAT@@MMW4D2D1_RENDER_TARGET_USAGE@@W4D2D1_FEATURE_LEVEL@@@Z ENDP ; D2D1::RenderTargetProperties
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z
_TEXT	SEGMENT
pixelFormat$ = 0
dxgiFormat$ = 32
alphaMode$ = 40
?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z PROC ; D2D1::PixelFormat, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 391
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 24
; Line 394
	mov	eax, DWORD PTR dxgiFormat$[rsp]
	mov	DWORD PTR pixelFormat$[rsp], eax
; Line 395
	mov	eax, DWORD PTR alphaMode$[rsp]
	mov	DWORD PTR pixelFormat$[rsp+4], eax
; Line 397
	mov	rax, QWORD PTR pixelFormat$[rsp]
; Line 398
	add	rsp, 24
	ret	0
?PixelFormat@D2D1@@YA?AUD2D1_PIXEL_FORMAT@@W4DXGI_FORMAT@@W4D2D1_ALPHA_MODE@@@Z ENDP ; D2D1::PixelFormat
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Ellipse@D2D1@@YA?AUD2D1_ELLIPSE@@AEBUD2D_POINT_2F@@MM@Z
_TEXT	SEGMENT
ellipse$ = 0
__$ArrayPad$ = 16
$T1 = 64
center$ = 72
radiusX$ = 80
radiusY$ = 88
?Ellipse@D2D1@@YA?AUD2D1_ELLIPSE@@AEBUD2D_POINT_2F@@MM@Z PROC ; D2D1::Ellipse, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 231
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 234
	mov	rax, QWORD PTR center$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR ellipse$[rsp], rax
; Line 235
	movss	xmm0, DWORD PTR radiusX$[rsp]
	movss	DWORD PTR ellipse$[rsp+8], xmm0
; Line 236
	movss	xmm0, DWORD PTR radiusY$[rsp]
	movss	DWORD PTR ellipse$[rsp+12], xmm0
; Line 238
	lea	rax, QWORD PTR ellipse$[rsp]
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR $T1[rsp]
; Line 239
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
?Ellipse@D2D1@@YA?AUD2D1_ELLIPSE@@AEBUD2D_POINT_2F@@MM@Z ENDP ; D2D1::Ellipse
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$Rect@I@D2D1@@YA?AUD2D_RECT_U@@IIII@Z
_TEXT	SEGMENT
rect$ = 0
__$ArrayPad$ = 16
$T1 = 64
left$ = 72
top$ = 80
right$ = 88
bottom$ = 96
??$Rect@I@D2D1@@YA?AUD2D_RECT_U@@IIII@Z PROC		; D2D1::Rect<unsigned int>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 151
$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 152
	mov	eax, DWORD PTR left$[rsp]
	mov	DWORD PTR rect$[rsp], eax
	mov	eax, DWORD PTR top$[rsp]
	mov	DWORD PTR rect$[rsp+4], eax
	mov	eax, DWORD PTR right$[rsp]
	mov	DWORD PTR rect$[rsp+8], eax
	mov	eax, DWORD PTR bottom$[rsp]
	mov	DWORD PTR rect$[rsp+12], eax
; Line 154
	lea	rax, QWORD PTR rect$[rsp]
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR $T1[rsp]
; Line 155
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??$Rect@I@D2D1@@YA?AUD2D_RECT_U@@IIII@Z ENDP		; D2D1::Rect<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?RectU@D2D1@@YA?AUD2D_RECT_U@@IIII@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 64
__$ArrayPad$ = 80
$T3 = 128
left$ = 136
top$ = 144
right$ = 152
bottom$ = 160
?RectU@D2D1@@YA?AUD2D_RECT_U@@IIII@Z PROC		; D2D1::RectU, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 179
$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 180
	mov	eax, DWORD PTR bottom$[rsp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR right$[rsp]
	mov	r8d, DWORD PTR top$[rsp]
	mov	edx, DWORD PTR left$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$Rect@I@D2D1@@YA?AUD2D_RECT_U@@IIII@Z	; D2D1::Rect<unsigned int>
	lea	rcx, QWORD PTR $T2[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR $T2[rsp]
	mov	rdi, QWORD PTR $T3[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR $T3[rsp]
; Line 181
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
?RectU@D2D1@@YA?AUD2D_RECT_U@@IIII@Z ENDP		; D2D1::RectU
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z
_TEXT	SEGMENT
rect$ = 0
__$ArrayPad$ = 16
$T1 = 64
left$ = 72
top$ = 80
right$ = 88
bottom$ = 96
??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z PROC		; D2D1::Rect<float>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 151
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 152
	movss	xmm0, DWORD PTR left$[rsp]
	movss	DWORD PTR rect$[rsp], xmm0
	movss	xmm0, DWORD PTR top$[rsp]
	movss	DWORD PTR rect$[rsp+4], xmm0
	movss	xmm0, DWORD PTR right$[rsp]
	movss	DWORD PTR rect$[rsp+8], xmm0
	movss	xmm0, DWORD PTR bottom$[rsp]
	movss	DWORD PTR rect$[rsp+12], xmm0
; Line 154
	lea	rax, QWORD PTR rect$[rsp]
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR $T1[rsp]
; Line 155
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z ENDP		; D2D1::Rect<float>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 64
__$ArrayPad$ = 80
$T3 = 128
left$ = 136
top$ = 144
right$ = 152
bottom$ = 160
?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z PROC		; D2D1::RectF, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 166
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 167
	movss	xmm0, DWORD PTR bottom$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR right$[rsp]
	movss	xmm2, DWORD PTR top$[rsp]
	movss	xmm1, DWORD PTR left$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$Rect@M@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z	; D2D1::Rect<float>
	lea	rcx, QWORD PTR $T2[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR $T2[rsp]
	mov	rdi, QWORD PTR $T3[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR $T3[rsp]
; Line 168
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
?RectF@D2D1@@YA?AUD2D_RECT_F@@MMMM@Z ENDP		; D2D1::RectF
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z
_TEXT	SEGMENT
size$ = 0
width$ = 32
height$ = 40
??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z PROC		; D2D1::Size<unsigned int>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 113
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 24
; Line 114
	mov	eax, DWORD PTR width$[rsp]
	mov	DWORD PTR size$[rsp], eax
	mov	eax, DWORD PTR height$[rsp]
	mov	DWORD PTR size$[rsp+4], eax
; Line 116
	mov	rax, QWORD PTR size$[rsp]
; Line 117
	add	rsp, 24
	ret	0
??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z ENDP		; D2D1::Size<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z
_TEXT	SEGMENT
$T1 = 32
width$ = 64
height$ = 72
?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z PROC			; D2D1::SizeU, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 137
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 56					; 00000038H
; Line 138
	mov	edx, DWORD PTR height$[rsp]
	mov	ecx, DWORD PTR width$[rsp]
	call	??$Size@I@D2D1@@YA?AUD2D_SIZE_U@@II@Z	; D2D1::Size<unsigned int>
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]
; Line 139
	add	rsp, 56					; 00000038H
	ret	0
?SizeU@D2D1@@YA?AUD2D_SIZE_U@@II@Z ENDP			; D2D1::SizeU
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$Point2@M@D2D1@@YA?AUD2D_POINT_2F@@MM@Z
_TEXT	SEGMENT
point$ = 0
x$ = 32
y$ = 40
??$Point2@M@D2D1@@YA?AUD2D_POINT_2F@@MM@Z PROC		; D2D1::Point2<float>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 77
$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 24
; Line 78
	movss	xmm0, DWORD PTR x$[rsp]
	movss	DWORD PTR point$[rsp], xmm0
	movss	xmm0, DWORD PTR y$[rsp]
	movss	DWORD PTR point$[rsp+4], xmm0
; Line 80
	mov	rax, QWORD PTR point$[rsp]
; Line 81
	add	rsp, 24
	ret	0
??$Point2@M@D2D1@@YA?AUD2D_POINT_2F@@MM@Z ENDP		; D2D1::Point2<float>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z
_TEXT	SEGMENT
$T1 = 32
x$ = 64
y$ = 72
?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z PROC		; D2D1::Point2F, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1helper.h
; Line 90
$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 56					; 00000038H
; Line 91
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	call	??$Point2@M@D2D1@@YA?AUD2D_POINT_2F@@MM@Z ; D2D1::Point2<float>
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]
; Line 92
	add	rsp, 56					; 00000038H
	ret	0
?Point2F@D2D1@@YA?AUD2D_POINT_2F@@MM@Z ENDP		; D2D1::Point2F
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?CreateHwndRenderTarget@ID2D1Factory@@QEAAJAEBUD2D1_RENDER_TARGET_PROPERTIES@@AEBUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAPEAUID2D1HwndRenderTarget@@@Z
_TEXT	SEGMENT
this$ = 48
renderTargetProperties$ = 56
hwndRenderTargetProperties$ = 64
hwndRenderTarget$ = 72
?CreateHwndRenderTarget@ID2D1Factory@@QEAAJAEBUD2D1_RENDER_TARGET_PROPERTIES@@AEBUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAPEAUID2D1HwndRenderTarget@@@Z PROC ; ID2D1Factory::CreateHwndRenderTarget, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1.h
; Line 3546
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 3547
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r9, QWORD PTR hwndRenderTarget$[rsp]
	mov	r8, QWORD PTR hwndRenderTargetProperties$[rsp]
	mov	rdx, QWORD PTR renderTargetProperties$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+112]
; Line 3548
	add	rsp, 40					; 00000028H
	ret	0
?CreateHwndRenderTarget@ID2D1Factory@@QEAAJAEBUD2D1_RENDER_TARGET_PROPERTIES@@AEBUD2D1_HWND_RENDER_TARGET_PROPERTIES@@PEAPEAUID2D1HwndRenderTarget@@@Z ENDP ; ID2D1Factory::CreateHwndRenderTarget
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Clear@ID2D1RenderTarget@@QEAAXAEBU_D3DCOLORVALUE@@@Z
_TEXT	SEGMENT
this$ = 48
clearColor$ = 56
?Clear@ID2D1RenderTarget@@QEAAXAEBU_D3DCOLORVALUE@@@Z PROC ; ID2D1RenderTarget::Clear, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1.h
; Line 3212
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 3213
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR clearColor$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+376]
; Line 3214
	add	rsp, 40					; 00000028H
	ret	0
?Clear@ID2D1RenderTarget@@QEAAXAEBU_D3DCOLORVALUE@@@Z ENDP ; ID2D1RenderTarget::Clear
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetTransform@ID2D1RenderTarget@@QEAAXAEBUD2D_MATRIX_3X2_F@@@Z
_TEXT	SEGMENT
this$ = 48
transform$ = 56
?SetTransform@ID2D1RenderTarget@@QEAAXAEBUD2D_MATRIX_3X2_F@@@Z PROC ; ID2D1RenderTarget::SetTransform, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1.h
; Line 3183
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 3184
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR transform$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+240]
; Line 3185
	add	rsp, 40					; 00000028H
	ret	0
?SetTransform@ID2D1RenderTarget@@QEAAXAEBUD2D_MATRIX_3X2_F@@@Z ENDP ; ID2D1RenderTarget::SetTransform
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?DrawBitmap@ID2D1RenderTarget@@QEAAXPEAUID2D1Bitmap@@AEBUD2D_RECT_F@@MW4D2D1_BITMAP_INTERPOLATION_MODE@@1@Z
_TEXT	SEGMENT
this$ = 64
bitmap$ = 72
destinationRectangle$ = 80
opacity$ = 88
interpolationMode$ = 96
sourceRectangle$ = 104
?DrawBitmap@ID2D1RenderTarget@@QEAAXPEAUID2D1Bitmap@@AEBUD2D_RECT_F@@MW4D2D1_BITMAP_INTERPOLATION_MODE@@1@Z PROC ; ID2D1RenderTarget::DrawBitmap, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1.h
; Line 3174
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 3175
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sourceRectangle$[rsp]
	mov	QWORD PTR [rsp+40], rcx
	mov	ecx, DWORD PTR interpolationMode$[rsp]
	mov	DWORD PTR [rsp+32], ecx
	movss	xmm3, DWORD PTR opacity$[rsp]
	mov	r8, QWORD PTR destinationRectangle$[rsp]
	mov	rdx, QWORD PTR bitmap$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+208]
; Line 3176
	add	rsp, 56					; 00000038H
	ret	0
?DrawBitmap@ID2D1RenderTarget@@QEAAXPEAUID2D1Bitmap@@AEBUD2D_RECT_F@@MW4D2D1_BITMAP_INTERPOLATION_MODE@@1@Z ENDP ; ID2D1RenderTarget::DrawBitmap
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?FillEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@@Z
_TEXT	SEGMENT
this$ = 48
ellipse$ = 56
brush$ = 64
?FillEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@@Z PROC ; ID2D1RenderTarget::FillEllipse, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1.h
; Line 3135
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 3136
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR brush$[rsp]
	mov	rdx, QWORD PTR ellipse$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+168]
; Line 3137
	add	rsp, 40					; 00000028H
	ret	0
?FillEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@@Z ENDP ; ID2D1RenderTarget::FillEllipse
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?DrawEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z
_TEXT	SEGMENT
this$ = 64
ellipse$ = 72
brush$ = 80
strokeWidth$ = 88
strokeStyle$ = 96
?DrawEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z PROC ; ID2D1RenderTarget::DrawEllipse, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1.h
; Line 3125
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 3126
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR strokeStyle$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	movss	xmm3, DWORD PTR strokeWidth$[rsp]
	mov	r8, QWORD PTR brush$[rsp]
	mov	rdx, QWORD PTR ellipse$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+160]
; Line 3127
	add	rsp, 56					; 00000038H
	ret	0
?DrawEllipse@ID2D1RenderTarget@@QEAAXAEBUD2D1_ELLIPSE@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z ENDP ; ID2D1RenderTarget::DrawEllipse
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?FillRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@@Z
_TEXT	SEGMENT
this$ = 48
rect$ = 56
brush$ = 64
?FillRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@@Z PROC ; ID2D1RenderTarget::FillRectangle, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1.h
; Line 3091
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 3092
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR brush$[rsp]
	mov	rdx, QWORD PTR rect$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+136]
; Line 3093
	add	rsp, 40					; 00000028H
	ret	0
?FillRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@@Z ENDP ; ID2D1RenderTarget::FillRectangle
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?DrawRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z
_TEXT	SEGMENT
this$ = 64
rect$ = 72
brush$ = 80
strokeWidth$ = 88
strokeStyle$ = 96
?DrawRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z PROC ; ID2D1RenderTarget::DrawRectangle, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1.h
; Line 3081
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 3082
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR strokeStyle$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	movss	xmm3, DWORD PTR strokeWidth$[rsp]
	mov	r8, QWORD PTR brush$[rsp]
	mov	rdx, QWORD PTR rect$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+128]
; Line 3083
	add	rsp, 56					; 00000038H
	ret	0
?DrawRectangle@ID2D1RenderTarget@@QEAAXAEBUD2D_RECT_F@@PEAUID2D1Brush@@MPEAUID2D1StrokeStyle@@@Z ENDP ; ID2D1RenderTarget::DrawRectangle
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?CreateSolidColorBrush@ID2D1RenderTarget@@QEAAJAEBU_D3DCOLORVALUE@@PEAPEAUID2D1SolidColorBrush@@@Z
_TEXT	SEGMENT
this$ = 48
color$ = 56
solidColorBrush$ = 64
?CreateSolidColorBrush@ID2D1RenderTarget@@QEAAJAEBU_D3DCOLORVALUE@@PEAPEAUID2D1SolidColorBrush@@@Z PROC ; ID2D1RenderTarget::CreateSolidColorBrush, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1.h
; Line 2927
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 2928
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r9, QWORD PTR solidColorBrush$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR color$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+64]
; Line 2929
	add	rsp, 40					; 00000028H
	ret	0
?CreateSolidColorBrush@ID2D1RenderTarget@@QEAAJAEBU_D3DCOLORVALUE@@PEAPEAUID2D1SolidColorBrush@@@Z ENDP ; ID2D1RenderTarget::CreateSolidColorBrush
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?CreateBitmap@ID2D1RenderTarget@@QEAAJUD2D_SIZE_U@@AEBUD2D1_BITMAP_PROPERTIES@@PEAPEAUID2D1Bitmap@@@Z
_TEXT	SEGMENT
this$ = 64
size$ = 72
bitmapProperties$ = 80
bitmap$ = 88
?CreateBitmap@ID2D1RenderTarget@@QEAAJUD2D_SIZE_U@@AEBUD2D1_BITMAP_PROPERTIES@@PEAPEAUID2D1Bitmap@@@Z PROC ; ID2D1RenderTarget::CreateBitmap, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1.h
; Line 2845
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 2846
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR bitmap$[rsp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR bitmapProperties$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rdx, QWORD PTR size$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+32]
; Line 2847
	add	rsp, 56					; 00000038H
	ret	0
?CreateBitmap@ID2D1RenderTarget@@QEAAJUD2D_SIZE_U@@AEBUD2D1_BITMAP_PROPERTIES@@PEAPEAUID2D1Bitmap@@@Z ENDP ; ID2D1RenderTarget::CreateBitmap
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetColor@ID2D1SolidColorBrush@@QEAAXAEBU_D3DCOLORVALUE@@@Z
_TEXT	SEGMENT
this$ = 48
color$ = 56
?SetColor@ID2D1SolidColorBrush@@QEAAXAEBU_D3DCOLORVALUE@@@Z PROC ; ID2D1SolidColorBrush::SetColor, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\d2d1.h
; Line 1294
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 1295
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR color$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+64]
; Line 1296
	add	rsp, 40					; 00000028H
	ret	0
?SetColor@ID2D1SolidColorBrush@@QEAAXAEBU_D3DCOLORVALUE@@@Z ENDP ; ID2D1SolidColorBrush::SetColor
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
endTime$ = 48
startTime$ = 56
$T1 = 64
perfomranceFreq$ = 72
lastWriteTime$ = 80
msg$2 = 88
hInstance$ = 160
hPrevInstance$ = 168
lpCmdLine$ = 176
nCmdShow$ = 184
WinMain	PROC
; File D:\code\sprite_animation_maker\win_app.cpp
; Line 915
$LN7:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 144				; 00000090H
; Line 916
	call	?winInitializeOS@@YAXXZ			; winInitializeOS
; Line 917
	lea	r8, OFFSET FLAT:$SG164679
	mov	edx, 900				; 00000384H
	mov	ecx, 1600				; 00000640H
	call	?winInitializeWindow@@YAXIIPEAD@Z	; winInitializeWindow
; Line 920
	call	?winInitializeRendering2D@@YAXXZ	; winInitializeRendering2D
; Line 923
	mov	rcx, QWORD PTR ?win32Application@@3PEAUSpranimator@@EA
	call	?initializeApplication@@YAXPEAUSpranimator@@@Z ; initializeApplication
; Line 925
	lea	rcx, OFFSET FLAT:$SG164680
	call	?winGetFileWriteTime@@YA?AU_FILETIME@@PEAD@Z ; winGetFileWriteTime
	mov	QWORD PTR $T1[rsp], rax
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR lastWriteTime$[rsp], rax
; Line 926
	call	?winReloadApplication@@YAXXZ		; winReloadApplication
; Line 931
	lea	rcx, QWORD PTR perfomranceFreq$[rsp]
	call	QWORD PTR __imp_QueryPerformanceFrequency
; Line 932
	lea	rcx, QWORD PTR startTime$[rsp]
	call	QWORD PTR __imp_QueryPerformanceCounter
$LN2@WinMain:
; Line 933
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1220]
	test	eax, eax
	je	$LN3@WinMain
; Line 934
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	DWORD PTR [rax+1204], 0
; Line 935
	lea	rax, QWORD PTR msg$2[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 48					; 00000030H
	rep stosb
$LN4@WinMain:
; Line 936
	mov	DWORD PTR [rsp+32], 1
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR msg$2[rsp]
	call	QWORD PTR __imp_PeekMessageA
	test	eax, eax
	je	SHORT $LN5@WinMain
; Line 937
	lea	rcx, QWORD PTR msg$2[rsp]
	call	QWORD PTR __imp_TranslateMessage
; Line 938
	lea	rcx, QWORD PTR msg$2[rsp]
	call	QWORD PTR __imp_DispatchMessageA
; Line 939
	jmp	SHORT $LN4@WinMain
$LN5@WinMain:
; Line 947
	mov	rcx, QWORD PTR ?win32Application@@3PEAUSpranimator@@EA
	mov	rax, QWORD PTR ?win32Interface@@3PEAUWin32Interface@@EA
	call	QWORD PTR [rax]
; Line 949
	lea	rcx, QWORD PTR endTime$[rsp]
	call	QWORD PTR __imp_QueryPerformanceCounter
; Line 950
	mov	rax, QWORD PTR startTime$[rsp]
	mov	rcx, QWORD PTR endTime$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cvtsi2ss xmm0, rax
	cvtsi2ss xmm1, QWORD PTR perfomranceFreq$[rsp]
	divss	xmm0, xmm1
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	DWORD PTR [rax+1208], xmm0
; Line 951
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR [rax+1212]
	addss	xmm0, DWORD PTR [rcx+1208]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	DWORD PTR [rax+1212], xmm0
; Line 952
	mov	rax, QWORD PTR endTime$[rsp]
	mov	QWORD PTR startTime$[rsp], rax
; Line 953
	jmp	$LN2@WinMain
$LN3@WinMain:
; Line 956
	xor	eax, eax
; Line 957
	add	rsp, 144				; 00000090H
	pop	rdi
	ret	0
WinMain	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv148 = 32
tv166 = 36
sp$ = 64
updateApplication PROC
; File D:\code\sprite_animation_maker\spranimator.cpp
; Line 492
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 493
	mov	rax, QWORD PTR sp$[rsp]
	mov	QWORD PTR ?s@@3PEAUSpranimator@@EA, rax
; Line 494
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR ?os@@3PEAUOSInterface@@EA, rax
; Line 496
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1336]
; Line 497
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 8
	mov	rcx, rax
	call	?initializeGUI@@YAXPEAUGUI@@@Z		; initializeGUI
; Line 499
	movss	xmm3, DWORD PTR __real@3f800000
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1280]
; Line 501
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f19999a
	movss	xmm1, DWORD PTR __real@3f0ccccd
	movss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 502
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm3, DWORD PTR [rax+1192]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm2, DWORD PTR [rax+1188]
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1296]
; Line 504
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	cvtss2sd xmm0, DWORD PTR [rax+1192]
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	mulsd	xmm1, xmm0
	movaps	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	cvtss2sd xmm1, DWORD PTR [rax+1188]
	movsd	xmm2, QWORD PTR __real@3fe0000000000000
	mulsd	xmm2, xmm1
	movaps	xmm1, xmm2
	cvtsd2ss xmm1, xmm1
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	?runControllPanel@@YAXMMMM@Z		; runControllPanel
; Line 505
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR __real@3f800000
	mulss	xmm0, DWORD PTR [rax+1192]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	cvtss2sd xmm1, DWORD PTR [rax+1188]
	movsd	xmm2, QWORD PTR __real@3fe0000000000000
	mulsd	xmm2, xmm1
	movaps	xmm1, xmm2
	cvtsd2ss xmm1, xmm1
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	cvtss2sd xmm2, DWORD PTR [rax+1188]
	movsd	xmm3, QWORD PTR __real@3fe0000000000000
	mulsd	xmm3, xmm2
	movaps	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	movss	DWORD PTR tv148[rsp], xmm2
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR tv148[rsp]
	call	?runImageMapPanel@@YAXMMMM@Z		; runImageMapPanel
; Line 506
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	cvtss2sd xmm0, DWORD PTR [rax+1192]
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	mulsd	xmm1, xmm0
	movaps	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	cvtss2sd xmm1, DWORD PTR [rax+1188]
	movsd	xmm2, QWORD PTR __real@3fe0000000000000
	mulsd	xmm2, xmm1
	movaps	xmm1, xmm2
	cvtsd2ss xmm1, xmm1
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	cvtss2sd xmm2, DWORD PTR [rax+1192]
	movsd	xmm3, QWORD PTR __real@3fe0000000000000
	mulsd	xmm3, xmm2
	movaps	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	movss	DWORD PTR tv166[rsp], xmm2
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv166[rsp]
	movaps	xmm1, xmm0
	xorps	xmm0, xmm0
	call	?runAnimationPanel@@YAXMMMM@Z		; runAnimationPanel
; Line 508
	call	?finalizeGUI@@YAXXZ			; finalizeGUI
; Line 509
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1344]
; Line 510
	add	rsp, 56					; 00000038H
	ret	0
updateApplication ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
sp$ = 8
?initializeApplication@@YAXPEAUSpranimator@@@Z PROC	; initializeApplication
; File D:\code\sprite_animation_maker\spranimator.cpp
; Line 483
	mov	QWORD PTR [rsp+8], rcx
; Line 484
	mov	rax, QWORD PTR sp$[rsp]
	mov	QWORD PTR ?s@@3PEAUSpranimator@@EA, rax
; Line 485
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR ?os@@3PEAUOSInterface@@EA, rax
; Line 487
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax+1090601640], xmm0
; Line 488
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax+1090601644], xmm0
; Line 489
	mov	eax, 16400				; 00004010H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	lea	rax, QWORD PTR [rcx+rax+65584]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	QWORD PTR [rcx+16859184], rax
; Line 490
	ret	0
?initializeApplication@@YAXPEAUSpranimator@@@Z ENDP	; initializeApplication
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
bmx$1 = 48
bmy$2 = 52
pctx$3 = 56
pcty$4 = 60
ry$5 = 64
rx$6 = 68
rh$7 = 72
rw$8 = 76
bmh$9 = 80
bmw$10 = 84
nx$11 = 88
ny$12 = 92
ih$13 = 96
iw$14 = 100
iy$15 = 104
ix$16 = 108
tv204 = 112
tv222 = 116
nw$17 = 120
nh$18 = 124
tv541 = 128
$T19 = 136
tv369 = 144
$T20 = 152
$T21 = 160
$T22 = 168
$T23 = 176
$T24 = 184
$T25 = 192
$T26 = 200
$T27 = 208
$T28 = 216
__$ArrayPad$ = 224
x$ = 256
y$ = 264
w$ = 272
h$ = 280
?runImageMapPanel@@YAXMMMM@Z PROC			; runImageMapPanel
; File D:\code\sprite_animation_maker\spranimator.cpp
; Line 391
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 248				; 000000f8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 392
	movss	xmm3, DWORD PTR __real@3f800000
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 393
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1352]
; Line 394
	movss	xmm3, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1288]
; Line 396
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	QWORD PTR [rax+1090601576], 0
	je	$LN2@runImageMa
; Line 397
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601544]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mulss	xmm0, DWORD PTR [rax+1090601640]
	movss	DWORD PTR bmw$10[rsp], xmm0
; Line 398
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601548]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mulss	xmm0, DWORD PTR [rax+1090601640]
	movss	DWORD PTR bmh$9[rsp], xmm0
; Line 399
	cvtss2sd xmm0, DWORD PTR x$[rsp]
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	addsd	xmm0, xmm1
	cvtss2sd xmm1, DWORD PTR bmw$10[rsp]
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	subsd	xmm0, xmm1
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cvtss2sd xmm1, DWORD PTR [rax+1090601632]
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR bmx$1[rsp], xmm0
; Line 400
	cvtss2sd xmm0, DWORD PTR y$[rsp]
	cvtss2sd xmm1, DWORD PTR h$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	addsd	xmm0, xmm1
	cvtss2sd xmm1, DWORD PTR bmh$9[rsp]
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	subsd	xmm0, xmm1
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cvtss2sd xmm1, DWORD PTR [rax+1090601636]
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR bmy$2[rsp], xmm0
; Line 402
	movss	xmm0, DWORD PTR x$[rsp]
	addss	xmm0, DWORD PTR w$[rsp]
	movaps	xmm2, xmm0
	movss	xmm1, DWORD PTR x$[rsp]
	movss	xmm0, DWORD PTR bmx$1[rsp]
	call	?clamp@@YAMMMM@Z			; clamp
	movss	DWORD PTR ix$16[rsp], xmm0
; Line 403
	movss	xmm0, DWORD PTR y$[rsp]
	addss	xmm0, DWORD PTR h$[rsp]
	movaps	xmm2, xmm0
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR bmy$2[rsp]
	call	?clamp@@YAMMMM@Z			; clamp
	movss	DWORD PTR iy$15[rsp], xmm0
; Line 404
	movss	xmm0, DWORD PTR x$[rsp]
	subss	xmm0, DWORD PTR bmx$1[rsp]
	xorps	xmm1, xmm1
	call	?max@@YAMMM@Z				; max
	movss	xmm1, DWORD PTR bmw$10[rsp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR iw$14[rsp], xmm0
; Line 405
	movss	xmm0, DWORD PTR y$[rsp]
	subss	xmm0, DWORD PTR bmy$2[rsp]
	xorps	xmm1, xmm1
	call	?max@@YAMMM@Z				; max
	movss	xmm1, DWORD PTR bmh$9[rsp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR ih$13[rsp], xmm0
; Line 407
	movss	xmm0, DWORD PTR x$[rsp]
	subss	xmm0, DWORD PTR bmx$1[rsp]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	divss	xmm0, DWORD PTR [rax+1090601640]
	xorps	xmm1, xmm1
	call	?max@@YAMMM@Z				; max
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601552], xmm0
; Line 408
	movss	xmm0, DWORD PTR y$[rsp]
	subss	xmm0, DWORD PTR bmy$2[rsp]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	divss	xmm0, DWORD PTR [rax+1090601640]
	xorps	xmm1, xmm1
	call	?max@@YAMMM@Z				; max
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601556], xmm0
; Line 409
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601544]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601544]
	cvtsi2ss xmm1, rax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	subss	xmm1, DWORD PTR [rax+1090601552]
	movss	DWORD PTR tv204[rsp], xmm1
	movaps	xmm2, xmm0
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR tv204[rsp]
	call	?clamp@@YAMMMM@Z			; clamp
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601560], xmm0
; Line 410
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601548]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601548]
	cvtsi2ss xmm1, rax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	subss	xmm1, DWORD PTR [rax+1090601556]
	movss	DWORD PTR tv222[rsp], xmm1
	movaps	xmm2, xmm0
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR tv222[rsp]
	call	?clamp@@YAMMMM@Z			; clamp
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601564], xmm0
; Line 412
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rcx, QWORD PTR [rax+1172]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	movzx	eax, al
	test	eax, eax
	je	$LN3@runImageMa
; Line 413
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1667]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rcx+rax+1152]
	test	eax, eax
	je	SHORT $LN4@runImageMa
; Line 414
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	r8, QWORD PTR [rax+65552]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rdx, QWORD PTR [rax+1172]
	lea	rcx, QWORD PTR $T21[rsp]
	call	??G@YA?ATVector2@@T0@0@Z		; operator-
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 1090601632				; 410142a0H
	mov	rdx, QWORD PTR [rax]
	call	??YVector2@@QEAAXT0@@Z			; Vector2::operator+=
$LN4@runImageMa:
; Line 417
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	cmp	DWORD PTR [rax+1204], 0
	je	$LN5@runImageMa
; Line 418
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	cvtsi2sd xmm0, DWORD PTR [rax+1204]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cvtss2sd xmm1, DWORD PTR [rax+1090601640]
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601640], xmm0
; Line 419
	movss	xmm1, DWORD PTR __real@3c23d70a
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601640]
	call	?max@@YAMMM@Z				; max
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601640], xmm0
; Line 421
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601544]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mulss	xmm0, DWORD PTR [rax+1090601640]
	movss	DWORD PTR nw$17[rsp], xmm0
; Line 422
	cvtss2sd xmm0, DWORD PTR x$[rsp]
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	addsd	xmm0, xmm1
	cvtss2sd xmm1, DWORD PTR nw$17[rsp]
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	subsd	xmm0, xmm1
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cvtss2sd xmm1, DWORD PTR [rax+1090601632]
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR nx$11[rsp], xmm0
; Line 423
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601548]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mulss	xmm0, DWORD PTR [rax+1090601640]
	movss	DWORD PTR nh$18[rsp], xmm0
; Line 424
	cvtss2sd xmm0, DWORD PTR y$[rsp]
	cvtss2sd xmm1, DWORD PTR h$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	addsd	xmm0, xmm1
	cvtss2sd xmm1, DWORD PTR nh$18[rsp]
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	subsd	xmm0, xmm1
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cvtss2sd xmm1, DWORD PTR [rax+1090601636]
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ny$12[rsp], xmm0
; Line 426
	movss	xmm0, DWORD PTR bmx$1[rsp]
	addss	xmm0, DWORD PTR bmw$10[rsp]
	movss	xmm1, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm1
	xorps	xmm3, xmm3
	movaps	xmm2, xmm0
	movss	xmm1, DWORD PTR bmx$1[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR [rax+1172]
	call	?map@@YAMMMMMM@Z			; map
	movss	DWORD PTR pctx$3[rsp], xmm0
; Line 427
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR pctx$3[rsp]
	call	?clamp@@YAMMMM@Z			; clamp
	movss	DWORD PTR pctx$3[rsp], xmm0
; Line 428
	movss	xmm0, DWORD PTR bmx$1[rsp]
	subss	xmm0, DWORD PTR nx$11[rsp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR bmx$1[rsp]
	subss	xmm1, DWORD PTR nx$11[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR pctx$3[rsp]
	call	?map@@YAMMMMMM@Z			; map
	movss	DWORD PTR pctx$3[rsp], xmm0
; Line 429
	movss	xmm0, DWORD PTR bmy$2[rsp]
	addss	xmm0, DWORD PTR bmh$9[rsp]
	movss	xmm1, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm1
	xorps	xmm3, xmm3
	movaps	xmm2, xmm0
	movss	xmm1, DWORD PTR bmy$2[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR [rax+1176]
	call	?map@@YAMMMMMM@Z			; map
	movss	DWORD PTR pcty$4[rsp], xmm0
; Line 430
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR pcty$4[rsp]
	call	?clamp@@YAMMMM@Z			; clamp
	movss	DWORD PTR pcty$4[rsp], xmm0
; Line 431
	movss	xmm0, DWORD PTR bmy$2[rsp]
	subss	xmm0, DWORD PTR ny$12[rsp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR bmy$2[rsp]
	subss	xmm1, DWORD PTR ny$12[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR pcty$4[rsp]
	call	?map@@YAMMMMMM@Z			; map
	movss	DWORD PTR pcty$4[rsp], xmm0
; Line 435
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601632]
	addss	xmm0, DWORD PTR pctx$3[rsp]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601632], xmm0
; Line 436
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601636]
	addss	xmm0, DWORD PTR pcty$4[rsp]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601636], xmm0
$LN5@runImageMa:
; Line 439
	movss	xmm0, DWORD PTR bmh$9[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR bmw$10[rsp]
	movss	xmm2, DWORD PTR bmy$2[rsp]
	movss	xmm1, DWORD PTR bmx$1[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rcx, QWORD PTR [rax+1172]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	movzx	eax, al
	test	eax, eax
	je	$LN6@runImageMa
; Line 440
	lea	rax, QWORD PTR $T20[rsp]
	mov	QWORD PTR $T19[rsp], rax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm1, DWORD PTR [rax+1090601640]
	mov	rcx, QWORD PTR $T19[rsp]
	call	??0Vector2@@QEAA@M@Z			; Vector2::Vector2
	mov	QWORD PTR tv369[rsp], rax
	movss	xmm2, DWORD PTR bmy$2[rsp]
	movss	xmm1, DWORD PTR bmx$1[rsp]
	lea	rcx, QWORD PTR $T22[rsp]
	call	??0Vector2@@QEAA@MM@Z			; Vector2::Vector2
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rdx, QWORD PTR [rax+1172]
	lea	rcx, QWORD PTR $T23[rsp]
	call	??G@YA?ATVector2@@T0@0@Z		; operator-
	mov	rcx, QWORD PTR tv369[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR $T24[rsp]
	call	??K@YA?ATVector2@@T0@0@Z		; operator/
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 1090601616				; 41014290H
	mov	rdx, QWORD PTR [rax]
	call	??4Vector2@@QEAAXT0@@Z			; Vector2::operator=
; Line 441
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cvttss2si rax, DWORD PTR [rax+1090601620]
	mov	eax, eax
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cvttss2si rax, DWORD PTR [rax+1090601616]
	mov	eax, eax
	cvtsi2ss xmm1, rax
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T25[rsp]
	call	??0Vector2@@QEAA@MM@Z			; Vector2::Vector2
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 1090601616				; 41014290H
	mov	rdx, QWORD PTR [rax]
	call	??4Vector2@@QEAAXT0@@Z			; Vector2::operator=
; Line 443
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65569]
	test	eax, eax
	je	SHORT $LN7@runImageMa
; Line 444
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 1090601600				; 41014280H
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rdx, QWORD PTR [rcx+1090601616]
	mov	rcx, rax
	call	??4Vector2@@QEAAXT0@@Z			; Vector2::operator=
	jmp	SHORT $LN8@runImageMa
$LN7@runImageMa:
; Line 445
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1666]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rcx+rax+1152]
	test	eax, eax
	je	SHORT $LN9@runImageMa
; Line 446
	movss	xmm2, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rdx, QWORD PTR [rax+1090601616]
	lea	rcx, QWORD PTR $T26[rsp]
	call	??H@YA?ATVector2@@T0@M@Z		; operator+
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 1090601608				; 41014288H
	mov	rdx, QWORD PTR [rax]
	call	??4Vector2@@QEAAXT0@@Z			; Vector2::operator=
$LN9@runImageMa:
$LN8@runImageMa:
; Line 449
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601548]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601544]
	cvtsi2ss xmm1, rax
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T27[rsp]
	call	??0Vector2@@QEAA@MM@Z			; Vector2::Vector2
	mov	r9, QWORD PTR [rax]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	r8, QWORD PTR [rax+1090601600]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rdx, QWORD PTR [rax+1090601608]
	lea	rcx, QWORD PTR $T28[rsp]
	call	?clamp@@YA?ATVector2@@T1@00@Z		; clamp
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 1090601608				; 41014288H
	mov	rdx, QWORD PTR [rax]
	call	??4Vector2@@QEAAXT0@@Z			; Vector2::operator=
$LN6@runImageMa:
$LN3@runImageMa:
; Line 454
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 1090601536				; 41014240H
	movss	xmm0, DWORD PTR ih$13[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR iw$14[rsp]
	movss	xmm2, DWORD PTR iy$15[rsp]
	movss	xmm1, DWORD PTR ix$16[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1400]
; Line 456
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3f50624dd2f1a9fc
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1352]
; Line 457
	movss	xmm3, DWORD PTR __real@3f800000
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 458
	movss	xmm3, DWORD PTR ih$13[rsp]
	movss	xmm2, DWORD PTR iw$14[rsp]
	movss	xmm1, DWORD PTR iy$15[rsp]
	movss	xmm0, DWORD PTR ix$16[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1288]
; Line 460
	movss	xmm3, DWORD PTR __real@3f800000
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	xorps	xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 462
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601600]
	mulss	xmm0, DWORD PTR [rcx+1090601640]
	movss	DWORD PTR rx$6[rsp], xmm0
; Line 463
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601604]
	mulss	xmm0, DWORD PTR [rcx+1090601640]
	movss	DWORD PTR ry$5[rsp], xmm0
; Line 464
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601608]
	mulss	xmm0, DWORD PTR [rcx+1090601640]
	subss	xmm0, DWORD PTR rx$6[rsp]
	movss	DWORD PTR rw$8[rsp], xmm0
; Line 465
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601612]
	mulss	xmm0, DWORD PTR [rcx+1090601640]
	subss	xmm0, DWORD PTR ry$5[rsp]
	movss	DWORD PTR rh$7[rsp], xmm0
; Line 467
	movss	xmm0, DWORD PTR rx$6[rsp]
	addss	xmm0, DWORD PTR bmx$1[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN10@runImageMa
; Line 468
	movss	xmm0, DWORD PTR rx$6[rsp]
	addss	xmm0, DWORD PTR bmx$1[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR rw$8[rsp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR rw$8[rsp], xmm0
; Line 469
	movss	xmm0, DWORD PTR x$[rsp]
	subss	xmm0, DWORD PTR bmx$1[rsp]
	movss	DWORD PTR rx$6[rsp], xmm0
$LN10@runImageMa:
; Line 471
	movss	xmm0, DWORD PTR y$[rsp]
	comiss	xmm0, DWORD PTR ry$5[rsp]
	jbe	SHORT $LN11@runImageMa
; Line 472
	movss	xmm0, DWORD PTR ry$5[rsp]
	addss	xmm0, DWORD PTR bmy$2[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR rh$7[rsp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR rh$7[rsp], xmm0
; Line 473
	movss	xmm0, DWORD PTR y$[rsp]
	subss	xmm0, DWORD PTR bmy$2[rsp]
	movss	DWORD PTR ry$5[rsp], xmm0
$LN11@runImageMa:
; Line 476
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR rw$8[rsp]
	call	?max@@YAMMM@Z				; max
	movss	DWORD PTR rw$8[rsp], xmm0
; Line 477
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR rh$7[rsp]
	call	?max@@YAMMM@Z				; max
	movss	DWORD PTR rh$7[rsp], xmm0
; Line 479
	movss	xmm0, DWORD PTR ry$5[rsp]
	addss	xmm0, DWORD PTR bmy$2[rsp]
	movss	xmm1, DWORD PTR rx$6[rsp]
	addss	xmm1, DWORD PTR bmx$1[rsp]
	movss	DWORD PTR tv541[rsp], xmm1
	movss	xmm3, DWORD PTR rh$7[rsp]
	movss	xmm2, DWORD PTR rw$8[rsp]
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR tv541[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1288]
$LN2@runImageMa:
; Line 481
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 248				; 000000f8H
	ret	0
?runImageMapPanel@@YAXMMMM@Z ENDP			; runImageMapPanel
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
a$ = 48
ih$ = 56
iw$ = 60
i$ = 64
iy$ = 68
ix$ = 72
$T1 = 80
$T2 = 96
b$ = 112
__$ArrayPad$ = 128
x$ = 176
y$ = 184
w$ = 192
h$ = 200
?runAnimationPanel@@YAXMMMM@Z PROC			; runAnimationPanel
; File D:\code\sprite_animation_maker\spranimator.cpp
; Line 350
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rsi
	push	rdi
	sub	rsp, 152				; 00000098H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 351
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rax, QWORD PTR [rax+16859184]
	mov	QWORD PTR a$[rsp], rax
; Line 353
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rcx, QWORD PTR [rax+1172]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@runAnimati
; Line 354
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	cmp	DWORD PTR [rax+1204], 0
	je	SHORT $LN3@runAnimati
; Line 355
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	cvtsi2sd xmm0, DWORD PTR [rax+1204]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cvtss2sd xmm1, DWORD PTR [rax+1090601644]
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601644], xmm0
; Line 356
	movss	xmm1, DWORD PTR __real@3c23d70a
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601644]
	call	?max@@YAMMM@Z				; max
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601644], xmm0
$LN3@runAnimati:
$LN2@runAnimati:
; Line 360
	movss	xmm3, DWORD PTR __real@3f800000
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 361
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1352]
; Line 362
	movss	xmm3, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1288]
; Line 364
	mov	rax, QWORD PTR a$[rsp]
	cmp	DWORD PTR [rax+16388], 1
	jae	SHORT $LN4@runAnimati
; Line 365
	jmp	$LN1@runAnimati
$LN4@runAnimati:
; Line 369
	lea	rax, QWORD PTR b$[rsp]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rdi, rax
	lea	rsi, QWORD PTR [rcx+1090601552]
	mov	ecx, 16
	rep movsb
; Line 371
	mov	rax, QWORD PTR a$[rsp]
	mov	eax, DWORD PTR [rax+16384]
	mov	DWORD PTR i$[rsp], eax
; Line 372
	mov	eax, DWORD PTR i$[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR a$[rsp]
	movups	xmm0, XMMWORD PTR [rcx+rax]
	movdqa	XMMWORD PTR $T1[rsp], xmm0
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 1090601552				; 41014250H
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rax
	call	??4Vector4@@QEAAXT0@@Z			; Vector4::operator=
; Line 373
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601560]
	mulss	xmm0, DWORD PTR [rcx+1090601644]
	movss	DWORD PTR iw$[rsp], xmm0
; Line 374
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601564]
	mulss	xmm0, DWORD PTR [rcx+1090601644]
	movss	DWORD PTR ih$[rsp], xmm0
; Line 375
	cvtss2sd xmm0, DWORD PTR x$[rsp]
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	addsd	xmm0, xmm1
	cvtss2sd xmm1, DWORD PTR iw$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	subsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ix$[rsp], xmm0
; Line 376
	cvtss2sd xmm0, DWORD PTR y$[rsp]
	cvtss2sd xmm1, DWORD PTR h$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	addsd	xmm0, xmm1
	cvtss2sd xmm1, DWORD PTR ih$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fe0000000000000
	subsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR iy$[rsp], xmm0
; Line 377
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 1090601536				; 41014240H
	movss	xmm0, DWORD PTR ih$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR iw$[rsp]
	movss	xmm2, DWORD PTR iy$[rsp]
	movss	xmm1, DWORD PTR ix$[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1400]
; Line 378
	movaps	xmm0, XMMWORD PTR b$[rsp]
	movdqa	XMMWORD PTR $T2[rsp], xmm0
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 1090601552				; 41014250H
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rax
	call	??4Vector4@@QEAAXT0@@Z			; Vector4::operator=
; Line 380
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movzx	eax, BYTE PTR [rax+1090601648]
	test	eax, eax
	je	$LN5@runAnimati
; Line 381
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR [rax+16396]
	addss	xmm0, DWORD PTR [rcx+1208]
	mov	rax, QWORD PTR a$[rsp]
	movss	DWORD PTR [rax+16396], xmm0
; Line 383
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rax+16396]
	comiss	xmm0, DWORD PTR [rcx+16392]
	jbe	SHORT $LN6@runAnimati
; Line 384
	mov	rax, QWORD PTR a$[rsp]
	mov	eax, DWORD PTR [rax+16384]
	inc	eax
	xor	edx, edx
	mov	rcx, QWORD PTR a$[rsp]
	div	DWORD PTR [rcx+16388]
	mov	eax, edx
	mov	rcx, QWORD PTR a$[rsp]
	mov	DWORD PTR [rcx+16384], eax
; Line 385
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rax+16396]
	subss	xmm0, DWORD PTR [rcx+16392]
	mov	rax, QWORD PTR a$[rsp]
	movss	DWORD PTR [rax+16396], xmm0
$LN6@runAnimati:
$LN5@runAnimati:
$LN1@runAnimati:
; Line 389
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 152				; 00000098H
	pop	rdi
	pop	rsi
	ret	0
?runAnimationPanel@@YAXMMMM@Z ENDP			; runAnimationPanel
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
a$ = 48
fptr$1 = 56
fptr$2 = 64
i$3 = 72
i$4 = 76
i$5 = 80
i$6 = 84
i$7 = 88
j$8 = 92
i$9 = 96
j$10 = 100
sz$11 = 104
an$12 = 112
an$13 = 120
a$14 = 128
totalPixels$15 = 136
tv434 = 140
totalPixels$16 = 144
tv515 = 148
tv568 = 152
tv604 = 156
tv669 = 160
tv705 = 164
tv779 = 168
tv810 = 172
tv870 = 176
tv893 = 180
tv945 = 184
tv993 = 188
tv1026 = 192
tv1093 = 196
tv1125 = 200
tv1160 = 204
tv1192 = 208
tv1227 = 212
tv1261 = 216
tv1296 = 220
tv1330 = 224
tv83 = 228
sz$17 = 232
tv213 = 236
tv235 = 240
tv324 = 244
tv349 = 248
dataStart$18 = 256
pix$19 = 264
pix$20 = 272
tv367 = 280
tv369 = 288
tv452 = 296
tv454 = 304
tv532 = 312
tv1376 = 320
$T21 = 336
$T22 = 352
$T23 = 368
$T24 = 384
$T25 = 400
$T26 = 416
$T27 = 432
$T28 = 448
__$ArrayPad$ = 464
x$ = 496
y$ = 504
w$ = 512
h$ = 520
?runControllPanel@@YAXMMMM@Z PROC			; runControllPanel
; File D:\code\sprite_animation_maker\spranimator.cpp
; Line 58
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 488				; 000001e8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 60
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fc999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fd3333333333333
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fe0000000000000
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv83[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv83[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG31980
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	$LN26@runControl
; Line 61
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 16859200				; 01014040H
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1504]
	movzx	eax, al
	test	eax, eax
	je	$LN27@runControl
; Line 62
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	QWORD PTR [rax+1090601576], 0
	je	SHORT $LN28@runControl
; Line 63
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 1090601536				; 41014240H
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1392]
$LN28@runControl:
; Line 66
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 16859712				; 01014240H
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 16859200				; 01014040H
	mov	rdx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1416]
; Line 67
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 16859712				; 01014240H
	mov	QWORD PTR fptr$2[rsp], rax
; Line 69
	mov	rax, QWORD PTR fptr$2[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	DWORD PTR [rcx+16859196], eax
	mov	rax, QWORD PTR fptr$2[rsp]
	inc	rax
	mov	QWORD PTR fptr$2[rsp], rax
; Line 70
	mov	DWORD PTR i$7[rsp], 0
	jmp	SHORT $LN4@runControl
$LN2@runControl:
	mov	eax, DWORD PTR i$7[rsp]
	inc	eax
	mov	DWORD PTR i$7[rsp], eax
$LN4@runControl:
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859196]
	cmp	DWORD PTR i$7[rsp], eax
	jae	$LN3@runControl
; Line 71
	mov	eax, DWORD PTR i$7[rsp]
	imul	rax, rax, 16400				; 00004010H
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	lea	rax, QWORD PTR [rcx+rax+65584]
	mov	QWORD PTR an$12[rsp], rax
; Line 72
	mov	rax, QWORD PTR fptr$2[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	rcx, QWORD PTR an$12[rsp]
	mov	DWORD PTR [rcx+16388], eax
	mov	rax, QWORD PTR fptr$2[rsp]
	inc	rax
	mov	QWORD PTR fptr$2[rsp], rax
; Line 73
	mov	rax, QWORD PTR an$12[rsp]
	mov	rcx, QWORD PTR fptr$2[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax+16392], xmm0
	mov	rax, QWORD PTR fptr$2[rsp]
	add	rax, 4
	mov	QWORD PTR fptr$2[rsp], rax
; Line 74
	mov	DWORD PTR j$8[rsp], 0
	jmp	SHORT $LN7@runControl
$LN5@runControl:
	mov	eax, DWORD PTR j$8[rsp]
	inc	eax
	mov	DWORD PTR j$8[rsp], eax
$LN7@runControl:
	mov	rax, QWORD PTR an$12[rsp]
	mov	eax, DWORD PTR [rax+16388]
	cmp	DWORD PTR j$8[rsp], eax
	jae	SHORT $LN6@runControl
; Line 75
	mov	rax, QWORD PTR fptr$2[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T21[rsp], xmm0
	mov	eax, DWORD PTR j$8[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR an$12[rsp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T21[rsp]
	mov	rcx, rax
	call	??4Vector4@@QEAAXT0@@Z			; Vector4::operator=
	mov	rax, QWORD PTR fptr$2[rsp]
	add	rax, 16
	mov	QWORD PTR fptr$2[rsp], rax
; Line 76
	jmp	SHORT $LN5@runControl
$LN6@runControl:
; Line 77
	jmp	$LN2@runControl
$LN3@runControl:
; Line 79
	mov	rax, QWORD PTR fptr$2[rsp]
	movzx	eax, WORD PTR [rax]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	DWORD PTR [rcx+1090601584], eax
	mov	rax, QWORD PTR fptr$2[rsp]
	add	rax, 2
	mov	QWORD PTR fptr$2[rsp], rax
; Line 80
	mov	rax, QWORD PTR fptr$2[rsp]
	movzx	eax, WORD PTR [rax]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	DWORD PTR [rcx+1090601588], eax
	mov	rax, QWORD PTR fptr$2[rsp]
	add	rax, 2
	mov	QWORD PTR fptr$2[rsp], rax
; Line 81
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601584]
	imul	eax, DWORD PTR [rcx+1090601588]
	shl	eax, 2
	mov	DWORD PTR sz$17[rsp], eax
; Line 82
	mov	eax, DWORD PTR sz$17[rsp]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 553730624				; 21014240H
	mov	r8d, eax
	mov	rdx, QWORD PTR fptr$2[rsp]
	call	?copyMemory@@YAXPEAX0_K@Z		; copyMemory
; Line 83
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	DWORD PTR [rax+1090601592], 4
; Line 84
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	DWORD PTR [rax+1090601596], 8
; Line 85
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 553730624				; 21014240H
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 1090601536				; 41014240H
	mov	QWORD PTR [rsp+32], rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	r9d, DWORD PTR [rax+1708]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	r8d, DWORD PTR [rax+1090601588]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	edx, DWORD PTR [rax+1090601584]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1384]
$LN27@runControl:
$LN26@runControl:
; Line 90
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movzx	eax, BYTE PTR [rax+1090601649]
	test	eax, eax
	je	$LN29@runControl
; Line 91
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fd999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fe0000000000000
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fc999999999999a
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv213[rsp], xmm3
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 16859200				; 01014040H
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv213[rsp]
	movaps	xmm1, xmm0
	mov	rcx, rax
	call	?textInput@@YA_NPEADMMMM@Z		; textInput
; Line 93
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fe6666666666666
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fc999999999999a
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv235[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv235[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG31985
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	$LN30@runControl
; Line 94
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 16859200				; 01014040H
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 16859712				; 01014240H
	lea	r9, OFFSET FLAT:$SG31986
	mov	r8, rax
	lea	rdx, OFFSET FLAT:$SG31987
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1368]
; Line 96
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 16859712				; 01014240H
	mov	rcx, rax
	call	?getLength@@YAIPEAD@Z			; getLength
	mov	eax, eax
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	lea	rax, QWORD PTR [rcx+rax+16859713]
	mov	QWORD PTR fptr$1[rsp], rax
; Line 97
	mov	rax, QWORD PTR fptr$1[rsp]
	mov	QWORD PTR dataStart$18[rsp], rax
; Line 99
	mov	rax, QWORD PTR fptr$1[rsp]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movzx	ecx, BYTE PTR [rcx+16859196]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR fptr$1[rsp]
	inc	rax
	mov	QWORD PTR fptr$1[rsp], rax
; Line 101
	mov	DWORD PTR i$9[rsp], 0
	jmp	SHORT $LN10@runControl
$LN8@runControl:
	mov	eax, DWORD PTR i$9[rsp]
	inc	eax
	mov	DWORD PTR i$9[rsp], eax
$LN10@runControl:
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859196]
	cmp	DWORD PTR i$9[rsp], eax
	jae	$LN9@runControl
; Line 102
	mov	eax, DWORD PTR i$9[rsp]
	imul	rax, rax, 16400				; 00004010H
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	lea	rax, QWORD PTR [rcx+rax+65584]
	mov	QWORD PTR an$13[rsp], rax
; Line 103
	mov	rax, QWORD PTR fptr$1[rsp]
	mov	rcx, QWORD PTR an$13[rsp]
	movzx	ecx, BYTE PTR [rcx+16388]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR fptr$1[rsp]
	inc	rax
	mov	QWORD PTR fptr$1[rsp], rax
; Line 104
	mov	rax, QWORD PTR fptr$1[rsp]
	mov	rcx, QWORD PTR an$13[rsp]
	movss	xmm0, DWORD PTR [rcx+16392]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR fptr$1[rsp]
	add	rax, 4
	mov	QWORD PTR fptr$1[rsp], rax
; Line 105
	mov	DWORD PTR j$10[rsp], 0
	jmp	SHORT $LN13@runControl
$LN11@runControl:
	mov	eax, DWORD PTR j$10[rsp]
	inc	eax
	mov	DWORD PTR j$10[rsp], eax
$LN13@runControl:
	mov	rax, QWORD PTR an$13[rsp]
	mov	eax, DWORD PTR [rax+16388]
	cmp	DWORD PTR j$10[rsp], eax
	jae	SHORT $LN12@runControl
; Line 106
	mov	eax, DWORD PTR j$10[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR an$13[rsp]
	movups	xmm0, XMMWORD PTR [rcx+rax]
	movdqa	XMMWORD PTR $T22[rsp], xmm0
	lea	rdx, QWORD PTR $T22[rsp]
	mov	rcx, QWORD PTR fptr$1[rsp]
	call	??4Vector4@@QEAAXT0@@Z			; Vector4::operator=
	mov	rax, QWORD PTR fptr$1[rsp]
	add	rax, 16
	mov	QWORD PTR fptr$1[rsp], rax
; Line 107
	jmp	SHORT $LN11@runControl
$LN12@runControl:
; Line 108
	jmp	$LN8@runControl
$LN9@runControl:
; Line 110
	mov	rax, QWORD PTR fptr$1[rsp]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movzx	ecx, WORD PTR [rcx+1090601544]
	mov	WORD PTR [rax], cx
	mov	rax, QWORD PTR fptr$1[rsp]
	add	rax, 2
	mov	QWORD PTR fptr$1[rsp], rax
; Line 111
	mov	rax, QWORD PTR fptr$1[rsp]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movzx	ecx, WORD PTR [rcx+1090601548]
	mov	WORD PTR [rax], cx
	mov	rax, QWORD PTR fptr$1[rsp]
	add	rax, 2
	mov	QWORD PTR fptr$1[rsp], rax
; Line 112
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601544]
	imul	eax, DWORD PTR [rcx+1090601548]
	shl	eax, 2
	mov	DWORD PTR sz$11[rsp], eax
; Line 113
	mov	eax, DWORD PTR sz$11[rsp]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 553730624				; 21014240H
	mov	r8d, eax
	mov	rdx, rcx
	mov	rcx, QWORD PTR fptr$1[rsp]
	call	?copyMemory@@YAXPEAX0_K@Z		; copyMemory
; Line 114
	mov	eax, DWORD PTR sz$11[rsp]
	mov	rcx, QWORD PTR fptr$1[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR fptr$1[rsp], rax
; Line 116
	mov	rax, QWORD PTR dataStart$18[rsp]
	mov	rcx, QWORD PTR fptr$1[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 16859712				; 01014240H
	xor	r9d, r9d
	mov	r8d, eax
	mov	rdx, QWORD PTR dataStart$18[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1496]
; Line 118
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	BYTE PTR [rax+1090601649], 0
$LN30@runControl:
; Line 121
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fe6666666666666
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fd999999999999a
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv324[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv324[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG31989
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN31@runControl
; Line 122
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	BYTE PTR [rax+1090601649], 0
$LN31@runControl:
; Line 125
	jmp	$LN1@runControl
$LN29@runControl:
; Line 129
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fc3333333333333
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fd3333333333333
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fea8f5c28f5c28f
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv349[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv349[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG31991
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	$LN32@runControl
; Line 130
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 16859200				; 01014040H
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1504]
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN33@runControl
; Line 131
	jmp	$LN1@runControl
$LN33@runControl:
; Line 134
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 1090601596				; 4101427cH
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 1090601592				; 41014278H
	mov	rdx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rdx, 1090601588				; 41014274H
	mov	r8, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	r8, 1090601584				; 41014270H
	mov	QWORD PTR tv367[rsp], r8
	mov	r9, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	r9, 16859200				; 01014040H
	mov	QWORD PTR tv369[rsp], r9
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8, rdx
	mov	rax, QWORD PTR tv367[rsp]
	mov	rdx, rax
	mov	rax, QWORD PTR tv369[rsp]
	mov	rcx, rax
	call	?uncompressPNG@@YAPEAMPEBDPEAI111@Z	; uncompressPNG
	mov	QWORD PTR pix$19[rsp], rax
; Line 136
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	DWORD PTR [rax+1090601592], 3
	je	SHORT $LN35@runControl
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	DWORD PTR [rax+1090601592], 4
	jne	$LN34@runControl
$LN35@runControl:
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	DWORD PTR [rax+1090601596], 8
	jne	$LN34@runControl
; Line 137
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601584]
	imul	eax, DWORD PTR [rcx+1090601588]
	shl	eax, 2
	mov	DWORD PTR totalPixels$15[rsp], eax
; Line 138
	mov	DWORD PTR i$3[rsp], 0
	jmp	SHORT $LN16@runControl
$LN14@runControl:
	mov	eax, DWORD PTR i$3[rsp]
	inc	eax
	mov	DWORD PTR i$3[rsp], eax
$LN16@runControl:
	mov	eax, DWORD PTR totalPixels$15[rsp]
	cmp	DWORD PTR i$3[rsp], eax
	jae	SHORT $LN15@runControl
; Line 139
	mov	eax, DWORD PTR i$3[rsp]
	mov	rcx, QWORD PTR pix$19[rsp]
	movss	xmm0, DWORD PTR [rcx+rax*4]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si eax, xmm0
	mov	ecx, DWORD PTR i$3[rsp]
	mov	rdx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	BYTE PTR [rdx+rcx+553730624], al
; Line 140
	jmp	SHORT $LN14@runControl
$LN15@runControl:
; Line 142
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	QWORD PTR [rax+1090601576], 0
	je	SHORT $LN36@runControl
; Line 143
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 1090601536				; 41014240H
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1392]
$LN36@runControl:
; Line 146
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 553730624				; 21014240H
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 1090601536				; 41014240H
	mov	QWORD PTR [rsp+32], rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	r9d, DWORD PTR [rax+1708]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	r8d, DWORD PTR [rax+1090601588]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	edx, DWORD PTR [rax+1090601584]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1384]
; Line 147
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	DWORD PTR [rax+16859196], 1
$LN34@runControl:
; Line 149
	mov	rcx, QWORD PTR pix$19[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1432]
$LN32@runControl:
; Line 152
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	QWORD PTR [rax+1090601576], 0
	je	$LN37@runControl
; Line 153
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fc3333333333333
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fc70a3d70a3d70a
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fea8f5c28f5c28f
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv434[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv434[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG31998
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	$LN38@runControl
; Line 154
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 16859200				; 01014040H
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1504]
	movzx	eax, al
	test	eax, eax
	je	$LN39@runControl
; Line 155
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 1090601596				; 4101427cH
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 1090601592				; 41014278H
	mov	rdx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rdx, 1090601588				; 41014274H
	mov	r8, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	r8, 1090601584				; 41014270H
	mov	QWORD PTR tv452[rsp], r8
	mov	r9, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	r9, 16859200				; 01014040H
	mov	QWORD PTR tv454[rsp], r9
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8, rdx
	mov	rax, QWORD PTR tv452[rsp]
	mov	rdx, rax
	mov	rax, QWORD PTR tv454[rsp]
	mov	rcx, rax
	call	?uncompressPNG@@YAPEAMPEBDPEAI111@Z	; uncompressPNG
	mov	QWORD PTR pix$20[rsp], rax
; Line 157
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	DWORD PTR [rax+1090601592], 3
	je	SHORT $LN41@runControl
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	DWORD PTR [rax+1090601592], 4
	jne	$LN40@runControl
$LN41@runControl:
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	DWORD PTR [rax+1090601596], 8
	jne	$LN40@runControl
; Line 158
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601584]
	imul	eax, DWORD PTR [rcx+1090601588]
	shl	eax, 2
	mov	DWORD PTR totalPixels$16[rsp], eax
; Line 159
	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN19@runControl
$LN17@runControl:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN19@runControl:
	mov	eax, DWORD PTR totalPixels$16[rsp]
	cmp	DWORD PTR i$4[rsp], eax
	jae	SHORT $LN18@runControl
; Line 160
	mov	eax, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR pix$20[rsp]
	movss	xmm0, DWORD PTR [rcx+rax*4]
	mulss	xmm0, DWORD PTR __real@437f0000
	cvttss2si eax, xmm0
	mov	ecx, DWORD PTR i$4[rsp]
	mov	rdx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	BYTE PTR [rdx+rcx+553730624], al
; Line 161
	jmp	SHORT $LN17@runControl
$LN18@runControl:
; Line 163
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	QWORD PTR [rax+1090601576], 0
	je	SHORT $LN42@runControl
; Line 164
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 1090601536				; 41014240H
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1392]
$LN42@runControl:
; Line 167
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 553730624				; 21014240H
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 1090601536				; 41014240H
	mov	QWORD PTR [rsp+32], rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	r9d, DWORD PTR [rax+1708]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	r8d, DWORD PTR [rax+1090601588]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	edx, DWORD PTR [rax+1090601584]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1384]
$LN40@runControl:
; Line 169
	mov	rcx, QWORD PTR pix$20[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1432]
$LN39@runControl:
$LN38@runControl:
; Line 173
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fc999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fdccccccccccccd
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fe999999999999a
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv515[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv515[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32004
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	$LN43@runControl
; Line 174
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	QWORD PTR [rax+1090601576], 0
	je	$LN44@runControl
; Line 175
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rax, QWORD PTR [rax+16859184]
	mov	QWORD PTR a$14[rsp], rax
; Line 176
	mov	rax, QWORD PTR a$14[rsp]
	mov	eax, DWORD PTR [rax+16388]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR a$14[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv532[rsp], rax
	mov	rax, QWORD PTR a$14[rsp]
	mov	eax, DWORD PTR [rax+16388]
	inc	eax
	mov	rcx, QWORD PTR a$14[rsp]
	mov	DWORD PTR [rcx+16388], eax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601628]
	movss	DWORD PTR [rsp+32], xmm0
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm3, DWORD PTR [rax+1090601624]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm2, DWORD PTR [rax+1090601604]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm1, DWORD PTR [rax+1090601600]
	lea	rcx, QWORD PTR $T27[rsp]
	call	??0Vector4@@QEAA@MMMM@Z			; Vector4::Vector4
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T23[rsp], xmm0
	lea	rdx, QWORD PTR $T23[rsp]
	mov	rcx, QWORD PTR tv532[rsp]
	call	??4Vector4@@QEAAXT0@@Z			; Vector4::operator=
$LN44@runControl:
$LN43@runControl:
; Line 180
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fc999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fe6666666666666
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fe999999999999a
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv568[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv568[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32007
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN45@runControl
; Line 181
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	ecx, DWORD PTR [rcx+16859196]
	mov	DWORD PTR [rax+16859192], ecx
; Line 182
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859196]
	inc	eax
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	DWORD PTR [rcx+16859196], eax
; Line 183
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859192]
	imul	rax, rax, 16400				; 00004010H
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	lea	rax, QWORD PTR [rcx+rax+65584]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	QWORD PTR [rcx+16859184], rax
$LN45@runControl:
; Line 186
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fc999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fe6666666666666
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fc3333333333333
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv604[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv604[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32009
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	$LN46@runControl
; Line 187
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	DWORD PTR [rax+16859196], 0
	jbe	$LN47@runControl
; Line 188
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859192]
	mov	DWORD PTR i$5[rsp], eax
	jmp	SHORT $LN22@runControl
$LN20@runControl:
	mov	eax, DWORD PTR i$5[rsp]
	inc	eax
	mov	DWORD PTR i$5[rsp], eax
$LN22@runControl:
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859196]
	dec	eax
	cmp	DWORD PTR i$5[rsp], eax
	jae	SHORT $LN21@runControl
; Line 189
	mov	eax, DWORD PTR i$5[rsp]
	inc	eax
	mov	eax, eax
	imul	rax, rax, 16400				; 00004010H
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	lea	rax, QWORD PTR [rcx+rax+65584]
	mov	ecx, DWORD PTR i$5[rsp]
	imul	rcx, rcx, 16400				; 00004010H
	mov	rdx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	lea	rcx, QWORD PTR [rdx+rcx+65584]
	mov	rdx, rax
	call	??4Animation@@QEAAAEAU0@AEBU0@@Z
; Line 190
	jmp	SHORT $LN20@runControl
$LN21@runControl:
; Line 191
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859196]
	dec	eax
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	DWORD PTR [rcx+16859196], eax
; Line 193
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859196]
	imul	rax, rax, 16400				; 00004010H
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	DWORD PTR [rcx+rax+81968], 0
; Line 194
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859196]
	imul	rax, rax, 16400				; 00004010H
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	DWORD PTR [rcx+rax+81972], 0
; Line 196
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	DWORD PTR [rax+16859192], 0
; Line 197
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859192]
	imul	rax, rax, 16400				; 00004010H
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	lea	rax, QWORD PTR [rcx+rax+65584]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	QWORD PTR [rcx+16859184], rax
$LN47@runControl:
$LN46@runControl:
; Line 201
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fe23d70a3d70a3d
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fe999999999999a
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv669[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv669[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32012
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN48@runControl
; Line 202
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	DWORD PTR [rax+16859192], 0
	jbe	SHORT $LN49@runControl
; Line 203
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859192]
	dec	eax
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	DWORD PTR [rcx+16859192], eax
; Line 204
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859192]
	imul	rax, rax, 16400				; 00004010H
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	lea	rax, QWORD PTR [rcx+rax+65584]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	QWORD PTR [rcx+16859184], rax
$LN49@runControl:
$LN48@runControl:
; Line 207
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fe23d70a3d70a3d
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3feccccccccccccd
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv705[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv705[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32015
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN50@runControl
; Line 208
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859196]
	dec	eax
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	DWORD PTR [rcx+16859192], eax
	jae	SHORT $LN51@runControl
; Line 209
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859192]
	inc	eax
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	DWORD PTR [rcx+16859192], eax
; Line 210
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859192]
	imul	rax, rax, 16400				; 00004010H
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	lea	rax, QWORD PTR [rcx+rax+65584]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	QWORD PTR [rcx+16859184], rax
$LN51@runControl:
$LN50@runControl:
; Line 214
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cmp	DWORD PTR [rax+16859196], 0
	jbe	$LN52@runControl
; Line 215
	movss	xmm3, DWORD PTR __real@3f800000
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 216
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1360]
; Line 217
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+16859192]
	inc	eax
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 16859200				; 01014040H
	mov	rdx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	r9d, DWORD PTR [rdx+16859196]
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:$SG32018
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1368]
; Line 218
	cvtss2sd xmm0, DWORD PTR y$[rsp]
	cvtss2sd xmm1, DWORD PTR h$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fe6666666666666
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR x$[rsp]
	cvtss2sd xmm2, DWORD PTR w$[rsp]
	mulsd	xmm2, QWORD PTR __real@3fd999999999999a
	addsd	xmm1, xmm2
	cvtsd2ss xmm1, xmm1
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 16859200				; 01014040H
	movaps	xmm2, xmm0
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1328]
; Line 220
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fc999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fe0000000000000
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fe0000000000000
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv779[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv779[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32020
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN53@runControl
; Line 221
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	BYTE PTR [rcx+rax+16859200], 0
; Line 222
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	BYTE PTR [rax+1090601649], 1
; Line 223
	jmp	$LN1@runControl
$LN53@runControl:
$LN52@runControl:
$LN37@runControl:
; Line 228
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rax, QWORD PTR [rax+16859184]
	mov	QWORD PTR a$[rsp], rax
; Line 229
	mov	rax, QWORD PTR a$[rsp]
	cmp	DWORD PTR [rax+16388], 0
	jbe	$LN54@runControl
; Line 230
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb47ae147ae147b
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3feccccccccccccd
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fb999999999999a
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv810[rsp], xmm3
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 1090601648				; 410142b0H
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv810[rsp]
	movaps	xmm1, xmm0
	mov	rcx, rax
	call	?checkBox@@YA_NPEA_NMMMM@Z		; checkBox
; Line 231
	movss	xmm3, DWORD PTR __real@3f800000
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 232
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1360]
; Line 233
	cvtss2sd xmm0, DWORD PTR y$[rsp]
	cvtss2sd xmm1, DWORD PTR h$[rsp]
	mulsd	xmm1, QWORD PTR __real@3feccccccccccccd
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR x$[rsp]
	cvtss2sd xmm2, DWORD PTR w$[rsp]
	mulsd	xmm2, QWORD PTR __real@3f847ae147ae147b
	addsd	xmm1, xmm2
	cvtsd2ss xmm1, xmm1
	movaps	xmm2, xmm0
	lea	rcx, OFFSET FLAT:$SG32022
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1328]
; Line 235
	cvtss2sd xmm0, DWORD PTR y$[rsp]
	cvtss2sd xmm1, DWORD PTR h$[rsp]
	mulsd	xmm1, QWORD PTR __real@3feccccccccccccd
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR x$[rsp]
	cvtss2sd xmm2, DWORD PTR w$[rsp]
	mulsd	xmm2, QWORD PTR __real@3fe70a3d70a3d70a
	addsd	xmm1, xmm2
	cvtsd2ss xmm1, xmm1
	movaps	xmm2, xmm0
	lea	rcx, OFFSET FLAT:$SG32023
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1328]
; Line 237
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb47ae147ae147b
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3feccccccccccccd
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fe3333333333333
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv870[rsp], xmm3
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rax, QWORD PTR [rax+16859184]
	add	rax, 16392				; 00004008H
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv870[rsp]
	movaps	xmm1, xmm0
	mov	rcx, rax
	call	?f32Input@@YA_NPEAMMMMM@Z		; f32Input
; Line 239
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb47ae147ae147b
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3feccccccccccccd
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3feb333333333333
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv893[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv893[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32025
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	$LN55@runControl
; Line 240
	mov	rax, QWORD PTR a$[rsp]
	cmp	DWORD PTR [rax+16388], 0
	jbe	$LN56@runControl
; Line 241
	mov	rax, QWORD PTR a$[rsp]
	mov	eax, DWORD PTR [rax+16384]
	mov	DWORD PTR i$6[rsp], eax
	jmp	SHORT $LN25@runControl
$LN23@runControl:
	mov	eax, DWORD PTR i$6[rsp]
	inc	eax
	mov	DWORD PTR i$6[rsp], eax
$LN25@runControl:
	mov	rax, QWORD PTR a$[rsp]
	mov	eax, DWORD PTR [rax+16388]
	dec	eax
	cmp	DWORD PTR i$6[rsp], eax
	jae	SHORT $LN24@runControl
; Line 242
	mov	eax, DWORD PTR i$6[rsp]
	inc	eax
	mov	eax, eax
	imul	rax, rax, 16
	mov	rcx, QWORD PTR a$[rsp]
	movups	xmm0, XMMWORD PTR [rcx+rax]
	movdqa	XMMWORD PTR $T24[rsp], xmm0
	mov	eax, DWORD PTR i$6[rsp]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR a$[rsp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T24[rsp]
	mov	rcx, rax
	call	??4Vector4@@QEAAXT0@@Z			; Vector4::operator=
; Line 243
	jmp	SHORT $LN23@runControl
$LN24@runControl:
; Line 244
	mov	rax, QWORD PTR a$[rsp]
	mov	eax, DWORD PTR [rax+16388]
	dec	eax
	mov	rcx, QWORD PTR a$[rsp]
	mov	DWORD PTR [rcx+16388], eax
; Line 246
	mov	rax, QWORD PTR a$[rsp]
	cmp	DWORD PTR [rax+16384], 0
	jbe	SHORT $LN57@runControl
; Line 247
	mov	rax, QWORD PTR a$[rsp]
	mov	eax, DWORD PTR [rax+16384]
	dec	eax
	mov	rcx, QWORD PTR a$[rsp]
	mov	DWORD PTR [rcx+16384], eax
$LN57@runControl:
$LN56@runControl:
$LN55@runControl:
; Line 252
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb47ae147ae147b
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fe999999999999a
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fe3333333333333
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv945[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv945[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32029
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	$LN58@runControl
; Line 253
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601628]
	movss	DWORD PTR [rsp+32], xmm0
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm3, DWORD PTR [rax+1090601624]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm2, DWORD PTR [rax+1090601604]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm1, DWORD PTR [rax+1090601600]
	lea	rcx, QWORD PTR $T28[rsp]
	call	??0Vector4@@QEAA@MMMM@Z			; Vector4::Vector4
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T25[rsp], xmm0
	mov	rax, QWORD PTR a$[rsp]
	mov	eax, DWORD PTR [rax+16384]
	imul	rax, rax, 16
	mov	rcx, QWORD PTR a$[rsp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T25[rsp]
	mov	rcx, rax
	call	??4Vector4@@QEAAXT0@@Z			; Vector4::operator=
$LN58@runControl:
; Line 256
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movzx	eax, BYTE PTR [rax+1090601648]
	test	eax, eax
	jne	$LN59@runControl
; Line 257
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb47ae147ae147b
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3feccccccccccccd
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fc999999999999a
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv993[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv993[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32032
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN60@runControl
; Line 258
	mov	rax, QWORD PTR a$[rsp]
	cmp	DWORD PTR [rax+16384], 0
	jbe	SHORT $LN61@runControl
; Line 259
	mov	rax, QWORD PTR a$[rsp]
	mov	eax, DWORD PTR [rax+16384]
	dec	eax
	mov	rcx, QWORD PTR a$[rsp]
	mov	DWORD PTR [rcx+16384], eax
; Line 260
	jmp	SHORT $LN62@runControl
$LN61@runControl:
; Line 261
	mov	rax, QWORD PTR a$[rsp]
	mov	eax, DWORD PTR [rax+16388]
	dec	eax
	mov	rcx, QWORD PTR a$[rsp]
	mov	DWORD PTR [rcx+16384], eax
$LN62@runControl:
$LN60@runControl:
; Line 265
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb47ae147ae147b
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3feccccccccccccd
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fd3333333333333
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv1026[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv1026[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32036
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN63@runControl
; Line 266
	mov	rax, QWORD PTR a$[rsp]
	mov	eax, DWORD PTR [rax+16388]
	dec	eax
	mov	rcx, QWORD PTR a$[rsp]
	cmp	DWORD PTR [rcx+16384], eax
	jae	SHORT $LN64@runControl
; Line 267
	mov	rax, QWORD PTR a$[rsp]
	mov	eax, DWORD PTR [rax+16384]
	inc	eax
	mov	rcx, QWORD PTR a$[rsp]
	mov	DWORD PTR [rcx+16384], eax
; Line 268
	jmp	SHORT $LN65@runControl
$LN64@runControl:
; Line 269
	mov	rax, QWORD PTR a$[rsp]
	mov	DWORD PTR [rax+16384], 0
$LN65@runControl:
$LN63@runControl:
; Line 275
	movss	xmm3, DWORD PTR __real@3f800000
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 276
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1360]
; Line 277
	mov	rax, QWORD PTR a$[rsp]
	mov	eax, DWORD PTR [rax+16384]
	inc	eax
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 16859200				; 01014040H
	mov	rdx, QWORD PTR a$[rsp]
	mov	r9d, DWORD PTR [rdx+16388]
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:$SG32039
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1368]
; Line 278
	cvtss2sd xmm0, DWORD PTR y$[rsp]
	cvtss2sd xmm1, DWORD PTR h$[rsp]
	mulsd	xmm1, QWORD PTR __real@3feccccccccccccd
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR x$[rsp]
	cvtss2sd xmm2, DWORD PTR w$[rsp]
	mulsd	xmm2, QWORD PTR __real@3fd999999999999a
	addsd	xmm1, xmm2
	cvtsd2ss xmm1, xmm1
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 16859200				; 01014040H
	movaps	xmm2, xmm0
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1328]
$LN59@runControl:
$LN54@runControl:
; Line 283
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3f9eb851eb851eb8
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fb999999999999a
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fb999999999999a
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv1093[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv1093[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32041
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN66@runControl
; Line 284
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601600]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN67@runControl
; Line 285
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601600]
	subss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601600], xmm0
$LN67@runControl:
$LN66@runControl:
; Line 289
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3f9eb851eb851eb8
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fb999999999999a
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fd3333333333333
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv1125[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv1125[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32044
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN68@runControl
; Line 290
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601544]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	comiss	xmm0, DWORD PTR [rax+1090601600]
	jbe	SHORT $LN69@runControl
; Line 291
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601600]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601600], xmm0
$LN69@runControl:
$LN68@runControl:
; Line 295
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3f9eb851eb851eb8
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fc999999999999a
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fb999999999999a
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv1160[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv1160[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32047
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN70@runControl
; Line 296
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601604]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN71@runControl
; Line 297
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601604]
	subss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601604], xmm0
$LN71@runControl:
$LN70@runControl:
; Line 301
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3f9eb851eb851eb8
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fc999999999999a
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fd3333333333333
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv1192[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv1192[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32050
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN72@runControl
; Line 302
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601548]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	comiss	xmm0, DWORD PTR [rax+1090601604]
	jbe	SHORT $LN73@runControl
; Line 303
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601604]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601604], xmm0
$LN73@runControl:
$LN72@runControl:
; Line 307
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3f9eb851eb851eb8
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fd3333333333333
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fb999999999999a
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv1227[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv1227[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32053
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN74@runControl
; Line 308
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601608]
	comiss	xmm0, DWORD PTR [rcx+1090601600]
	jbe	SHORT $LN75@runControl
; Line 309
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601608]
	subss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601608], xmm0
$LN75@runControl:
$LN74@runControl:
; Line 313
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3f9eb851eb851eb8
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fd3333333333333
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fd3333333333333
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv1261[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv1261[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32056
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN76@runControl
; Line 314
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601544]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	comiss	xmm0, DWORD PTR [rax+1090601608]
	jbe	SHORT $LN77@runControl
; Line 315
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601608]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601608], xmm0
$LN77@runControl:
$LN76@runControl:
; Line 319
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3f9eb851eb851eb8
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fd999999999999a
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fb999999999999a
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv1296[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv1296[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32059
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN78@runControl
; Line 320
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601612]
	comiss	xmm0, DWORD PTR [rcx+1090601604]
	jbe	SHORT $LN79@runControl
; Line 321
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601612]
	subss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601612], xmm0
$LN79@runControl:
$LN78@runControl:
; Line 325
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3f9eb851eb851eb8
	cvtsd2ss xmm1, xmm1
	cvtss2sd xmm2, DWORD PTR y$[rsp]
	cvtss2sd xmm3, DWORD PTR h$[rsp]
	mulsd	xmm3, QWORD PTR __real@3fd999999999999a
	addsd	xmm2, xmm3
	cvtsd2ss xmm2, xmm2
	cvtss2sd xmm3, DWORD PTR x$[rsp]
	cvtss2sd xmm4, DWORD PTR w$[rsp]
	mulsd	xmm4, QWORD PTR __real@3fd3333333333333
	addsd	xmm3, xmm4
	cvtsd2ss xmm3, xmm3
	movss	DWORD PTR tv1330[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv1330[rsp]
	movaps	xmm1, xmm0
	lea	rcx, OFFSET FLAT:$SG32062
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN80@runControl
; Line 326
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	eax, DWORD PTR [rax+1090601548]
	cvtsi2ss xmm0, rax
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	comiss	xmm0, DWORD PTR [rax+1090601612]
	jbe	SHORT $LN81@runControl
; Line 327
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	xmm0, DWORD PTR [rax+1090601612]
	addss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	movss	DWORD PTR [rax+1090601612], xmm0
$LN81@runControl:
$LN80@runControl:
; Line 332
	movss	xmm3, DWORD PTR __real@3f800000
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 333
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1352]
; Line 334
	movss	xmm3, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1288]
; Line 336
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1360]
; Line 337
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cvttss2si eax, DWORD PTR [rax+1090601620]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cvttss2si ecx, DWORD PTR [rcx+1090601616]
	mov	rdx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rdx, 16859200				; 01014040H
	mov	QWORD PTR tv1376[rsp], rdx
	mov	r9d, eax
	mov	r8d, ecx
	lea	rdx, OFFSET FLAT:$SG32064
	mov	rax, QWORD PTR tv1376[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1368]
; Line 338
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fe6666666666666
	cvtsd2ss xmm1, xmm1
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 16859200				; 01014040H
	movaps	xmm2, xmm0
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1328]
; Line 339
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	r8, QWORD PTR [rax+1090601600]
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	mov	rdx, QWORD PTR [rax+1090601608]
	lea	rcx, QWORD PTR $T26[rsp]
	call	??G@YA?ATVector2@@T0@0@Z		; operator-
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 1090601624				; 41014298H
	mov	rdx, QWORD PTR [rax]
	call	??4Vector2@@QEAAXT0@@Z			; Vector2::operator=
; Line 340
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cvttss2si eax, DWORD PTR [rax+1090601600]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 16859200				; 01014040H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:$SG32065
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1368]
; Line 341
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fc3333333333333
	cvtsd2ss xmm1, xmm1
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 16859200				; 01014040H
	movaps	xmm2, xmm0
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1328]
; Line 342
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cvttss2si eax, DWORD PTR [rax+1090601604]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 16859200				; 01014040H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:$SG32066
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1368]
; Line 343
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fc999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fc3333333333333
	cvtsd2ss xmm1, xmm1
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 16859200				; 01014040H
	movaps	xmm2, xmm0
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1328]
; Line 344
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cvttss2si eax, DWORD PTR [rax+1090601624]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 16859200				; 01014040H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:$SG32067
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1368]
; Line 345
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fd3333333333333
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fc3333333333333
	cvtsd2ss xmm1, xmm1
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 16859200				; 01014040H
	movaps	xmm2, xmm0
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1328]
; Line 346
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	cvttss2si eax, DWORD PTR [rax+1090601628]
	mov	rcx, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rcx, 16859200				; 01014040H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:$SG32068
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1368]
; Line 347
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fd999999999999a
	cvtsd2ss xmm0, xmm0
	cvtss2sd xmm1, DWORD PTR w$[rsp]
	mulsd	xmm1, QWORD PTR __real@3fc3333333333333
	cvtsd2ss xmm1, xmm1
	mov	rax, QWORD PTR ?s@@3PEAUSpranimator@@EA
	add	rax, 16859200				; 01014040H
	movaps	xmm2, xmm0
	mov	rcx, rax
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1328]
$LN1@runControl:
; Line 348
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 488				; 000001e8H
	ret	0
?runControllPanel@@YAXMMMM@Z ENDP			; runControllPanel
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??4Animation@@QEAAAEAU0@AEBU0@@Z
_TEXT	SEGMENT
$S1$1 = 32
$T2 = 48
this$ = 80
__that$ = 88
??4Animation@@QEAAAEAU0@AEBU0@@Z PROC			; Animation::operator=, COMDAT
$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $S1$1[rsp], 0
	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	rax, QWORD PTR $S1$1[rsp]
	inc	rax
	mov	QWORD PTR $S1$1[rsp], rax
$LN4@operator:
	cmp	QWORD PTR $S1$1[rsp], 1024		; 00000400H
	jae	SHORT $LN3@operator
	imul	rax, QWORD PTR $S1$1[rsp], 16
	mov	rcx, QWORD PTR __that$[rsp]
	movups	xmm0, XMMWORD PTR [rcx+rax]
	movdqa	XMMWORD PTR $T2[rsp], xmm0
	imul	rax, QWORD PTR $S1$1[rsp], 16
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rax
	call	??4Vector4@@QEAAXT0@@Z			; Vector4::operator=
	jmp	SHORT $LN2@operator
$LN3@operator:
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __that$[rsp]
	mov	ecx, DWORD PTR [rcx+16384]
	mov	DWORD PTR [rax+16384], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __that$[rsp]
	mov	ecx, DWORD PTR [rcx+16388]
	mov	DWORD PTR [rax+16388], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __that$[rsp]
	movss	xmm0, DWORD PTR [rcx+16392]
	movss	DWORD PTR [rax+16392], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __that$[rsp]
	movss	xmm0, DWORD PTR [rcx+16396]
	movss	DWORD PTR [rax+16396], xmm0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 72					; 00000048H
	ret	0
??4Animation@@QEAAAEAU0@AEBU0@@Z ENDP			; Animation::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
bitDepth$ = 32
bitOffset$ = 36
filePtr$ = 40
unfilteredDataPtr$ = 48
eof$ = 56
a$1 = 57
b$2 = 58
c$3 = 59
addr$4 = 60
colorType$ = 61
totalLenDistLenghtsFound$5 = 64
cdPtr$ = 72
uncompressedDataPtr$ = 80
fullUCData$ = 88
overbits$6 = 96
up$7 = 97
left$8 = 98
bytesPerPixel$ = 100
uncompressedData$ = 104
code$9 = 112
code$10 = 116
uncompressedRowSize$ = 120
compressionMethod$ = 124
filterMethod$ = 125
interlaceMethod$ = 126
filterType$11 = 127
bitsPerPixel$ = 128
rc$ = 132
pb$12 = 136
bfinal$ = 140
pa$13 = 144
pc$14 = 148
code$15 = 152
btype$ = 156
tv648 = 160
i$16 = 164
tv792 = 168
tv794 = 172
y$17 = 176
x$18 = 180
y$19 = 184
x$20 = 188
y$21 = 192
x$22 = 196
y$23 = 200
x$24 = 204
y$25 = 208
x$26 = 212
y$27 = 216
x$28 = 220
len$29 = 224
tv163 = 228
length$30 = 232
compDatPtr$31 = 240
i$32 = 248
i$33 = 252
i$34 = 256
i$35 = 260
i$36 = 264
fdIdx$37 = 268
fdIdx$38 = 272
fdIdx$39 = 276
fdIdx$40 = 280
idx$41 = 284
fdIdx$42 = 288
fdIdx$43 = 292
idx$44 = 296
tv136 = 300
compressedDataSize$ = 304
i$45 = 308
i$46 = 312
compressedData$ = 320
i$47 = 328
i$48 = 332
i$49 = 336
hlit$50 = 340
i$51 = 344
i$52 = 348
i$53 = 352
p$54 = 356
pv$55 = 360
pv$56 = 364
idx$57 = 368
idx$58 = 372
comMethFlag$ = 376
flgCheckBts$ = 377
type$ = 380
uncompressedDataSize$ = 384
tv240 = 388
i$59 = 392
i$60 = 396
tv759 = 400
tv762 = 404
unfilteredDataSize$ = 408
distCode$61 = 412
distCode$62 = 416
hdist$63 = 420
fileSize$ = 424
tv186 = 428
tv756 = 432
fileHandle$ = 440
cpdat$64 = 448
totalLenDistLenghts$65 = 456
copyLen$66 = 460
copyLen$67 = 464
copyLen$68 = 468
distance$69 = 472
length$70 = 476
avg$71 = 480
ucDataSize$ = 484
idx$72 = 488
idx$73 = 492
pv1$74 = 496
pv2$75 = 500
pv3$76 = 504
pv1$77 = 508
pv2$78 = 512
pv3$79 = 516
pv1$80 = 520
pv2$81 = 524
pv3$82 = 528
pv4$83 = 532
pv1$84 = 536
pv2$85 = 540
pv4$86 = 544
nlen$87 = 548
pv3$88 = 552
distance$89 = 556
length$90 = 560
hclen$91 = 564
tempDataPtr$92 = 568
tempDataPtr$93 = 576
cpdat$94 = 584
fileData$ = 592
unfilteredData$ = 600
pngSignature$ = 608
tv1163 = 616
tv357 = 624
tv1165 = 632
tv374 = 640
tv1167 = 648
tv591 = 656
tv1169 = 664
tv607 = 672
cpdat$95 = 680
litLenHuff$96 = 688
literalHuff$97 = 728
distHuff$98 = 768
$T99 = 808
litLenHuff$100 = 848
$T101 = 888
$T102 = 928
$T103 = 968
$T104 = 1008
$T105 = 1048
$T106 = 1088
$T107 = 1128
codeLengthAlphabet$108 = 1168
codeLengths$109 = 1248
lenDistLengths$110 = 1328
litCodeLengths$111 = 2608
__$ArrayPad$ = 3760
fileName$ = 3808
width$ = 3816
height$ = 3824
componentsPerPixel$ = 3832
bitsPerComponent$ = 3840
?uncompressPNG@@YAPEAMPEBDPEAI111@Z PROC		; uncompressPNG
; File D:\code\sprite_animation_maker\png_extractor.h
; Line 201
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 3784				; 00000ec8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 202
	mov	rax, QWORD PTR componentsPerPixel$[rsp]
	mov	DWORD PTR [rax], 0
; Line 203
	mov	rax, QWORD PTR bitsPerComponent$[rsp]
	mov	DWORD PTR [rax], 0
; Line 205
	lea	rdx, OFFSET FLAT:$SG31755
	mov	rcx, QWORD PTR fileName$[rsp]
	call	fopen
	mov	QWORD PTR fileHandle$[rsp], rax
; Line 206
	mov	r8d, 2
	xor	edx, edx
	mov	rcx, QWORD PTR fileHandle$[rsp]
	call	fseek
; Line 207
	mov	rcx, QWORD PTR fileHandle$[rsp]
	call	ftell
	mov	DWORD PTR fileSize$[rsp], eax
; Line 208
	mov	rcx, QWORD PTR fileHandle$[rsp]
	call	rewind
; Line 209
	mov	eax, DWORD PTR fileSize$[rsp]
	mov	ecx, eax
	call	malloc
	mov	QWORD PTR fileData$[rsp], rax
; Line 210
	mov	eax, DWORD PTR fileSize$[rsp]
	mov	r9, QWORD PTR fileHandle$[rsp]
	mov	r8d, eax
	mov	edx, 1
	mov	rcx, QWORD PTR fileData$[rsp]
	call	fread
; Line 211
	mov	rcx, QWORD PTR fileHandle$[rsp]
	call	fclose
; Line 212
	mov	rax, QWORD PTR fileData$[rsp]
	mov	QWORD PTR filePtr$[rsp], rax
; Line 213
	mov	rax, QWORD PTR filePtr$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR pngSignature$[rsp], rax
; Line 214
	mov	rax, 727905341920923785			; 0a1a0a0d474e5089H
	cmp	QWORD PTR pngSignature$[rsp], rax
	je	SHORT $LN110@uncompress
; Line 215
	xor	eax, eax
	jmp	$LN1@uncompress
$LN110@uncompress:
; Line 217
	mov	rax, QWORD PTR filePtr$[rsp]
	add	rax, 8
	mov	QWORD PTR filePtr$[rsp], rax
; Line 219
	mov	DWORD PTR type$[rsp], 0
; Line 220
	mov	DWORD PTR uncompressedDataSize$[rsp], 0
; Line 221
	mov	DWORD PTR compressedDataSize$[rsp], 0
; Line 222
	mov	DWORD PTR unfilteredDataSize$[rsp], 0
; Line 223
	mov	DWORD PTR bitsPerPixel$[rsp], 0
; Line 224
	mov	DWORD PTR bytesPerPixel$[rsp], 0
; Line 225
	mov	BYTE PTR bitDepth$[rsp], 0
; Line 226
	mov	BYTE PTR colorType$[rsp], 0
; Line 227
	mov	BYTE PTR compressionMethod$[rsp], 0
; Line 228
	mov	BYTE PTR filterMethod$[rsp], 0
; Line 229
	mov	BYTE PTR interlaceMethod$[rsp], 0
; Line 232
	xor	ecx, ecx
	call	malloc
	mov	QWORD PTR compressedData$[rsp], rax
$LN2@uncompress:
; Line 234
	cmp	DWORD PTR type$[rsp], 1145980233	; 444e4549H
	je	$LN3@uncompress
; Line 235
	mov	rax, QWORD PTR filePtr$[rsp]
	mov	eax, DWORD PTR [rax]
	shl	eax, 24
	mov	rcx, QWORD PTR filePtr$[rsp]
	mov	ecx, DWORD PTR [rcx]
	shr	ecx, 24
	or	eax, ecx
	mov	rcx, QWORD PTR filePtr$[rsp]
	mov	ecx, DWORD PTR [rcx]
	shl	ecx, 8
	and	ecx, 16711680				; 00ff0000H
	or	eax, ecx
	mov	rcx, QWORD PTR filePtr$[rsp]
	mov	ecx, DWORD PTR [rcx]
	shr	ecx, 8
	and	ecx, 65280				; 0000ff00H
	or	eax, ecx
	mov	DWORD PTR length$30[rsp], eax
; Line 236
	mov	rax, QWORD PTR filePtr$[rsp]
	add	rax, 4
	mov	QWORD PTR filePtr$[rsp], rax
; Line 237
	mov	rax, QWORD PTR filePtr$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR type$[rsp], eax
; Line 238
	mov	rax, QWORD PTR filePtr$[rsp]
	add	rax, 4
	mov	QWORD PTR filePtr$[rsp], rax
; Line 240
	mov	eax, DWORD PTR type$[rsp]
	mov	DWORD PTR tv136[rsp], eax
	cmp	DWORD PTR tv136[rsp], 1145980233	; 444e4549H
	je	$LN118@uncompress
	cmp	DWORD PTR tv136[rsp], 1163152464	; 45544c50H
	je	$LN119@uncompress
	cmp	DWORD PTR tv136[rsp], 1380206665	; 52444849H
	je	SHORT $LN111@uncompress
	cmp	DWORD PTR tv136[rsp], 1413563465	; 54414449H
	je	$LN117@uncompress
	jmp	$LN120@uncompress
$LN111@uncompress:
; Line 242
	mov	rax, QWORD PTR filePtr$[rsp]
	mov	eax, DWORD PTR [rax]
	shl	eax, 24
	mov	rcx, QWORD PTR filePtr$[rsp]
	mov	ecx, DWORD PTR [rcx]
	shr	ecx, 24
	or	eax, ecx
	mov	rcx, QWORD PTR filePtr$[rsp]
	mov	ecx, DWORD PTR [rcx]
	shl	ecx, 8
	and	ecx, 16711680				; 00ff0000H
	or	eax, ecx
	mov	rcx, QWORD PTR filePtr$[rsp]
	mov	ecx, DWORD PTR [rcx]
	shr	ecx, 8
	and	ecx, 65280				; 0000ff00H
	or	eax, ecx
	mov	rcx, QWORD PTR width$[rsp]
	mov	DWORD PTR [rcx], eax
; Line 243
	mov	rax, QWORD PTR filePtr$[rsp]
	add	rax, 4
	mov	QWORD PTR filePtr$[rsp], rax
; Line 244
	mov	rax, QWORD PTR filePtr$[rsp]
	mov	eax, DWORD PTR [rax]
	shl	eax, 24
	mov	rcx, QWORD PTR filePtr$[rsp]
	mov	ecx, DWORD PTR [rcx]
	shr	ecx, 24
	or	eax, ecx
	mov	rcx, QWORD PTR filePtr$[rsp]
	mov	ecx, DWORD PTR [rcx]
	shl	ecx, 8
	and	ecx, 16711680				; 00ff0000H
	or	eax, ecx
	mov	rcx, QWORD PTR filePtr$[rsp]
	mov	ecx, DWORD PTR [rcx]
	shr	ecx, 8
	and	ecx, 65280				; 0000ff00H
	or	eax, ecx
	mov	rcx, QWORD PTR height$[rsp]
	mov	DWORD PTR [rcx], eax
; Line 245
	mov	rax, QWORD PTR filePtr$[rsp]
	add	rax, 4
	mov	QWORD PTR filePtr$[rsp], rax
; Line 246
	mov	rax, QWORD PTR filePtr$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR bitDepth$[rsp], al
	mov	rax, QWORD PTR filePtr$[rsp]
	inc	rax
	mov	QWORD PTR filePtr$[rsp], rax
; Line 247
	mov	rax, QWORD PTR filePtr$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR colorType$[rsp], al
	mov	rax, QWORD PTR filePtr$[rsp]
	inc	rax
	mov	QWORD PTR filePtr$[rsp], rax
; Line 248
	mov	rax, QWORD PTR filePtr$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR compressionMethod$[rsp], al
	mov	rax, QWORD PTR filePtr$[rsp]
	inc	rax
	mov	QWORD PTR filePtr$[rsp], rax
; Line 249
	mov	rax, QWORD PTR filePtr$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR filterMethod$[rsp], al
	mov	rax, QWORD PTR filePtr$[rsp]
	inc	rax
	mov	QWORD PTR filePtr$[rsp], rax
; Line 250
	mov	rax, QWORD PTR filePtr$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR interlaceMethod$[rsp], al
	mov	rax, QWORD PTR filePtr$[rsp]
	inc	rax
	mov	QWORD PTR filePtr$[rsp], rax
; Line 252
	movzx	eax, BYTE PTR colorType$[rsp]
	mov	BYTE PTR tv163[rsp], al
	cmp	BYTE PTR tv163[rsp], 0
	je	SHORT $LN112@uncompress
	cmp	BYTE PTR tv163[rsp], 2
	je	SHORT $LN113@uncompress
	cmp	BYTE PTR tv163[rsp], 3
	je	$LN114@uncompress
	cmp	BYTE PTR tv163[rsp], 4
	je	$LN115@uncompress
	cmp	BYTE PTR tv163[rsp], 6
	je	$LN116@uncompress
	jmp	$LN6@uncompress
$LN112@uncompress:
; Line 254
	movzx	eax, BYTE PTR bitDepth$[rsp]
	mov	DWORD PTR bitsPerPixel$[rsp], eax
; Line 255
	mov	rax, QWORD PTR componentsPerPixel$[rsp]
	mov	DWORD PTR [rax], 1
; Line 256
	movzx	eax, BYTE PTR bitDepth$[rsp]
	mov	rcx, QWORD PTR bitsPerComponent$[rsp]
	mov	DWORD PTR [rcx], eax
; Line 257
	jmp	$LN6@uncompress
$LN113@uncompress:
; Line 260
	movzx	eax, BYTE PTR bitDepth$[rsp]
	imul	eax, eax, 3
	mov	DWORD PTR bitsPerPixel$[rsp], eax
; Line 261
	mov	rax, QWORD PTR componentsPerPixel$[rsp]
	mov	DWORD PTR [rax], 3
; Line 262
	movzx	eax, BYTE PTR bitDepth$[rsp]
	mov	rcx, QWORD PTR bitsPerComponent$[rsp]
	mov	DWORD PTR [rcx], eax
; Line 263
	jmp	$LN6@uncompress
$LN114@uncompress:
; Line 266
	movzx	eax, BYTE PTR bitDepth$[rsp]
	mov	DWORD PTR bitsPerPixel$[rsp], eax
; Line 267
	mov	rax, QWORD PTR componentsPerPixel$[rsp]
	mov	DWORD PTR [rax], 4
; Line 268
	mov	rax, QWORD PTR bitsPerComponent$[rsp]
	mov	DWORD PTR [rax], 8
; Line 269
	jmp	SHORT $LN6@uncompress
$LN115@uncompress:
; Line 272
	movzx	eax, BYTE PTR bitDepth$[rsp]
	shl	eax, 1
	mov	DWORD PTR bitsPerPixel$[rsp], eax
; Line 273
	mov	rax, QWORD PTR componentsPerPixel$[rsp]
	mov	DWORD PTR [rax], 2
; Line 274
	movzx	eax, BYTE PTR bitDepth$[rsp]
	mov	rcx, QWORD PTR bitsPerComponent$[rsp]
	mov	DWORD PTR [rcx], eax
; Line 275
	jmp	SHORT $LN6@uncompress
$LN116@uncompress:
; Line 278
	movzx	eax, BYTE PTR bitDepth$[rsp]
	shl	eax, 2
	mov	DWORD PTR bitsPerPixel$[rsp], eax
; Line 279
	mov	rax, QWORD PTR componentsPerPixel$[rsp]
	mov	DWORD PTR [rax], 4
; Line 280
	movzx	eax, BYTE PTR bitDepth$[rsp]
	mov	rcx, QWORD PTR bitsPerComponent$[rsp]
	mov	DWORD PTR [rcx], eax
$LN6@uncompress:
; Line 284
	xor	edx, edx
	mov	eax, DWORD PTR bitsPerPixel$[rsp]
	mov	ecx, 8
	div	ecx
	test	eax, eax
	jbe	SHORT $LN185@uncompress
	xor	edx, edx
	mov	eax, DWORD PTR bitsPerPixel$[rsp]
	mov	ecx, 8
	div	ecx
	mov	DWORD PTR tv186[rsp], eax
	jmp	SHORT $LN186@uncompress
$LN185@uncompress:
	mov	DWORD PTR tv186[rsp], 1
$LN186@uncompress:
	mov	eax, DWORD PTR tv186[rsp]
	mov	DWORD PTR bytesPerPixel$[rsp], eax
; Line 285
	jmp	$LN4@uncompress
$LN117@uncompress:
; Line 288
	mov	eax, DWORD PTR length$30[rsp]
	mov	ecx, DWORD PTR compressedDataSize$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	eax, eax
	mov	edx, eax
	mov	rcx, QWORD PTR compressedData$[rsp]
	call	realloc
	mov	QWORD PTR compressedData$[rsp], rax
; Line 289
	mov	eax, DWORD PTR length$30[rsp]
	mov	ecx, DWORD PTR compressedDataSize$[rsp]
	mov	rdx, QWORD PTR compressedData$[rsp]
	add	rdx, rcx
	mov	rcx, rdx
	mov	r8d, eax
	mov	rdx, QWORD PTR filePtr$[rsp]
	call	?copyMemory@@YAXPEAX0_K@Z		; copyMemory
; Line 290
	mov	eax, DWORD PTR length$30[rsp]
	mov	ecx, DWORD PTR compressedDataSize$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR compressedDataSize$[rsp], eax
; Line 291
	mov	eax, DWORD PTR length$30[rsp]
	mov	rcx, QWORD PTR filePtr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR filePtr$[rsp], rax
; Line 292
	jmp	SHORT $LN4@uncompress
$LN118@uncompress:
; Line 295
	jmp	SHORT $LN4@uncompress
$LN119@uncompress:
; Line 298
	jmp	SHORT $LN4@uncompress
$LN120@uncompress:
; Line 301
	mov	eax, DWORD PTR length$30[rsp]
	mov	rcx, QWORD PTR filePtr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR filePtr$[rsp], rax
$LN4@uncompress:
; Line 305
	mov	rax, QWORD PTR filePtr$[rsp]
	add	rax, 4
	mov	QWORD PTR filePtr$[rsp], rax
; Line 306
	jmp	$LN2@uncompress
$LN3@uncompress:
; Line 308
	mov	rax, QWORD PTR width$[rsp]
	mov	rcx, QWORD PTR height$[rsp]
	mov	eax, DWORD PTR [rax]
	imul	eax, DWORD PTR [rcx]
	imul	eax, DWORD PTR bytesPerPixel$[rsp]
	mov	DWORD PTR uncompressedDataSize$[rsp], eax
; Line 309
	mov	rax, QWORD PTR height$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	ecx, DWORD PTR uncompressedDataSize$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR unfilteredDataSize$[rsp], eax
; Line 310
	mov	eax, DWORD PTR unfilteredDataSize$[rsp]
	mov	ecx, eax
	call	malloc
	mov	QWORD PTR unfilteredData$[rsp], rax
; Line 311
	mov	eax, DWORD PTR uncompressedDataSize$[rsp]
	mov	ecx, eax
	call	malloc
	mov	QWORD PTR uncompressedData$[rsp], rax
; Line 312
	mov	rax, QWORD PTR unfilteredData$[rsp]
	mov	QWORD PTR unfilteredDataPtr$[rsp], rax
; Line 313
	mov	rax, QWORD PTR uncompressedData$[rsp]
	mov	QWORD PTR uncompressedDataPtr$[rsp], rax
; Line 315
	mov	DWORD PTR bitOffset$[rsp], 0
; Line 316
	mov	rax, QWORD PTR compressedData$[rsp]
	mov	QWORD PTR cdPtr$[rsp], rax
; Line 317
	mov	rax, QWORD PTR cdPtr$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR comMethFlag$[rsp], al
	mov	rax, QWORD PTR cdPtr$[rsp]
	inc	rax
	mov	QWORD PTR cdPtr$[rsp], rax
; Line 318
	mov	rax, QWORD PTR cdPtr$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR flgCheckBts$[rsp], al
	mov	rax, QWORD PTR cdPtr$[rsp]
	inc	rax
	mov	QWORD PTR cdPtr$[rsp], rax
; Line 319
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 1
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	mov	DWORD PTR bfinal$[rsp], eax
; Line 320
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 2
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	mov	DWORD PTR btype$[rsp], eax
; Line 322
	mov	BYTE PTR eof$[rsp], 0
$LN8@uncompress:
; Line 323
	movzx	eax, BYTE PTR eof$[rsp]
	test	eax, eax
	jne	$LN9@uncompress
; Line 324
	mov	eax, DWORD PTR btype$[rsp]
	mov	DWORD PTR tv240[rsp], eax
	cmp	DWORD PTR tv240[rsp], 0
	je	SHORT $LN121@uncompress
	cmp	DWORD PTR tv240[rsp], 1
	je	$LN125@uncompress
	cmp	DWORD PTR tv240[rsp], 2
	je	$LN132@uncompress
	jmp	$LN146@uncompress
$LN121@uncompress:
; Line 326
	lea	rcx, OFFSET FLAT:$SG31768
	call	printf
; Line 327
	xor	edx, edx
	mov	eax, DWORD PTR bitOffset$[rsp]
	mov	ecx, 8
	div	ecx
	mov	eax, edx
	mov	BYTE PTR overbits$6[rsp], al
; Line 328
	movzx	eax, BYTE PTR overbits$6[rsp]
	test	eax, eax
	jle	SHORT $LN122@uncompress
; Line 329
	movzx	eax, BYTE PTR overbits$6[rsp]
	mov	ecx, 8
	sub	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR bitOffset$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR bitOffset$[rsp], eax
$LN122@uncompress:
; Line 332
	xor	edx, edx
	mov	eax, DWORD PTR bitOffset$[rsp]
	mov	ecx, 8
	div	ecx
	mov	eax, eax
	mov	rcx, QWORD PTR compressedData$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR compDatPtr$31[rsp], rax
; Line 333
	mov	rax, QWORD PTR compDatPtr$31[rsp]
	movzx	eax, WORD PTR [rax]
	shl	eax, 8
	mov	rcx, QWORD PTR compDatPtr$31[rsp]
	movzx	ecx, WORD PTR [rcx]
	sar	ecx, 8
	or	eax, ecx
	mov	WORD PTR len$29[rsp], ax
; Line 334
	mov	rax, QWORD PTR compDatPtr$31[rsp]
	add	rax, 2
	mov	QWORD PTR compDatPtr$31[rsp], rax
; Line 335
	mov	rax, QWORD PTR compDatPtr$31[rsp]
	movzx	eax, WORD PTR [rax]
	shl	eax, 8
	mov	rcx, QWORD PTR compDatPtr$31[rsp]
	movzx	ecx, WORD PTR [rcx]
	sar	ecx, 8
	or	eax, ecx
	mov	WORD PTR nlen$87[rsp], ax
; Line 336
	mov	rax, QWORD PTR compDatPtr$31[rsp]
	add	rax, 2
	mov	QWORD PTR compDatPtr$31[rsp], rax
; Line 338
	mov	DWORD PTR i$59[rsp], 0
	jmp	SHORT $LN14@uncompress
$LN12@uncompress:
	mov	eax, DWORD PTR i$59[rsp]
	inc	eax
	mov	DWORD PTR i$59[rsp], eax
$LN14@uncompress:
	movzx	eax, WORD PTR len$29[rsp]
	cmp	DWORD PTR i$59[rsp], eax
	jae	SHORT $LN13@uncompress
; Line 339
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	mov	rcx, QWORD PTR compDatPtr$31[rsp]
	movzx	ecx, BYTE PTR [rcx]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR unfilteredDataPtr$[rsp], rax
	mov	rax, QWORD PTR compDatPtr$31[rsp]
	inc	rax
	mov	QWORD PTR compDatPtr$31[rsp], rax
; Line 340
	jmp	SHORT $LN12@uncompress
$LN13@uncompress:
; Line 341
	movzx	eax, WORD PTR len$29[rsp]
	mov	ecx, DWORD PTR bitOffset$[rsp]
	lea	eax, DWORD PTR [rcx+rax*8]
	mov	DWORD PTR bitOffset$[rsp], eax
; Line 343
	cmp	DWORD PTR bfinal$[rsp], 0
	jne	SHORT $LN123@uncompress
; Line 344
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 1
	mov	rcx, QWORD PTR compressedData$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	mov	DWORD PTR bfinal$[rsp], eax
; Line 345
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 2
	mov	rcx, QWORD PTR compressedData$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	mov	DWORD PTR btype$[rsp], eax
; Line 346
	jmp	SHORT $LN124@uncompress
$LN123@uncompress:
; Line 347
	mov	BYTE PTR eof$[rsp], 1
$LN124@uncompress:
; Line 349
	jmp	$LN10@uncompress
$LN125@uncompress:
; Line 352
	lea	rcx, OFFSET FLAT:$SG31773
	call	printf
; Line 353
	lea	rax, QWORD PTR litCodeLengths$111[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1152				; 00000480H
	rep stosb
; Line 354
	mov	DWORD PTR i$45[rsp], 0
	jmp	SHORT $LN17@uncompress
$LN15@uncompress:
	mov	eax, DWORD PTR i$45[rsp]
	inc	eax
	mov	DWORD PTR i$45[rsp], eax
$LN17@uncompress:
	cmp	DWORD PTR i$45[rsp], 144		; 00000090H
	jae	SHORT $LN16@uncompress
; Line 355
	mov	eax, DWORD PTR i$45[rsp]
	mov	DWORD PTR litCodeLengths$111[rsp+rax*4], 8
; Line 356
	jmp	SHORT $LN15@uncompress
$LN16@uncompress:
; Line 357
	mov	DWORD PTR i$46[rsp], 144		; 00000090H
	jmp	SHORT $LN20@uncompress
$LN18@uncompress:
	mov	eax, DWORD PTR i$46[rsp]
	inc	eax
	mov	DWORD PTR i$46[rsp], eax
$LN20@uncompress:
	cmp	DWORD PTR i$46[rsp], 256		; 00000100H
	jae	SHORT $LN19@uncompress
; Line 358
	mov	eax, DWORD PTR i$46[rsp]
	mov	DWORD PTR litCodeLengths$111[rsp+rax*4], 9
; Line 359
	jmp	SHORT $LN18@uncompress
$LN19@uncompress:
; Line 360
	mov	DWORD PTR i$32[rsp], 256		; 00000100H
	jmp	SHORT $LN23@uncompress
$LN21@uncompress:
	mov	eax, DWORD PTR i$32[rsp]
	inc	eax
	mov	DWORD PTR i$32[rsp], eax
$LN23@uncompress:
	cmp	DWORD PTR i$32[rsp], 280		; 00000118H
	jae	SHORT $LN22@uncompress
; Line 361
	mov	eax, DWORD PTR i$32[rsp]
	mov	DWORD PTR litCodeLengths$111[rsp+rax*4], 7
; Line 362
	jmp	SHORT $LN21@uncompress
$LN22@uncompress:
; Line 363
	mov	DWORD PTR i$33[rsp], 280		; 00000118H
	jmp	SHORT $LN26@uncompress
$LN24@uncompress:
	mov	eax, DWORD PTR i$33[rsp]
	inc	eax
	mov	DWORD PTR i$33[rsp], eax
$LN26@uncompress:
	cmp	DWORD PTR i$33[rsp], 288		; 00000120H
	jae	SHORT $LN25@uncompress
; Line 364
	mov	eax, DWORD PTR i$33[rsp]
	mov	DWORD PTR litCodeLengths$111[rsp+rax*4], 8
; Line 365
	jmp	SHORT $LN24@uncompress
$LN25@uncompress:
; Line 366
	mov	r9d, 9
	lea	r8, QWORD PTR litCodeLengths$111[rsp]
	mov	edx, 288				; 00000120H
	lea	rcx, QWORD PTR $T104[rsp]
	call	?generatePNGHuffmanFromCodeLengths@@YA?AUPNGHuffman@@IPEAII@Z ; generatePNGHuffmanFromCodeLengths
	lea	rcx, QWORD PTR $T99[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR litLenHuff$100[rsp]
	lea	rcx, QWORD PTR $T99[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
; Line 368
	mov	DWORD PTR code$9[rsp], -1		; ffffffffH
$LN27@uncompress:
; Line 369
	cmp	DWORD PTR code$9[rsp], 256		; 00000100H
	je	$LN28@uncompress
; Line 370
	lea	r8, QWORD PTR litLenHuff$100[rsp]
	lea	rdx, QWORD PTR bitOffset$[rsp]
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?parseHuffmanCodeFromData@@YAIPEAEPEAIPEAUPNGHuffman@@@Z ; parseHuffmanCodeFromData
	mov	DWORD PTR code$9[rsp], eax
; Line 371
	cmp	DWORD PTR code$9[rsp], 256		; 00000100H
	jae	SHORT $LN126@uncompress
; Line 372
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	movzx	ecx, BYTE PTR code$9[rsp]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR unfilteredDataPtr$[rsp], rax
	jmp	$LN127@uncompress
$LN126@uncompress:
; Line 373
	cmp	DWORD PTR code$9[rsp], 256		; 00000100H
	jbe	$LN128@uncompress
; Line 374
	mov	eax, DWORD PTR code$9[rsp]
	sub	eax, 257				; 00000101H
	mov	DWORD PTR code$9[rsp], eax
; Line 376
	mov	eax, DWORD PTR code$9[rsp]
	mov	QWORD PTR tv357[rsp], rax
	lea	rcx, OFFSET FLAT:?LENGTH_ADD_AMOUNT@@3QBIB
	mov	QWORD PTR tv1163[rsp], rcx
	mov	edx, DWORD PTR code$9[rsp]
	lea	rdi, OFFSET FLAT:?LENGTH_EXTRA_BITS@@3QBIB
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, DWORD PTR [rdi+rdx*4]
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	mov	rdx, QWORD PTR tv1163[rsp]
	mov	rcx, QWORD PTR tv357[rsp]
	add	eax, DWORD PTR [rdx+rcx*4]
	mov	DWORD PTR length$90[rsp], eax
; Line 377
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 5
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	mov	DWORD PTR distCode$62[rsp], eax
; Line 378
	mov	eax, DWORD PTR distCode$62[rsp]
	mov	QWORD PTR tv374[rsp], rax
	lea	rcx, OFFSET FLAT:?DISTANCE_ADD_AMOUNT@@3QBIB
	mov	QWORD PTR tv1165[rsp], rcx
	mov	edx, DWORD PTR distCode$62[rsp]
	lea	rdi, OFFSET FLAT:?DISTANCE_EXTRA_BITS@@3QBIB
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, DWORD PTR [rdi+rdx*4]
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	mov	rdx, QWORD PTR tv1165[rsp]
	mov	rcx, QWORD PTR tv374[rsp]
	add	eax, DWORD PTR [rdx+rcx*4]
	mov	DWORD PTR distance$89[rsp], eax
; Line 380
	mov	eax, DWORD PTR distance$89[rsp]
	mov	rcx, QWORD PTR unfilteredDataPtr$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tempDataPtr$92[rsp], rax
; Line 381
	mov	DWORD PTR i$60[rsp], 0
	jmp	SHORT $LN31@uncompress
$LN29@uncompress:
	mov	eax, DWORD PTR i$60[rsp]
	inc	eax
	mov	DWORD PTR i$60[rsp], eax
$LN31@uncompress:
	mov	eax, DWORD PTR length$90[rsp]
	cmp	DWORD PTR i$60[rsp], eax
	jae	SHORT $LN30@uncompress
; Line 382
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	mov	rcx, QWORD PTR tempDataPtr$92[rsp]
	movzx	ecx, BYTE PTR [rcx]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR unfilteredDataPtr$[rsp], rax
	mov	rax, QWORD PTR tempDataPtr$92[rsp]
	inc	rax
	mov	QWORD PTR tempDataPtr$92[rsp], rax
; Line 383
	jmp	SHORT $LN29@uncompress
$LN30@uncompress:
; Line 384
	jmp	SHORT $LN129@uncompress
$LN128@uncompress:
; Line 385
	cmp	DWORD PTR bfinal$[rsp], 0
	jne	SHORT $LN130@uncompress
; Line 386
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 1
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	mov	DWORD PTR bfinal$[rsp], eax
; Line 387
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 2
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	mov	DWORD PTR btype$[rsp], eax
; Line 388
	jmp	SHORT $LN131@uncompress
$LN130@uncompress:
; Line 389
	mov	BYTE PTR eof$[rsp], 1
$LN131@uncompress:
$LN129@uncompress:
$LN127@uncompress:
; Line 392
	jmp	$LN27@uncompress
$LN28@uncompress:
; Line 394
	jmp	$LN10@uncompress
; Line 395
	jmp	$LN10@uncompress
$LN132@uncompress:
; Line 398
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 5
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	add	eax, 257				; 00000101H
	mov	DWORD PTR hlit$50[rsp], eax
; Line 399
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 5
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	inc	eax
	mov	DWORD PTR hdist$63[rsp], eax
; Line 400
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 4
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	add	eax, 4
	mov	DWORD PTR hclen$91[rsp], eax
; Line 401
	mov	DWORD PTR codeLengthAlphabet$108[rsp], 16
	mov	DWORD PTR codeLengthAlphabet$108[rsp+4], 17
	mov	DWORD PTR codeLengthAlphabet$108[rsp+8], 18
	mov	DWORD PTR codeLengthAlphabet$108[rsp+12], 0
	mov	DWORD PTR codeLengthAlphabet$108[rsp+16], 8
	mov	DWORD PTR codeLengthAlphabet$108[rsp+20], 7
	mov	DWORD PTR codeLengthAlphabet$108[rsp+24], 9
	mov	DWORD PTR codeLengthAlphabet$108[rsp+28], 6
	mov	DWORD PTR codeLengthAlphabet$108[rsp+32], 10
	mov	DWORD PTR codeLengthAlphabet$108[rsp+36], 5
	mov	DWORD PTR codeLengthAlphabet$108[rsp+40], 11
	mov	DWORD PTR codeLengthAlphabet$108[rsp+44], 4
	mov	DWORD PTR codeLengthAlphabet$108[rsp+48], 12
	mov	DWORD PTR codeLengthAlphabet$108[rsp+52], 3
	mov	DWORD PTR codeLengthAlphabet$108[rsp+56], 13
	mov	DWORD PTR codeLengthAlphabet$108[rsp+60], 2
	mov	DWORD PTR codeLengthAlphabet$108[rsp+64], 14
	mov	DWORD PTR codeLengthAlphabet$108[rsp+68], 1
	mov	DWORD PTR codeLengthAlphabet$108[rsp+72], 15
; Line 402
	lea	rax, QWORD PTR codeLengths$109[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 76					; 0000004cH
	rep stosb
; Line 404
	mov	DWORD PTR i$34[rsp], 0
	jmp	SHORT $LN34@uncompress
$LN32@uncompress:
	mov	eax, DWORD PTR i$34[rsp]
	inc	eax
	mov	DWORD PTR i$34[rsp], eax
$LN34@uncompress:
	mov	eax, DWORD PTR hclen$91[rsp]
	cmp	DWORD PTR i$34[rsp], eax
	jae	SHORT $LN33@uncompress
; Line 405
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 3
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	movsxd	rcx, DWORD PTR i$34[rsp]
	mov	ecx, DWORD PTR codeLengthAlphabet$108[rsp+rcx*4]
	mov	DWORD PTR codeLengths$109[rsp+rcx*4], eax
; Line 406
	jmp	SHORT $LN32@uncompress
$LN33@uncompress:
; Line 408
	mov	r9d, 7
	lea	r8, QWORD PTR codeLengths$109[rsp]
	mov	edx, 19
	lea	rcx, QWORD PTR $T105[rsp]
	call	?generatePNGHuffmanFromCodeLengths@@YA?AUPNGHuffman@@IPEAII@Z ; generatePNGHuffmanFromCodeLengths
	lea	rcx, QWORD PTR $T101[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR litLenHuff$96[rsp]
	lea	rcx, QWORD PTR $T101[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
; Line 410
	lea	rax, QWORD PTR lenDistLengths$110[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1272				; 000004f8H
	rep stosb
; Line 411
	mov	DWORD PTR totalLenDistLenghtsFound$5[rsp], 0
; Line 412
	mov	eax, DWORD PTR hdist$63[rsp]
	mov	ecx, DWORD PTR hlit$50[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR totalLenDistLenghts$65[rsp], eax
$LN35@uncompress:
; Line 414
	mov	eax, DWORD PTR totalLenDistLenghts$65[rsp]
	cmp	DWORD PTR totalLenDistLenghtsFound$5[rsp], eax
	jae	$LN36@uncompress
; Line 415
	lea	r8, QWORD PTR litLenHuff$96[rsp]
	lea	rdx, QWORD PTR bitOffset$[rsp]
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?parseHuffmanCodeFromData@@YAIPEAEPEAIPEAUPNGHuffman@@@Z ; parseHuffmanCodeFromData
	mov	DWORD PTR code$15[rsp], eax
; Line 417
	cmp	DWORD PTR code$15[rsp], 16
	jae	SHORT $LN133@uncompress
; Line 418
	mov	eax, DWORD PTR totalLenDistLenghtsFound$5[rsp]
	mov	ecx, DWORD PTR code$15[rsp]
	mov	DWORD PTR lenDistLengths$110[rsp+rax*4], ecx
	mov	eax, DWORD PTR totalLenDistLenghtsFound$5[rsp]
	inc	eax
	mov	DWORD PTR totalLenDistLenghtsFound$5[rsp], eax
	jmp	$LN134@uncompress
$LN133@uncompress:
; Line 419
	cmp	DWORD PTR code$15[rsp], 16
	jne	SHORT $LN135@uncompress
; Line 420
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 2
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	add	eax, 3
	mov	DWORD PTR copyLen$66[rsp], eax
; Line 421
	mov	DWORD PTR i$47[rsp], 0
	jmp	SHORT $LN39@uncompress
$LN37@uncompress:
	mov	eax, DWORD PTR i$47[rsp]
	inc	eax
	mov	DWORD PTR i$47[rsp], eax
$LN39@uncompress:
	mov	eax, DWORD PTR copyLen$66[rsp]
	cmp	DWORD PTR i$47[rsp], eax
	jae	SHORT $LN38@uncompress
; Line 422
	mov	eax, DWORD PTR totalLenDistLenghtsFound$5[rsp]
	dec	eax
	mov	eax, eax
	mov	ecx, DWORD PTR totalLenDistLenghtsFound$5[rsp]
	mov	eax, DWORD PTR lenDistLengths$110[rsp+rax*4]
	mov	DWORD PTR lenDistLengths$110[rsp+rcx*4], eax
; Line 423
	mov	eax, DWORD PTR totalLenDistLenghtsFound$5[rsp]
	inc	eax
	mov	DWORD PTR totalLenDistLenghtsFound$5[rsp], eax
; Line 424
	jmp	SHORT $LN37@uncompress
$LN38@uncompress:
; Line 425
	jmp	$LN136@uncompress
$LN135@uncompress:
	cmp	DWORD PTR code$15[rsp], 17
	jne	SHORT $LN137@uncompress
; Line 426
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 3
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	add	eax, 3
	mov	DWORD PTR copyLen$67[rsp], eax
; Line 427
	mov	DWORD PTR i$48[rsp], 0
	jmp	SHORT $LN42@uncompress
$LN40@uncompress:
	mov	eax, DWORD PTR i$48[rsp]
	inc	eax
	mov	DWORD PTR i$48[rsp], eax
$LN42@uncompress:
	mov	eax, DWORD PTR copyLen$67[rsp]
	cmp	DWORD PTR i$48[rsp], eax
	jae	SHORT $LN41@uncompress
; Line 428
	mov	eax, DWORD PTR totalLenDistLenghtsFound$5[rsp]
	mov	DWORD PTR lenDistLengths$110[rsp+rax*4], 0
	mov	eax, DWORD PTR totalLenDistLenghtsFound$5[rsp]
	inc	eax
	mov	DWORD PTR totalLenDistLenghtsFound$5[rsp], eax
; Line 429
	jmp	SHORT $LN40@uncompress
$LN41@uncompress:
; Line 430
	jmp	SHORT $LN138@uncompress
$LN137@uncompress:
	cmp	DWORD PTR code$15[rsp], 18
	jne	SHORT $LN139@uncompress
; Line 431
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 7
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	add	eax, 11
	mov	DWORD PTR copyLen$68[rsp], eax
; Line 432
	mov	DWORD PTR i$49[rsp], 0
	jmp	SHORT $LN45@uncompress
$LN43@uncompress:
	mov	eax, DWORD PTR i$49[rsp]
	inc	eax
	mov	DWORD PTR i$49[rsp], eax
$LN45@uncompress:
	mov	eax, DWORD PTR copyLen$68[rsp]
	cmp	DWORD PTR i$49[rsp], eax
	jae	SHORT $LN44@uncompress
; Line 433
	mov	eax, DWORD PTR totalLenDistLenghtsFound$5[rsp]
	mov	DWORD PTR lenDistLengths$110[rsp+rax*4], 0
	mov	eax, DWORD PTR totalLenDistLenghtsFound$5[rsp]
	inc	eax
	mov	DWORD PTR totalLenDistLenghtsFound$5[rsp], eax
; Line 434
	jmp	SHORT $LN43@uncompress
$LN44@uncompress:
$LN139@uncompress:
$LN138@uncompress:
$LN136@uncompress:
$LN134@uncompress:
; Line 436
	jmp	$LN35@uncompress
$LN36@uncompress:
; Line 438
	lea	rcx, QWORD PTR litLenHuff$96[rsp]
	call	?clearPNGHuffman@@YAXPEAUPNGHuffman@@@Z	; clearPNGHuffman
; Line 439
	mov	r9d, 15
	lea	r8, QWORD PTR lenDistLengths$110[rsp]
	mov	edx, DWORD PTR hlit$50[rsp]
	lea	rcx, QWORD PTR $T106[rsp]
	call	?generatePNGHuffmanFromCodeLengths@@YA?AUPNGHuffman@@IPEAII@Z ; generatePNGHuffmanFromCodeLengths
	lea	rcx, QWORD PTR $T102[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR literalHuff$97[rsp]
	lea	rcx, QWORD PTR $T102[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
; Line 440
	mov	eax, DWORD PTR hlit$50[rsp]
	lea	rax, QWORD PTR lenDistLengths$110[rsp+rax*4]
	mov	r9d, 15
	mov	r8, rax
	mov	edx, DWORD PTR hdist$63[rsp]
	lea	rcx, QWORD PTR $T107[rsp]
	call	?generatePNGHuffmanFromCodeLengths@@YA?AUPNGHuffman@@IPEAII@Z ; generatePNGHuffmanFromCodeLengths
	lea	rcx, QWORD PTR $T103[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	lea	rax, QWORD PTR distHuff$98[rsp]
	lea	rcx, QWORD PTR $T103[rsp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 40					; 00000028H
	rep movsb
; Line 442
	mov	DWORD PTR code$10[rsp], -1		; ffffffffH
$LN46@uncompress:
; Line 443
	cmp	DWORD PTR code$10[rsp], 256		; 00000100H
	je	$LN47@uncompress
; Line 444
	lea	r8, QWORD PTR literalHuff$97[rsp]
	lea	rdx, QWORD PTR bitOffset$[rsp]
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?parseHuffmanCodeFromData@@YAIPEAEPEAIPEAUPNGHuffman@@@Z ; parseHuffmanCodeFromData
	mov	DWORD PTR code$10[rsp], eax
; Line 446
	cmp	DWORD PTR code$10[rsp], 256		; 00000100H
	jae	SHORT $LN140@uncompress
; Line 447
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	movzx	ecx, BYTE PTR code$10[rsp]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR unfilteredDataPtr$[rsp], rax
	jmp	$LN141@uncompress
$LN140@uncompress:
; Line 448
	cmp	DWORD PTR code$10[rsp], 256		; 00000100H
	jbe	$LN142@uncompress
; Line 449
	mov	eax, DWORD PTR code$10[rsp]
	sub	eax, 257				; 00000101H
	mov	DWORD PTR code$10[rsp], eax
; Line 451
	mov	eax, DWORD PTR code$10[rsp]
	mov	QWORD PTR tv591[rsp], rax
	lea	rcx, OFFSET FLAT:?LENGTH_ADD_AMOUNT@@3QBIB
	mov	QWORD PTR tv1167[rsp], rcx
	mov	edx, DWORD PTR code$10[rsp]
	lea	rdi, OFFSET FLAT:?LENGTH_EXTRA_BITS@@3QBIB
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, DWORD PTR [rdi+rdx*4]
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	mov	rdx, QWORD PTR tv1167[rsp]
	mov	rcx, QWORD PTR tv591[rsp]
	add	eax, DWORD PTR [rdx+rcx*4]
	mov	DWORD PTR length$70[rsp], eax
; Line 453
	lea	r8, QWORD PTR distHuff$98[rsp]
	lea	rdx, QWORD PTR bitOffset$[rsp]
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?parseHuffmanCodeFromData@@YAIPEAEPEAIPEAUPNGHuffman@@@Z ; parseHuffmanCodeFromData
	mov	DWORD PTR distCode$61[rsp], eax
; Line 454
	mov	eax, DWORD PTR distCode$61[rsp]
	mov	QWORD PTR tv607[rsp], rax
	lea	rcx, OFFSET FLAT:?DISTANCE_ADD_AMOUNT@@3QBIB
	mov	QWORD PTR tv1169[rsp], rcx
	mov	edx, DWORD PTR distCode$61[rsp]
	lea	rdi, OFFSET FLAT:?DISTANCE_EXTRA_BITS@@3QBIB
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, DWORD PTR [rdi+rdx*4]
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	mov	rdx, QWORD PTR tv1169[rsp]
	mov	rcx, QWORD PTR tv607[rsp]
	add	eax, DWORD PTR [rdx+rcx*4]
	mov	DWORD PTR distance$69[rsp], eax
; Line 456
	mov	eax, DWORD PTR distance$69[rsp]
	mov	rcx, QWORD PTR unfilteredDataPtr$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tempDataPtr$93[rsp], rax
; Line 457
	mov	DWORD PTR i$51[rsp], 0
	jmp	SHORT $LN50@uncompress
$LN48@uncompress:
	mov	eax, DWORD PTR i$51[rsp]
	inc	eax
	mov	DWORD PTR i$51[rsp], eax
$LN50@uncompress:
	mov	eax, DWORD PTR length$70[rsp]
	cmp	DWORD PTR i$51[rsp], eax
	jae	SHORT $LN49@uncompress
; Line 458
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	mov	rcx, QWORD PTR tempDataPtr$93[rsp]
	movzx	ecx, BYTE PTR [rcx]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR unfilteredDataPtr$[rsp], rax
	mov	rax, QWORD PTR tempDataPtr$93[rsp]
	inc	rax
	mov	QWORD PTR tempDataPtr$93[rsp], rax
; Line 459
	jmp	SHORT $LN48@uncompress
$LN49@uncompress:
; Line 460
	jmp	SHORT $LN143@uncompress
$LN142@uncompress:
; Line 461
	cmp	DWORD PTR bfinal$[rsp], 0
	jne	SHORT $LN144@uncompress
; Line 462
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 1
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	mov	DWORD PTR bfinal$[rsp], eax
; Line 463
	mov	r9b, 1
	lea	r8, QWORD PTR bitOffset$[rsp]
	mov	edx, 2
	mov	rcx, QWORD PTR cdPtr$[rsp]
	call	?readBitsFromArray@@YAIPEAEIPEAI_N@Z	; readBitsFromArray
	mov	DWORD PTR btype$[rsp], eax
; Line 464
	jmp	SHORT $LN145@uncompress
$LN144@uncompress:
; Line 465
	mov	BYTE PTR eof$[rsp], 1
$LN145@uncompress:
$LN143@uncompress:
$LN141@uncompress:
; Line 468
	jmp	$LN46@uncompress
$LN47@uncompress:
; Line 470
	lea	rcx, QWORD PTR literalHuff$97[rsp]
	call	?clearPNGHuffman@@YAXPEAUPNGHuffman@@@Z	; clearPNGHuffman
; Line 471
	lea	rcx, QWORD PTR distHuff$98[rsp]
	call	?clearPNGHuffman@@YAXPEAUPNGHuffman@@@Z	; clearPNGHuffman
; Line 473
	jmp	SHORT $LN10@uncompress
$LN146@uncompress:
; Line 476
	mov	edx, DWORD PTR btype$[rsp]
	lea	rcx, OFFSET FLAT:$SG31795
	call	printf
; Line 477
	mov	ecx, 3
	call	exit
$LN10@uncompress:
; Line 480
	jmp	$LN8@uncompress
$LN9@uncompress:
; Line 482
	mov	rax, QWORD PTR unfilteredData$[rsp]
	mov	QWORD PTR unfilteredDataPtr$[rsp], rax
; Line 483
	mov	rax, QWORD PTR width$[rsp]
	mov	eax, DWORD PTR [rax]
	imul	eax, DWORD PTR bytesPerPixel$[rsp]
	mov	DWORD PTR uncompressedRowSize$[rsp], eax
; Line 484
	mov	DWORD PTR rc$[rsp], 0
$LN51@uncompress:
; Line 485
	mov	rax, QWORD PTR height$[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR rc$[rsp], eax
	jae	$LN52@uncompress
; Line 486
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR filterType$11[rsp], al
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR unfilteredDataPtr$[rsp], rax
; Line 487
	movzx	eax, BYTE PTR filterType$11[rsp]
	mov	BYTE PTR tv648[rsp], al
	cmp	BYTE PTR tv648[rsp], 0
	je	SHORT $LN147@uncompress
	cmp	BYTE PTR tv648[rsp], 1
	je	$LN148@uncompress
	cmp	BYTE PTR tv648[rsp], 2
	je	$LN151@uncompress
	cmp	BYTE PTR tv648[rsp], 3
	je	$LN154@uncompress
	cmp	BYTE PTR tv648[rsp], 4
	je	$LN157@uncompress
	jmp	$LN53@uncompress
$LN147@uncompress:
; Line 489
	mov	DWORD PTR i$52[rsp], 0
	jmp	SHORT $LN57@uncompress
$LN55@uncompress:
	mov	eax, DWORD PTR i$52[rsp]
	inc	eax
	mov	DWORD PTR i$52[rsp], eax
$LN57@uncompress:
	mov	eax, DWORD PTR uncompressedRowSize$[rsp]
	cmp	DWORD PTR i$52[rsp], eax
	jae	SHORT $LN56@uncompress
; Line 490
	mov	rax, QWORD PTR uncompressedDataPtr$[rsp]
	mov	rcx, QWORD PTR unfilteredDataPtr$[rsp]
	movzx	ecx, BYTE PTR [rcx]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR uncompressedDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR uncompressedDataPtr$[rsp], rax
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR unfilteredDataPtr$[rsp], rax
; Line 491
	jmp	SHORT $LN55@uncompress
$LN56@uncompress:
; Line 492
	jmp	$LN53@uncompress
$LN148@uncompress:
; Line 495
	mov	DWORD PTR i$35[rsp], 0
	jmp	SHORT $LN60@uncompress
$LN58@uncompress:
	mov	eax, DWORD PTR i$35[rsp]
	inc	eax
	mov	DWORD PTR i$35[rsp], eax
$LN60@uncompress:
	mov	eax, DWORD PTR uncompressedRowSize$[rsp]
	cmp	DWORD PTR i$35[rsp], eax
	jae	SHORT $LN59@uncompress
; Line 496
	mov	eax, DWORD PTR bytesPerPixel$[rsp]
	cmp	DWORD PTR i$35[rsp], eax
	jb	SHORT $LN149@uncompress
; Line 497
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	ecx, DWORD PTR bytesPerPixel$[rsp]
	mov	rdx, QWORD PTR uncompressedDataPtr$[rsp]
	sub	rdx, rcx
	mov	rcx, rdx
	movzx	ecx, BYTE PTR [rcx]
	add	eax, ecx
	mov	rcx, QWORD PTR uncompressedDataPtr$[rsp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR unfilteredDataPtr$[rsp], rax
; Line 498
	mov	rax, QWORD PTR uncompressedDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR uncompressedDataPtr$[rsp], rax
; Line 499
	jmp	SHORT $LN150@uncompress
$LN149@uncompress:
; Line 500
	mov	rax, QWORD PTR uncompressedDataPtr$[rsp]
	mov	rcx, QWORD PTR unfilteredDataPtr$[rsp]
	movzx	ecx, BYTE PTR [rcx]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR uncompressedDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR uncompressedDataPtr$[rsp], rax
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR unfilteredDataPtr$[rsp], rax
$LN150@uncompress:
; Line 502
	jmp	$LN58@uncompress
$LN59@uncompress:
; Line 503
	jmp	$LN53@uncompress
$LN151@uncompress:
; Line 506
	mov	DWORD PTR i$53[rsp], 0
	jmp	SHORT $LN63@uncompress
$LN61@uncompress:
	mov	eax, DWORD PTR i$53[rsp]
	inc	eax
	mov	DWORD PTR i$53[rsp], eax
$LN63@uncompress:
	mov	eax, DWORD PTR uncompressedRowSize$[rsp]
	cmp	DWORD PTR i$53[rsp], eax
	jae	SHORT $LN62@uncompress
; Line 507
	cmp	DWORD PTR rc$[rsp], 0
	jbe	SHORT $LN152@uncompress
; Line 508
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	ecx, DWORD PTR uncompressedRowSize$[rsp]
	mov	rdx, QWORD PTR uncompressedDataPtr$[rsp]
	sub	rdx, rcx
	mov	rcx, rdx
	movzx	ecx, BYTE PTR [rcx]
	add	eax, ecx
	mov	rcx, QWORD PTR uncompressedDataPtr$[rsp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR unfilteredDataPtr$[rsp], rax
; Line 509
	mov	rax, QWORD PTR uncompressedDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR uncompressedDataPtr$[rsp], rax
; Line 510
	jmp	SHORT $LN153@uncompress
$LN152@uncompress:
; Line 511
	mov	rax, QWORD PTR uncompressedDataPtr$[rsp]
	mov	rcx, QWORD PTR unfilteredDataPtr$[rsp]
	movzx	ecx, BYTE PTR [rcx]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR uncompressedDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR uncompressedDataPtr$[rsp], rax
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR unfilteredDataPtr$[rsp], rax
$LN153@uncompress:
; Line 513
	jmp	$LN61@uncompress
$LN62@uncompress:
; Line 514
	jmp	$LN53@uncompress
$LN154@uncompress:
; Line 517
	mov	DWORD PTR i$36[rsp], 0
	jmp	SHORT $LN66@uncompress
$LN64@uncompress:
	mov	eax, DWORD PTR i$36[rsp]
	inc	eax
	mov	DWORD PTR i$36[rsp], eax
$LN66@uncompress:
	mov	eax, DWORD PTR uncompressedRowSize$[rsp]
	cmp	DWORD PTR i$36[rsp], eax
	jae	$LN65@uncompress
; Line 518
	mov	BYTE PTR up$7[rsp], 0
; Line 519
	mov	BYTE PTR left$8[rsp], 0
; Line 520
	mov	eax, DWORD PTR bytesPerPixel$[rsp]
	cmp	DWORD PTR i$36[rsp], eax
	jb	SHORT $LN155@uncompress
; Line 521
	mov	eax, DWORD PTR bytesPerPixel$[rsp]
	mov	rcx, QWORD PTR uncompressedDataPtr$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR left$8[rsp], al
$LN155@uncompress:
; Line 523
	cmp	DWORD PTR rc$[rsp], 0
	jbe	SHORT $LN156@uncompress
; Line 524
	mov	eax, DWORD PTR uncompressedRowSize$[rsp]
	mov	rcx, QWORD PTR uncompressedDataPtr$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR up$7[rsp], al
$LN156@uncompress:
; Line 526
	movzx	eax, BYTE PTR up$7[rsp]
	movzx	ecx, BYTE PTR left$8[rsp]
	add	eax, ecx
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	mov	DWORD PTR avg$71[rsp], eax
; Line 527
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	movzx	eax, BYTE PTR [rax]
	movzx	ecx, BYTE PTR avg$71[rsp]
	add	eax, ecx
	mov	rcx, QWORD PTR uncompressedDataPtr$[rsp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR uncompressedDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR uncompressedDataPtr$[rsp], rax
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR unfilteredDataPtr$[rsp], rax
; Line 528
	jmp	$LN64@uncompress
$LN65@uncompress:
; Line 529
	jmp	$LN53@uncompress
$LN157@uncompress:
; Line 532
	mov	DWORD PTR i$16[rsp], 0
	jmp	SHORT $LN69@uncompress
$LN67@uncompress:
	mov	eax, DWORD PTR i$16[rsp]
	inc	eax
	mov	DWORD PTR i$16[rsp], eax
$LN69@uncompress:
	mov	eax, DWORD PTR uncompressedRowSize$[rsp]
	cmp	DWORD PTR i$16[rsp], eax
	jae	$LN68@uncompress
; Line 533
	mov	BYTE PTR a$1[rsp], 0
; Line 534
	mov	BYTE PTR b$2[rsp], 0
; Line 535
	mov	BYTE PTR c$3[rsp], 0
; Line 536
	mov	BYTE PTR addr$4[rsp], 0
; Line 537
	mov	eax, DWORD PTR bytesPerPixel$[rsp]
	cmp	DWORD PTR i$16[rsp], eax
	jb	SHORT $LN158@uncompress
; Line 538
	mov	eax, DWORD PTR bytesPerPixel$[rsp]
	mov	rcx, QWORD PTR uncompressedDataPtr$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR a$1[rsp], al
$LN158@uncompress:
; Line 540
	cmp	DWORD PTR rc$[rsp], 0
	jbe	SHORT $LN159@uncompress
; Line 541
	mov	eax, DWORD PTR uncompressedRowSize$[rsp]
	mov	rcx, QWORD PTR uncompressedDataPtr$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR b$2[rsp], al
$LN159@uncompress:
; Line 543
	mov	eax, DWORD PTR bytesPerPixel$[rsp]
	cmp	DWORD PTR i$16[rsp], eax
	jb	SHORT $LN160@uncompress
	cmp	DWORD PTR rc$[rsp], 0
	jbe	SHORT $LN160@uncompress
; Line 544
	mov	eax, DWORD PTR uncompressedRowSize$[rsp]
	mov	rcx, QWORD PTR uncompressedDataPtr$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	ecx, DWORD PTR bytesPerPixel$[rsp]
	sub	rax, rcx
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR c$3[rsp], al
$LN160@uncompress:
; Line 546
	movzx	eax, BYTE PTR a$1[rsp]
	movzx	ecx, BYTE PTR b$2[rsp]
	add	eax, ecx
	movzx	ecx, BYTE PTR c$3[rsp]
	sub	eax, ecx
	mov	DWORD PTR p$54[rsp], eax
; Line 547
	movzx	eax, BYTE PTR a$1[rsp]
	mov	ecx, DWORD PTR p$54[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR pa$13[rsp], eax
; Line 548
	movzx	eax, BYTE PTR b$2[rsp]
	mov	ecx, DWORD PTR p$54[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR pb$12[rsp], eax
; Line 549
	movzx	eax, BYTE PTR c$3[rsp]
	mov	ecx, DWORD PTR p$54[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR pc$14[rsp], eax
; Line 550
	cmp	DWORD PTR pa$13[rsp], 0
	jle	SHORT $LN187@uncompress
	mov	eax, DWORD PTR pa$13[rsp]
	mov	DWORD PTR tv756[rsp], eax
	jmp	SHORT $LN188@uncompress
$LN187@uncompress:
	mov	eax, DWORD PTR pa$13[rsp]
	neg	eax
	mov	DWORD PTR tv756[rsp], eax
$LN188@uncompress:
	mov	eax, DWORD PTR tv756[rsp]
	mov	DWORD PTR pa$13[rsp], eax
; Line 551
	cmp	DWORD PTR pb$12[rsp], 0
	jle	SHORT $LN189@uncompress
	mov	eax, DWORD PTR pb$12[rsp]
	mov	DWORD PTR tv759[rsp], eax
	jmp	SHORT $LN190@uncompress
$LN189@uncompress:
	mov	eax, DWORD PTR pb$12[rsp]
	neg	eax
	mov	DWORD PTR tv759[rsp], eax
$LN190@uncompress:
	mov	eax, DWORD PTR tv759[rsp]
	mov	DWORD PTR pb$12[rsp], eax
; Line 552
	cmp	DWORD PTR pc$14[rsp], 0
	jle	SHORT $LN191@uncompress
	mov	eax, DWORD PTR pc$14[rsp]
	mov	DWORD PTR tv762[rsp], eax
	jmp	SHORT $LN192@uncompress
$LN191@uncompress:
	mov	eax, DWORD PTR pc$14[rsp]
	neg	eax
	mov	DWORD PTR tv762[rsp], eax
$LN192@uncompress:
	mov	eax, DWORD PTR tv762[rsp]
	mov	DWORD PTR pc$14[rsp], eax
; Line 553
	mov	eax, DWORD PTR pb$12[rsp]
	cmp	DWORD PTR pa$13[rsp], eax
	jg	SHORT $LN161@uncompress
	mov	eax, DWORD PTR pc$14[rsp]
	cmp	DWORD PTR pa$13[rsp], eax
	jg	SHORT $LN161@uncompress
; Line 554
	movzx	eax, BYTE PTR a$1[rsp]
	mov	BYTE PTR addr$4[rsp], al
	jmp	SHORT $LN162@uncompress
$LN161@uncompress:
; Line 555
	mov	eax, DWORD PTR pc$14[rsp]
	cmp	DWORD PTR pb$12[rsp], eax
	jg	SHORT $LN163@uncompress
; Line 556
	movzx	eax, BYTE PTR b$2[rsp]
	mov	BYTE PTR addr$4[rsp], al
; Line 557
	jmp	SHORT $LN164@uncompress
$LN163@uncompress:
; Line 558
	movzx	eax, BYTE PTR c$3[rsp]
	mov	BYTE PTR addr$4[rsp], al
$LN164@uncompress:
$LN162@uncompress:
; Line 560
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	movzx	eax, BYTE PTR [rax]
	movzx	ecx, BYTE PTR addr$4[rsp]
	add	eax, ecx
	mov	rcx, QWORD PTR uncompressedDataPtr$[rsp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR uncompressedDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR uncompressedDataPtr$[rsp], rax
	mov	rax, QWORD PTR unfilteredDataPtr$[rsp]
	inc	rax
	mov	QWORD PTR unfilteredDataPtr$[rsp], rax
; Line 561
	jmp	$LN67@uncompress
$LN68@uncompress:
$LN53@uncompress:
; Line 565
	mov	eax, DWORD PTR rc$[rsp]
	inc	eax
	mov	DWORD PTR rc$[rsp], eax
; Line 566
	jmp	$LN51@uncompress
$LN52@uncompress:
; Line 568
	mov	rax, QWORD PTR width$[rsp]
	mov	rcx, QWORD PTR height$[rsp]
	mov	eax, DWORD PTR [rax]
	imul	eax, DWORD PTR [rcx]
	shl	eax, 2
	mov	eax, eax
	shl	rax, 2
	mov	DWORD PTR ucDataSize$[rsp], eax
; Line 569
	mov	eax, DWORD PTR ucDataSize$[rsp]
	mov	ecx, eax
	call	malloc
	mov	QWORD PTR fullUCData$[rsp], rax
; Line 571
	movzx	eax, BYTE PTR colorType$[rsp]
	mov	BYTE PTR tv792[rsp], al
	cmp	BYTE PTR tv792[rsp], 0
	je	SHORT $LN165@uncompress
	cmp	BYTE PTR tv792[rsp], 2
	je	$LN172@uncompress
	cmp	BYTE PTR tv792[rsp], 3
	je	$LN177@uncompress
	cmp	BYTE PTR tv792[rsp], 4
	je	$LN178@uncompress
	cmp	BYTE PTR tv792[rsp], 6
	je	$LN179@uncompress
	jmp	$LN70@uncompress
$LN165@uncompress:
; Line 573
	movzx	eax, BYTE PTR bitDepth$[rsp]
	mov	BYTE PTR tv794[rsp], al
	cmp	BYTE PTR tv794[rsp], 1
	je	$LN168@uncompress
	cmp	BYTE PTR tv794[rsp], 2
	je	$LN169@uncompress
	cmp	BYTE PTR tv794[rsp], 4
	je	$LN170@uncompress
	cmp	BYTE PTR tv794[rsp], 8
	je	SHORT $LN166@uncompress
	cmp	BYTE PTR tv794[rsp], 16
	je	$LN167@uncompress
	jmp	$LN171@uncompress
$LN166@uncompress:
; Line 575
	mov	DWORD PTR y$17[rsp], 0
	jmp	SHORT $LN76@uncompress
$LN74@uncompress:
	mov	eax, DWORD PTR y$17[rsp]
	inc	eax
	mov	DWORD PTR y$17[rsp], eax
$LN76@uncompress:
	mov	rax, QWORD PTR height$[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR y$17[rsp], eax
	jae	$LN75@uncompress
; Line 576
	mov	DWORD PTR x$18[rsp], 0
	jmp	SHORT $LN79@uncompress
$LN77@uncompress:
	mov	eax, DWORD PTR x$18[rsp]
	inc	eax
	mov	DWORD PTR x$18[rsp], eax
$LN79@uncompress:
	mov	rax, QWORD PTR width$[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR x$18[rsp], eax
	jae	$LN78@uncompress
; Line 577
	mov	rax, QWORD PTR width$[rsp]
	mov	ecx, DWORD PTR y$17[rsp]
	imul	ecx, DWORD PTR [rax]
	mov	eax, ecx
	add	eax, DWORD PTR x$18[rsp]
	mov	DWORD PTR idx$72[rsp], eax
; Line 578
	mov	rax, QWORD PTR width$[rsp]
	mov	ecx, DWORD PTR y$17[rsp]
	imul	ecx, DWORD PTR [rax]
	mov	eax, ecx
	mov	ecx, DWORD PTR x$18[rsp]
	shl	ecx, 2
	lea	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR fdIdx$37[rsp], eax
; Line 579
	mov	eax, DWORD PTR idx$72[rsp]
	mov	rcx, QWORD PTR uncompressedData$[rsp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@406fe00000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv$55[rsp], xmm0
; Line 580
	mov	eax, DWORD PTR fdIdx$37[rsp]
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv$55[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 581
	mov	eax, DWORD PTR fdIdx$37[rsp]
	inc	eax
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv$55[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 582
	mov	eax, DWORD PTR fdIdx$37[rsp]
	add	eax, 2
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv$55[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 583
	mov	eax, DWORD PTR fdIdx$37[rsp]
	add	eax, 3
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 584
	jmp	$LN77@uncompress
$LN78@uncompress:
; Line 585
	jmp	$LN74@uncompress
$LN75@uncompress:
; Line 586
	jmp	$LN72@uncompress
$LN167@uncompress:
; Line 589
	mov	rax, QWORD PTR uncompressedData$[rsp]
	mov	QWORD PTR cpdat$95[rsp], rax
; Line 590
	mov	DWORD PTR y$19[rsp], 0
	jmp	SHORT $LN82@uncompress
$LN80@uncompress:
	mov	eax, DWORD PTR y$19[rsp]
	inc	eax
	mov	DWORD PTR y$19[rsp], eax
$LN82@uncompress:
	mov	rax, QWORD PTR height$[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR y$19[rsp], eax
	jae	$LN81@uncompress
; Line 591
	mov	DWORD PTR x$20[rsp], 0
	jmp	SHORT $LN85@uncompress
$LN83@uncompress:
	mov	eax, DWORD PTR x$20[rsp]
	inc	eax
	mov	DWORD PTR x$20[rsp], eax
$LN85@uncompress:
	mov	rax, QWORD PTR width$[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR x$20[rsp], eax
	jae	$LN84@uncompress
; Line 592
	mov	rax, QWORD PTR width$[rsp]
	mov	ecx, DWORD PTR y$19[rsp]
	imul	ecx, DWORD PTR [rax]
	mov	eax, ecx
	add	eax, DWORD PTR x$20[rsp]
	mov	DWORD PTR idx$73[rsp], eax
; Line 593
	mov	rax, QWORD PTR width$[rsp]
	mov	ecx, DWORD PTR y$19[rsp]
	imul	ecx, DWORD PTR [rax]
	mov	eax, ecx
	mov	ecx, DWORD PTR x$20[rsp]
	shl	ecx, 2
	lea	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR fdIdx$38[rsp], eax
; Line 594
	mov	eax, DWORD PTR idx$73[rsp]
	mov	rcx, QWORD PTR cpdat$95[rsp]
	movzx	eax, WORD PTR [rcx+rax*2]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@40efffe000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv$56[rsp], xmm0
; Line 595
	mov	eax, DWORD PTR fdIdx$38[rsp]
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv$56[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 596
	mov	eax, DWORD PTR fdIdx$38[rsp]
	inc	eax
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv$56[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 597
	mov	eax, DWORD PTR fdIdx$38[rsp]
	add	eax, 2
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv$56[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 598
	mov	eax, DWORD PTR fdIdx$38[rsp]
	add	eax, 3
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 599
	jmp	$LN83@uncompress
$LN84@uncompress:
; Line 600
	jmp	$LN80@uncompress
$LN81@uncompress:
; Line 601
	jmp	SHORT $LN72@uncompress
$LN168@uncompress:
$LN169@uncompress:
$LN170@uncompress:
$LN171@uncompress:
; Line 607
	mov	rcx, QWORD PTR uncompressedData$[rsp]
	call	free
; Line 608
	mov	QWORD PTR uncompressedData$[rsp], 0
$LN72@uncompress:
; Line 612
	jmp	$LN70@uncompress
$LN172@uncompress:
; Line 615
	movzx	eax, BYTE PTR bitDepth$[rsp]
	cmp	eax, 8
	jne	$LN173@uncompress
; Line 616
	mov	DWORD PTR y$21[rsp], 0
	jmp	SHORT $LN88@uncompress
$LN86@uncompress:
	mov	eax, DWORD PTR y$21[rsp]
	inc	eax
	mov	DWORD PTR y$21[rsp], eax
$LN88@uncompress:
	mov	rax, QWORD PTR height$[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR y$21[rsp], eax
	jae	$LN87@uncompress
; Line 617
	mov	DWORD PTR x$22[rsp], 0
	jmp	SHORT $LN91@uncompress
$LN89@uncompress:
	mov	eax, DWORD PTR x$22[rsp]
	inc	eax
	mov	DWORD PTR x$22[rsp], eax
$LN91@uncompress:
	mov	rax, QWORD PTR width$[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR x$22[rsp], eax
	jae	$LN90@uncompress
; Line 618
	mov	rax, QWORD PTR width$[rsp]
	mov	ecx, DWORD PTR y$21[rsp]
	imul	ecx, DWORD PTR [rax]
	mov	eax, ecx
	imul	eax, eax, 3
	imul	ecx, DWORD PTR x$22[rsp], 3
	add	eax, ecx
	mov	DWORD PTR idx$57[rsp], eax
; Line 619
	mov	rax, QWORD PTR width$[rsp]
	mov	ecx, DWORD PTR y$21[rsp]
	imul	ecx, DWORD PTR [rax]
	mov	eax, ecx
	mov	ecx, DWORD PTR x$22[rsp]
	shl	ecx, 2
	lea	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR fdIdx$39[rsp], eax
; Line 620
	mov	eax, DWORD PTR idx$57[rsp]
	mov	eax, eax
	mov	rcx, QWORD PTR uncompressedData$[rsp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@406fe00000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv1$74[rsp], xmm0
; Line 621
	mov	eax, DWORD PTR idx$57[rsp]
	inc	eax
	mov	eax, eax
	mov	rcx, QWORD PTR uncompressedData$[rsp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@406fe00000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv2$75[rsp], xmm0
; Line 622
	mov	eax, DWORD PTR idx$57[rsp]
	add	eax, 2
	mov	eax, eax
	mov	rcx, QWORD PTR uncompressedData$[rsp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@406fe00000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv3$76[rsp], xmm0
; Line 623
	mov	eax, DWORD PTR fdIdx$39[rsp]
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv1$74[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 624
	mov	eax, DWORD PTR fdIdx$39[rsp]
	inc	eax
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv2$75[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 625
	mov	eax, DWORD PTR fdIdx$39[rsp]
	add	eax, 2
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv3$76[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 626
	mov	eax, DWORD PTR fdIdx$39[rsp]
	add	eax, 3
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 627
	jmp	$LN89@uncompress
$LN90@uncompress:
; Line 628
	jmp	$LN86@uncompress
$LN87@uncompress:
; Line 629
	jmp	$LN174@uncompress
$LN173@uncompress:
	movzx	eax, BYTE PTR bitDepth$[rsp]
	cmp	eax, 16
	jne	$LN175@uncompress
; Line 630
	mov	rax, QWORD PTR uncompressedData$[rsp]
	mov	QWORD PTR cpdat$94[rsp], rax
; Line 631
	mov	DWORD PTR y$23[rsp], 0
	jmp	SHORT $LN94@uncompress
$LN92@uncompress:
	mov	eax, DWORD PTR y$23[rsp]
	inc	eax
	mov	DWORD PTR y$23[rsp], eax
$LN94@uncompress:
	mov	rax, QWORD PTR height$[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR y$23[rsp], eax
	jae	$LN93@uncompress
; Line 632
	mov	DWORD PTR x$24[rsp], 0
	jmp	SHORT $LN97@uncompress
$LN95@uncompress:
	mov	eax, DWORD PTR x$24[rsp]
	inc	eax
	mov	DWORD PTR x$24[rsp], eax
$LN97@uncompress:
	mov	rax, QWORD PTR width$[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR x$24[rsp], eax
	jae	$LN96@uncompress
; Line 633
	mov	rax, QWORD PTR width$[rsp]
	mov	ecx, DWORD PTR y$23[rsp]
	imul	ecx, DWORD PTR [rax]
	mov	eax, ecx
	imul	eax, eax, 3
	imul	ecx, DWORD PTR x$24[rsp], 3
	add	eax, ecx
	mov	DWORD PTR idx$58[rsp], eax
; Line 634
	mov	rax, QWORD PTR width$[rsp]
	mov	ecx, DWORD PTR y$23[rsp]
	imul	ecx, DWORD PTR [rax]
	mov	eax, ecx
	mov	ecx, DWORD PTR x$24[rsp]
	shl	ecx, 2
	lea	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR fdIdx$40[rsp], eax
; Line 635
	mov	eax, DWORD PTR idx$58[rsp]
	mov	eax, eax
	mov	rcx, QWORD PTR cpdat$94[rsp]
	movzx	eax, WORD PTR [rcx+rax*2]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@40efffe000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv1$77[rsp], xmm0
; Line 636
	mov	eax, DWORD PTR idx$58[rsp]
	inc	eax
	mov	eax, eax
	mov	rcx, QWORD PTR cpdat$94[rsp]
	movzx	eax, WORD PTR [rcx+rax*2]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@40efffe000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv2$78[rsp], xmm0
; Line 637
	mov	eax, DWORD PTR idx$58[rsp]
	add	eax, 2
	mov	eax, eax
	mov	rcx, QWORD PTR cpdat$94[rsp]
	movzx	eax, WORD PTR [rcx+rax*2]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@40efffe000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv3$79[rsp], xmm0
; Line 638
	mov	eax, DWORD PTR fdIdx$40[rsp]
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv1$77[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 639
	mov	eax, DWORD PTR fdIdx$40[rsp]
	inc	eax
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv2$78[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 640
	mov	eax, DWORD PTR fdIdx$40[rsp]
	add	eax, 2
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv3$79[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 641
	mov	eax, DWORD PTR fdIdx$40[rsp]
	add	eax, 3
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 642
	jmp	$LN95@uncompress
$LN96@uncompress:
; Line 643
	jmp	$LN92@uncompress
$LN93@uncompress:
; Line 644
	jmp	SHORT $LN176@uncompress
$LN175@uncompress:
; Line 645
	mov	rcx, QWORD PTR uncompressedData$[rsp]
	call	free
; Line 646
	mov	QWORD PTR uncompressedData$[rsp], 0
$LN176@uncompress:
$LN174@uncompress:
; Line 648
	jmp	$LN70@uncompress
$LN177@uncompress:
; Line 651
	mov	rcx, QWORD PTR uncompressedData$[rsp]
	call	free
; Line 652
	mov	QWORD PTR uncompressedData$[rsp], 0
; Line 653
	jmp	$LN70@uncompress
$LN178@uncompress:
; Line 656
	mov	rcx, QWORD PTR uncompressedData$[rsp]
	call	free
; Line 657
	mov	QWORD PTR uncompressedData$[rsp], 0
; Line 658
	jmp	$LN70@uncompress
$LN179@uncompress:
; Line 661
	movzx	eax, BYTE PTR bitDepth$[rsp]
	cmp	eax, 8
	jne	$LN180@uncompress
; Line 662
	mov	DWORD PTR y$25[rsp], 0
	jmp	SHORT $LN100@uncompress
$LN98@uncompress:
	mov	eax, DWORD PTR y$25[rsp]
	inc	eax
	mov	DWORD PTR y$25[rsp], eax
$LN100@uncompress:
	mov	rax, QWORD PTR height$[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR y$25[rsp], eax
	jae	$LN99@uncompress
; Line 663
	mov	DWORD PTR x$26[rsp], 0
	jmp	SHORT $LN103@uncompress
$LN101@uncompress:
	mov	eax, DWORD PTR x$26[rsp]
	inc	eax
	mov	DWORD PTR x$26[rsp], eax
$LN103@uncompress:
	mov	rax, QWORD PTR width$[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR x$26[rsp], eax
	jae	$LN102@uncompress
; Line 664
	mov	rax, QWORD PTR width$[rsp]
	mov	ecx, DWORD PTR y$25[rsp]
	imul	ecx, DWORD PTR [rax]
	mov	eax, ecx
	mov	ecx, DWORD PTR x$26[rsp]
	shl	ecx, 2
	lea	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR idx$41[rsp], eax
; Line 665
	mov	rax, QWORD PTR width$[rsp]
	mov	ecx, DWORD PTR y$25[rsp]
	imul	ecx, DWORD PTR [rax]
	mov	eax, ecx
	mov	ecx, DWORD PTR x$26[rsp]
	shl	ecx, 2
	lea	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR fdIdx$42[rsp], eax
; Line 666
	mov	eax, DWORD PTR idx$41[rsp]
	mov	eax, eax
	mov	rcx, QWORD PTR uncompressedData$[rsp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@406fe00000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv1$80[rsp], xmm0
; Line 667
	mov	eax, DWORD PTR idx$41[rsp]
	inc	eax
	mov	eax, eax
	mov	rcx, QWORD PTR uncompressedData$[rsp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@406fe00000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv2$81[rsp], xmm0
; Line 668
	mov	eax, DWORD PTR idx$41[rsp]
	add	eax, 2
	mov	eax, eax
	mov	rcx, QWORD PTR uncompressedData$[rsp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@406fe00000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv3$82[rsp], xmm0
; Line 669
	mov	eax, DWORD PTR idx$41[rsp]
	add	eax, 3
	mov	eax, eax
	mov	rcx, QWORD PTR uncompressedData$[rsp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@406fe00000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv4$83[rsp], xmm0
; Line 670
	mov	eax, DWORD PTR fdIdx$42[rsp]
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv1$80[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 671
	mov	eax, DWORD PTR fdIdx$42[rsp]
	inc	eax
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv2$81[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 672
	mov	eax, DWORD PTR fdIdx$42[rsp]
	add	eax, 2
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv3$82[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 673
	mov	eax, DWORD PTR fdIdx$42[rsp]
	add	eax, 3
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv4$83[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 674
	jmp	$LN101@uncompress
$LN102@uncompress:
; Line 675
	jmp	$LN98@uncompress
$LN99@uncompress:
; Line 676
	jmp	$LN181@uncompress
$LN180@uncompress:
	movzx	eax, BYTE PTR bitDepth$[rsp]
	cmp	eax, 16
	jne	$LN182@uncompress
; Line 677
	mov	rax, QWORD PTR uncompressedData$[rsp]
	mov	QWORD PTR cpdat$64[rsp], rax
; Line 678
	mov	DWORD PTR y$27[rsp], 0
	jmp	SHORT $LN106@uncompress
$LN104@uncompress:
	mov	eax, DWORD PTR y$27[rsp]
	inc	eax
	mov	DWORD PTR y$27[rsp], eax
$LN106@uncompress:
	mov	rax, QWORD PTR height$[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR y$27[rsp], eax
	jae	$LN105@uncompress
; Line 679
	mov	DWORD PTR x$28[rsp], 0
	jmp	SHORT $LN109@uncompress
$LN107@uncompress:
	mov	eax, DWORD PTR x$28[rsp]
	inc	eax
	mov	DWORD PTR x$28[rsp], eax
$LN109@uncompress:
	mov	rax, QWORD PTR width$[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR x$28[rsp], eax
	jae	$LN108@uncompress
; Line 680
	mov	rax, QWORD PTR width$[rsp]
	mov	ecx, DWORD PTR y$27[rsp]
	imul	ecx, DWORD PTR [rax]
	mov	eax, ecx
	mov	ecx, DWORD PTR x$28[rsp]
	shl	ecx, 2
	lea	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR idx$44[rsp], eax
; Line 681
	mov	rax, QWORD PTR width$[rsp]
	mov	ecx, DWORD PTR y$27[rsp]
	imul	ecx, DWORD PTR [rax]
	mov	eax, ecx
	mov	ecx, DWORD PTR x$28[rsp]
	shl	ecx, 2
	lea	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR fdIdx$43[rsp], eax
; Line 682
	mov	eax, DWORD PTR idx$44[rsp]
	mov	eax, eax
	mov	rcx, QWORD PTR cpdat$64[rsp]
	movzx	eax, WORD PTR [rcx+rax*2]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@40efffe000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv1$84[rsp], xmm0
; Line 683
	mov	eax, DWORD PTR idx$44[rsp]
	inc	eax
	mov	eax, eax
	mov	rcx, QWORD PTR cpdat$64[rsp]
	movzx	eax, WORD PTR [rcx+rax*2]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@40efffe000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv2$85[rsp], xmm0
; Line 684
	mov	eax, DWORD PTR idx$44[rsp]
	add	eax, 2
	mov	eax, eax
	mov	rcx, QWORD PTR cpdat$64[rsp]
	movzx	eax, WORD PTR [rcx+rax*2]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@40efffe000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv3$88[rsp], xmm0
; Line 685
	mov	eax, DWORD PTR idx$44[rsp]
	add	eax, 3
	mov	eax, eax
	mov	rcx, QWORD PTR cpdat$64[rsp]
	movzx	eax, WORD PTR [rcx+rax*2]
	cvtsi2ss xmm0, eax
	cvtss2sd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@40efffe000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR pv4$86[rsp], xmm0
; Line 686
	mov	eax, DWORD PTR fdIdx$43[rsp]
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv1$84[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 687
	mov	eax, DWORD PTR fdIdx$43[rsp]
	inc	eax
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv2$85[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 688
	mov	eax, DWORD PTR fdIdx$43[rsp]
	add	eax, 2
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv3$88[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 689
	mov	eax, DWORD PTR fdIdx$43[rsp]
	add	eax, 3
	mov	eax, eax
	mov	rcx, QWORD PTR fullUCData$[rsp]
	movss	xmm0, DWORD PTR pv4$86[rsp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 690
	jmp	$LN107@uncompress
$LN108@uncompress:
; Line 691
	jmp	$LN104@uncompress
$LN105@uncompress:
; Line 692
	jmp	SHORT $LN183@uncompress
$LN182@uncompress:
; Line 693
	mov	rcx, QWORD PTR uncompressedData$[rsp]
	call	free
; Line 694
	mov	QWORD PTR uncompressedData$[rsp], 0
$LN183@uncompress:
$LN181@uncompress:
$LN70@uncompress:
; Line 700
	mov	rcx, QWORD PTR fileData$[rsp]
	call	free
; Line 701
	mov	rcx, QWORD PTR compressedData$[rsp]
	call	free
; Line 702
	mov	rcx, QWORD PTR uncompressedData$[rsp]
	call	free
; Line 703
	mov	rax, QWORD PTR fullUCData$[rsp]
$LN1@uncompress:
$LN184@uncompress:
; Line 704
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 3784				; 00000ec8H
	pop	rdi
	pop	rsi
	ret	0
?uncompressPNG@@YAPEAMPEBDPEAI111@Z ENDP		; uncompressPNG
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
j$1 = 32
i$2 = 36
hufCode$3 = 40
lastIndex$ = 44
data$ = 64
offset$ = 72
pngh$ = 80
?parseHuffmanCodeFromData@@YAIPEAEPEAIPEAUPNGHuffman@@@Z PROC ; parseHuffmanCodeFromData
; File D:\code\sprite_animation_maker\png_extractor.h
; Line 184
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 185
	mov	DWORD PTR lastIndex$[rsp], 0
; Line 186
	mov	rax, QWORD PTR pngh$[rsp]
	mov	eax, DWORD PTR [rax+4]
	mov	DWORD PTR i$2[rsp], eax
	jmp	SHORT $LN4@parseHuffm
$LN2@parseHuffm:
	mov	eax, DWORD PTR i$2[rsp]
	inc	eax
	mov	DWORD PTR i$2[rsp], eax
$LN4@parseHuffm:
	mov	rax, QWORD PTR pngh$[rsp]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR i$2[rsp], eax
	ja	$LN3@parseHuffm
; Line 187
	xor	r9d, r9d
	mov	r8, QWORD PTR offset$[rsp]
	mov	edx, DWORD PTR i$2[rsp]
	mov	rcx, QWORD PTR data$[rsp]
	call	?readBitsFromArrayReversed@@YAIPEAEIPEAI_N@Z ; readBitsFromArrayReversed
	mov	DWORD PTR hufCode$3[rsp], eax
; Line 188
	mov	eax, DWORD PTR lastIndex$[rsp]
	mov	DWORD PTR j$1[rsp], eax
	jmp	SHORT $LN7@parseHuffm
$LN5@parseHuffm:
	mov	eax, DWORD PTR j$1[rsp]
	inc	eax
	mov	DWORD PTR j$1[rsp], eax
$LN7@parseHuffm:
	mov	rax, QWORD PTR pngh$[rsp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR j$1[rsp], eax
	jae	SHORT $LN6@parseHuffm
; Line 189
	mov	eax, DWORD PTR j$1[rsp]
	mov	rcx, QWORD PTR pngh$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	eax, DWORD PTR [rcx+rax*4]
	cmp	DWORD PTR hufCode$3[rsp], eax
	jne	SHORT $LN8@parseHuffm
	mov	eax, DWORD PTR j$1[rsp]
	mov	rcx, QWORD PTR pngh$[rsp]
	mov	rcx, QWORD PTR [rcx+32]
	mov	edx, DWORD PTR i$2[rsp]
	cmp	DWORD PTR [rcx+rax*4], edx
	jne	SHORT $LN8@parseHuffm
; Line 190
	mov	rax, QWORD PTR offset$[rsp]
	mov	eax, DWORD PTR [rax]
	add	eax, DWORD PTR i$2[rsp]
	mov	rcx, QWORD PTR offset$[rsp]
	mov	DWORD PTR [rcx], eax
; Line 191
	mov	eax, DWORD PTR j$1[rsp]
	mov	rcx, QWORD PTR pngh$[rsp]
	mov	rcx, QWORD PTR [rcx+24]
	mov	eax, DWORD PTR [rcx+rax*4]
	jmp	SHORT $LN1@parseHuffm
	jmp	SHORT $LN9@parseHuffm
$LN8@parseHuffm:
; Line 192
	mov	eax, DWORD PTR j$1[rsp]
	mov	rcx, QWORD PTR pngh$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	edx, DWORD PTR hufCode$3[rsp]
	cmp	DWORD PTR [rcx+rax*4], edx
	jbe	SHORT $LN10@parseHuffm
; Line 193
	mov	eax, DWORD PTR j$1[rsp]
	mov	DWORD PTR lastIndex$[rsp], eax
; Line 194
	jmp	SHORT $LN6@parseHuffm
$LN10@parseHuffm:
$LN9@parseHuffm:
; Line 196
	jmp	$LN5@parseHuffm
$LN6@parseHuffm:
; Line 197
	jmp	$LN2@parseHuffm
$LN3@parseHuffm:
; Line 198
	mov	eax, -1					; ffffffffH
$LN1@parseHuffm:
; Line 199
	add	rsp, 56					; 00000038H
	ret	0
?parseHuffmanCodeFromData@@YAIPEAEPEAIPEAUPNGHuffman@@@Z ENDP ; parseHuffmanCodeFromData
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
i$1 = 32
j$2 = 36
len$3 = 40
totalCodesUsed$ = 44
i$4 = 48
mbp1$ = 52
i$5 = 56
i$6 = 60
t$7 = 64
codes$ = 72
code$ = 80
minBitLength$ = 84
maxBitLength$ = 88
values$ = 96
lens$ = 104
b1Count$ = 112
nextCode$ = 120
pngh$ = 128
$T8 = 208
totalCodes$ = 216
lengths$ = 224
maxBits$ = 232
?generatePNGHuffmanFromCodeLengths@@YA?AUPNGHuffman@@IPEAII@Z PROC ; generatePNGHuffmanFromCodeLengths
; File D:\code\sprite_animation_maker\png_extractor.h
; Line 114
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 184				; 000000b8H
; Line 115
	mov	eax, DWORD PTR maxBits$[rsp]
	inc	eax
	mov	DWORD PTR mbp1$[rsp], eax
; Line 116
	mov	eax, DWORD PTR mbp1$[rsp]
	shl	rax, 2
	mov	rcx, rax
	call	malloc
	mov	QWORD PTR b1Count$[rsp], rax
; Line 117
	mov	eax, DWORD PTR mbp1$[rsp]
	shl	rax, 2
	mov	rcx, rax
	call	malloc
	mov	QWORD PTR nextCode$[rsp], rax
; Line 118
	mov	eax, DWORD PTR mbp1$[rsp]
	shl	rax, 2
	mov	r8d, eax
	xor	edx, edx
	mov	rcx, QWORD PTR b1Count$[rsp]
	call	?setMemory@@YAXPEAXDI@Z			; setMemory
; Line 119
	mov	eax, DWORD PTR mbp1$[rsp]
	shl	rax, 2
	mov	r8d, eax
	xor	edx, edx
	mov	rcx, QWORD PTR nextCode$[rsp]
	call	?setMemory@@YAXPEAXDI@Z			; setMemory
; Line 120
	mov	DWORD PTR i$4[rsp], 0
	jmp	SHORT $LN4@generatePN
$LN2@generatePN:
	mov	eax, DWORD PTR i$4[rsp]
	inc	eax
	mov	DWORD PTR i$4[rsp], eax
$LN4@generatePN:
	mov	eax, DWORD PTR totalCodes$[rsp]
	cmp	DWORD PTR i$4[rsp], eax
	jae	SHORT $LN3@generatePN
; Line 121
	mov	eax, DWORD PTR i$4[rsp]
	mov	rcx, QWORD PTR lengths$[rsp]
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	rcx, QWORD PTR b1Count$[rsp]
	mov	eax, DWORD PTR [rcx+rax*4]
	inc	eax
	mov	ecx, DWORD PTR i$4[rsp]
	mov	rdx, QWORD PTR lengths$[rsp]
	mov	ecx, DWORD PTR [rdx+rcx*4]
	mov	rdx, QWORD PTR b1Count$[rsp]
	mov	DWORD PTR [rdx+rcx*4], eax
; Line 122
	jmp	SHORT $LN2@generatePN
$LN3@generatePN:
; Line 124
	mov	DWORD PTR code$[rsp], 0
; Line 125
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR b1Count$[rsp]
	mov	DWORD PTR [rcx+rax], 0
; Line 126
	mov	DWORD PTR i$5[rsp], 1
	jmp	SHORT $LN7@generatePN
$LN5@generatePN:
	mov	eax, DWORD PTR i$5[rsp]
	inc	eax
	mov	DWORD PTR i$5[rsp], eax
$LN7@generatePN:
	mov	eax, DWORD PTR mbp1$[rsp]
	cmp	DWORD PTR i$5[rsp], eax
	jae	SHORT $LN6@generatePN
; Line 127
	mov	eax, DWORD PTR i$5[rsp]
	dec	eax
	mov	eax, eax
	mov	rcx, QWORD PTR b1Count$[rsp]
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	ecx, DWORD PTR code$[rsp]
	add	ecx, eax
	mov	eax, ecx
	shl	eax, 1
	mov	DWORD PTR code$[rsp], eax
; Line 128
	mov	eax, DWORD PTR i$5[rsp]
	mov	rcx, QWORD PTR nextCode$[rsp]
	mov	edx, DWORD PTR code$[rsp]
	mov	DWORD PTR [rcx+rax*4], edx
; Line 129
	jmp	SHORT $LN5@generatePN
$LN6@generatePN:
; Line 131
	mov	eax, DWORD PTR totalCodes$[rsp]
	shl	rax, 2
	mov	rcx, rax
	call	malloc
	mov	QWORD PTR codes$[rsp], rax
; Line 132
	mov	eax, DWORD PTR totalCodes$[rsp]
	shl	rax, 2
	mov	rcx, rax
	call	malloc
	mov	QWORD PTR values$[rsp], rax
; Line 133
	mov	eax, DWORD PTR totalCodes$[rsp]
	shl	rax, 2
	mov	rcx, rax
	call	malloc
	mov	QWORD PTR lens$[rsp], rax
; Line 135
	mov	DWORD PTR minBitLength$[rsp], -1	; ffffffffH
; Line 136
	mov	DWORD PTR maxBitLength$[rsp], 0
; Line 137
	mov	DWORD PTR totalCodesUsed$[rsp], 0
; Line 138
	mov	eax, DWORD PTR totalCodes$[rsp]
	shl	rax, 2
	mov	r8d, eax
	xor	edx, edx
	mov	rcx, QWORD PTR codes$[rsp]
	call	?setMemory@@YAXPEAXDI@Z			; setMemory
; Line 139
	mov	eax, DWORD PTR totalCodes$[rsp]
	shl	rax, 2
	mov	r8d, eax
	xor	edx, edx
	mov	rcx, QWORD PTR values$[rsp]
	call	?setMemory@@YAXPEAXDI@Z			; setMemory
; Line 140
	mov	eax, DWORD PTR totalCodes$[rsp]
	shl	rax, 2
	mov	r8d, eax
	xor	edx, edx
	mov	rcx, QWORD PTR lens$[rsp]
	call	?setMemory@@YAXPEAXDI@Z			; setMemory
; Line 142
	mov	DWORD PTR i$6[rsp], 0
	jmp	SHORT $LN10@generatePN
$LN8@generatePN:
	mov	eax, DWORD PTR i$6[rsp]
	inc	eax
	mov	DWORD PTR i$6[rsp], eax
$LN10@generatePN:
	mov	eax, DWORD PTR totalCodes$[rsp]
	cmp	DWORD PTR i$6[rsp], eax
	jae	$LN9@generatePN
; Line 143
	mov	eax, DWORD PTR i$6[rsp]
	mov	rcx, QWORD PTR lengths$[rsp]
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR len$3[rsp], eax
; Line 144
	cmp	DWORD PTR len$3[rsp], 0
	je	$LN17@generatePN
; Line 145
	mov	eax, DWORD PTR minBitLength$[rsp]
	cmp	DWORD PTR len$3[rsp], eax
	jae	SHORT $LN18@generatePN
	mov	eax, DWORD PTR len$3[rsp]
	mov	DWORD PTR minBitLength$[rsp], eax
$LN18@generatePN:
; Line 146
	mov	eax, DWORD PTR maxBitLength$[rsp]
	cmp	DWORD PTR len$3[rsp], eax
	jbe	SHORT $LN19@generatePN
	mov	eax, DWORD PTR len$3[rsp]
	mov	DWORD PTR maxBitLength$[rsp], eax
$LN19@generatePN:
; Line 147
	mov	eax, DWORD PTR len$3[rsp]
	mov	ecx, DWORD PTR totalCodesUsed$[rsp]
	mov	rdx, QWORD PTR codes$[rsp]
	mov	r8, QWORD PTR nextCode$[rsp]
	mov	eax, DWORD PTR [r8+rax*4]
	mov	DWORD PTR [rdx+rcx*4], eax
; Line 148
	mov	eax, DWORD PTR totalCodesUsed$[rsp]
	mov	rcx, QWORD PTR values$[rsp]
	mov	edx, DWORD PTR i$6[rsp]
	mov	DWORD PTR [rcx+rax*4], edx
; Line 149
	mov	eax, DWORD PTR totalCodesUsed$[rsp]
	mov	rcx, QWORD PTR lens$[rsp]
	mov	edx, DWORD PTR len$3[rsp]
	mov	DWORD PTR [rcx+rax*4], edx
; Line 150
	mov	eax, DWORD PTR totalCodesUsed$[rsp]
	inc	eax
	mov	DWORD PTR totalCodesUsed$[rsp], eax
; Line 151
	mov	eax, DWORD PTR len$3[rsp]
	mov	rcx, QWORD PTR nextCode$[rsp]
	mov	eax, DWORD PTR [rcx+rax*4]
	inc	eax
	mov	ecx, DWORD PTR len$3[rsp]
	mov	rdx, QWORD PTR nextCode$[rsp]
	mov	DWORD PTR [rdx+rcx*4], eax
$LN17@generatePN:
; Line 153
	jmp	$LN8@generatePN
$LN9@generatePN:
; Line 155
	mov	rcx, QWORD PTR b1Count$[rsp]
	call	free
; Line 156
	mov	rcx, QWORD PTR nextCode$[rsp]
	call	free
; Line 158
	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN13@generatePN
$LN11@generatePN:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN13@generatePN:
	mov	eax, DWORD PTR totalCodesUsed$[rsp]
	dec	eax
	cmp	DWORD PTR i$1[rsp], eax
	jae	$LN12@generatePN
; Line 159
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR j$2[rsp], eax
	jmp	SHORT $LN16@generatePN
$LN14@generatePN:
	mov	eax, DWORD PTR j$2[rsp]
	inc	eax
	mov	DWORD PTR j$2[rsp], eax
$LN16@generatePN:
	mov	eax, DWORD PTR totalCodesUsed$[rsp]
	cmp	DWORD PTR j$2[rsp], eax
	jae	$LN15@generatePN
; Line 160
	mov	eax, DWORD PTR i$1[rsp]
	mov	ecx, DWORD PTR j$2[rsp]
	mov	rdx, QWORD PTR codes$[rsp]
	mov	r8, QWORD PTR codes$[rsp]
	mov	ecx, DWORD PTR [r8+rcx*4]
	cmp	DWORD PTR [rdx+rax*4], ecx
	jbe	$LN20@generatePN
; Line 161
	mov	eax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR codes$[rsp]
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR t$7[rsp], eax
; Line 162
	mov	eax, DWORD PTR j$2[rsp]
	mov	ecx, DWORD PTR i$1[rsp]
	mov	rdx, QWORD PTR codes$[rsp]
	mov	r8, QWORD PTR codes$[rsp]
	mov	eax, DWORD PTR [r8+rax*4]
	mov	DWORD PTR [rdx+rcx*4], eax
; Line 163
	mov	eax, DWORD PTR j$2[rsp]
	mov	rcx, QWORD PTR codes$[rsp]
	mov	edx, DWORD PTR t$7[rsp]
	mov	DWORD PTR [rcx+rax*4], edx
; Line 164
	mov	eax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR values$[rsp]
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR t$7[rsp], eax
; Line 165
	mov	eax, DWORD PTR j$2[rsp]
	mov	ecx, DWORD PTR i$1[rsp]
	mov	rdx, QWORD PTR values$[rsp]
	mov	r8, QWORD PTR values$[rsp]
	mov	eax, DWORD PTR [r8+rax*4]
	mov	DWORD PTR [rdx+rcx*4], eax
; Line 166
	mov	eax, DWORD PTR j$2[rsp]
	mov	rcx, QWORD PTR values$[rsp]
	mov	edx, DWORD PTR t$7[rsp]
	mov	DWORD PTR [rcx+rax*4], edx
; Line 167
	mov	eax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR lens$[rsp]
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR t$7[rsp], eax
; Line 168
	mov	eax, DWORD PTR j$2[rsp]
	mov	ecx, DWORD PTR i$1[rsp]
	mov	rdx, QWORD PTR lens$[rsp]
	mov	r8, QWORD PTR lens$[rsp]
	mov	eax, DWORD PTR [r8+rax*4]
	mov	DWORD PTR [rdx+rcx*4], eax
; Line 169
	mov	eax, DWORD PTR j$2[rsp]
	mov	rcx, QWORD PTR lens$[rsp]
	mov	edx, DWORD PTR t$7[rsp]
	mov	DWORD PTR [rcx+rax*4], edx
$LN20@generatePN:
; Line 171
	jmp	$LN14@generatePN
$LN15@generatePN:
; Line 172
	jmp	$LN11@generatePN
$LN12@generatePN:
; Line 174
	lea	rax, QWORD PTR pngh$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 40					; 00000028H
	rep stosb
; Line 175
	mov	eax, DWORD PTR totalCodesUsed$[rsp]
	mov	DWORD PTR pngh$[rsp], eax
; Line 176
	mov	rax, QWORD PTR codes$[rsp]
	mov	QWORD PTR pngh$[rsp+16], rax
; Line 177
	mov	rax, QWORD PTR values$[rsp]
	mov	QWORD PTR pngh$[rsp+24], rax
; Line 178
	mov	rax, QWORD PTR lens$[rsp]
	mov	QWORD PTR pngh$[rsp+32], rax
; Line 179
	mov	eax, DWORD PTR minBitLength$[rsp]
	mov	DWORD PTR pngh$[rsp+4], eax
; Line 180
	mov	eax, DWORD PTR maxBitLength$[rsp]
	mov	DWORD PTR pngh$[rsp+8], eax
; Line 181
	lea	rax, QWORD PTR pngh$[rsp]
	mov	rdi, QWORD PTR $T8[rsp]
	mov	rsi, rax
	mov	ecx, 40					; 00000028H
	rep movsb
	mov	rax, QWORD PTR $T8[rsp]
; Line 182
	add	rsp, 184				; 000000b8H
	pop	rdi
	pop	rsi
	ret	0
?generatePNGHuffmanFromCodeLengths@@YA?AUPNGHuffman@@IPEAII@Z ENDP ; generatePNGHuffmanFromCodeLengths
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pngh$ = 48
?clearPNGHuffman@@YAXPEAUPNGHuffman@@@Z PROC		; clearPNGHuffman
; File D:\code\sprite_animation_maker\png_extractor.h
; Line 99
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 100
	mov	rax, QWORD PTR pngh$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN2@clearPNGHu
; Line 101
	mov	rax, QWORD PTR pngh$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	free
; Line 102
	mov	rax, QWORD PTR pngh$[rsp]
	mov	QWORD PTR [rax+16], 0
$LN2@clearPNGHu:
; Line 104
	mov	rax, QWORD PTR pngh$[rsp]
	cmp	QWORD PTR [rax+24], 0
	je	SHORT $LN3@clearPNGHu
; Line 105
	mov	rax, QWORD PTR pngh$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	free
; Line 106
	mov	rax, QWORD PTR pngh$[rsp]
	mov	QWORD PTR [rax+24], 0
$LN3@clearPNGHu:
; Line 108
	mov	rax, QWORD PTR pngh$[rsp]
	cmp	QWORD PTR [rax+32], 0
	je	SHORT $LN4@clearPNGHu
; Line 109
	mov	rax, QWORD PTR pngh$[rsp]
	mov	rcx, QWORD PTR [rax+32]
	call	free
; Line 110
	mov	rax, QWORD PTR pngh$[rsp]
	mov	QWORD PTR [rax+32], 0
$LN4@clearPNGHu:
; Line 112
	add	rsp, 40					; 00000028H
	ret	0
?clearPNGHuffman@@YAXPEAUPNGHuffman@@@Z ENDP		; clearPNGHuffman
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
bitIndex$ = 0
bit$1 = 1
i$2 = 4
byteIndex$ = 8
result$ = 12
array$ = 32
numBits$ = 40
offset$ = 48
increaseOffset$ = 56
?readBitsFromArrayReversed@@YAIPEAEIPEAI_N@Z PROC	; readBitsFromArrayReversed
; File D:\code\sprite_animation_maker\png_extractor.h
; Line 80
	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
; Line 81
	mov	DWORD PTR result$[rsp], 0
; Line 82
	xor	edx, edx
	mov	rax, QWORD PTR offset$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	ecx, 8
	div	ecx
	mov	DWORD PTR byteIndex$[rsp], eax
; Line 83
	xor	edx, edx
	mov	rax, QWORD PTR offset$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	ecx, 8
	div	ecx
	mov	eax, edx
	mov	BYTE PTR bitIndex$[rsp], al
; Line 85
	mov	DWORD PTR i$2[rsp], 0
	jmp	SHORT $LN4@readBitsFr
$LN2@readBitsFr:
	mov	eax, DWORD PTR i$2[rsp]
	inc	eax
	mov	DWORD PTR i$2[rsp], eax
$LN4@readBitsFr:
	mov	eax, DWORD PTR numBits$[rsp]
	cmp	DWORD PTR i$2[rsp], eax
	jae	SHORT $LN3@readBitsFr
; Line 86
	mov	eax, DWORD PTR byteIndex$[rsp]
	mov	rcx, QWORD PTR array$[rsp]
	movzx	eax, BYTE PTR [rcx+rax]
	movzx	ecx, BYTE PTR bitIndex$[rsp]
	sar	eax, cl
	and	eax, 1
	mov	BYTE PTR bit$1[rsp], al
; Line 87
	movzx	eax, BYTE PTR bit$1[rsp]
	mov	ecx, DWORD PTR i$2[rsp]
	mov	edx, DWORD PTR numBits$[rsp]
	sub	edx, ecx
	mov	ecx, edx
	dec	ecx
	shl	eax, cl
	mov	ecx, DWORD PTR result$[rsp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR result$[rsp], eax
; Line 88
	movzx	eax, BYTE PTR bitIndex$[rsp]
	inc	al
	mov	BYTE PTR bitIndex$[rsp], al
; Line 89
	movzx	eax, BYTE PTR bitIndex$[rsp]
	cdq
	and	edx, 7
	add	eax, edx
	and	eax, 7
	sub	eax, edx
	test	eax, eax
	jne	SHORT $LN5@readBitsFr
; Line 90
	mov	BYTE PTR bitIndex$[rsp], 0
; Line 91
	mov	eax, DWORD PTR byteIndex$[rsp]
	inc	eax
	mov	DWORD PTR byteIndex$[rsp], eax
$LN5@readBitsFr:
; Line 93
	jmp	SHORT $LN2@readBitsFr
$LN3@readBitsFr:
; Line 95
	movzx	eax, BYTE PTR increaseOffset$[rsp]
	test	eax, eax
	je	SHORT $LN6@readBitsFr
	mov	rax, QWORD PTR offset$[rsp]
	mov	eax, DWORD PTR [rax]
	add	eax, DWORD PTR numBits$[rsp]
	mov	rcx, QWORD PTR offset$[rsp]
	mov	DWORD PTR [rcx], eax
$LN6@readBitsFr:
; Line 96
	mov	eax, DWORD PTR result$[rsp]
; Line 97
	add	rsp, 24
	ret	0
?readBitsFromArrayReversed@@YAIPEAEIPEAI_N@Z ENDP	; readBitsFromArrayReversed
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
bitIndex$ = 0
bit$1 = 1
i$2 = 4
byteIndex$ = 8
result$ = 12
array$ = 32
numBits$ = 40
offset$ = 48
increaseOffset$ = 56
?readBitsFromArray@@YAIPEAEIPEAI_N@Z PROC		; readBitsFromArray
; File D:\code\sprite_animation_maker\png_extractor.h
; Line 61
	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
; Line 62
	mov	DWORD PTR result$[rsp], 0
; Line 63
	xor	edx, edx
	mov	rax, QWORD PTR offset$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	ecx, 8
	div	ecx
	mov	DWORD PTR byteIndex$[rsp], eax
; Line 64
	xor	edx, edx
	mov	rax, QWORD PTR offset$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	ecx, 8
	div	ecx
	mov	eax, edx
	mov	BYTE PTR bitIndex$[rsp], al
; Line 66
	mov	DWORD PTR i$2[rsp], 0
	jmp	SHORT $LN4@readBitsFr
$LN2@readBitsFr:
	mov	eax, DWORD PTR i$2[rsp]
	inc	eax
	mov	DWORD PTR i$2[rsp], eax
$LN4@readBitsFr:
	mov	eax, DWORD PTR numBits$[rsp]
	cmp	DWORD PTR i$2[rsp], eax
	jae	SHORT $LN3@readBitsFr
; Line 67
	mov	eax, DWORD PTR byteIndex$[rsp]
	mov	rcx, QWORD PTR array$[rsp]
	movzx	eax, BYTE PTR [rcx+rax]
	movzx	ecx, BYTE PTR bitIndex$[rsp]
	sar	eax, cl
	and	eax, 1
	mov	BYTE PTR bit$1[rsp], al
; Line 68
	movzx	eax, BYTE PTR bit$1[rsp]
	mov	ecx, DWORD PTR i$2[rsp]
	shl	eax, cl
	mov	ecx, DWORD PTR result$[rsp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR result$[rsp], eax
; Line 69
	movzx	eax, BYTE PTR bitIndex$[rsp]
	inc	al
	mov	BYTE PTR bitIndex$[rsp], al
; Line 70
	movzx	eax, BYTE PTR bitIndex$[rsp]
	cdq
	and	edx, 7
	add	eax, edx
	and	eax, 7
	sub	eax, edx
	test	eax, eax
	jne	SHORT $LN5@readBitsFr
; Line 71
	mov	BYTE PTR bitIndex$[rsp], 0
; Line 72
	mov	eax, DWORD PTR byteIndex$[rsp]
	inc	eax
	mov	DWORD PTR byteIndex$[rsp], eax
$LN5@readBitsFr:
; Line 74
	jmp	SHORT $LN2@readBitsFr
$LN3@readBitsFr:
; Line 76
	movzx	eax, BYTE PTR increaseOffset$[rsp]
	test	eax, eax
	je	SHORT $LN6@readBitsFr
	mov	rax, QWORD PTR offset$[rsp]
	mov	eax, DWORD PTR [rax]
	add	eax, DWORD PTR numBits$[rsp]
	mov	rcx, QWORD PTR offset$[rsp]
	mov	DWORD PTR [rcx], eax
$LN6@readBitsFr:
; Line 77
	mov	eax, DWORD PTR result$[rsp]
; Line 78
	add	rsp, 24
	ret	0
?readBitsFromArray@@YAIPEAEIPEAI_N@Z ENDP		; readBitsFromArray
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
memPtr$ = 0
mem$ = 32
value$ = 40
size$ = 48
?setMemory@@YAXPEAXDI@Z PROC				; setMemory
; File D:\code\sprite_animation_maker\png_extractor.h
; Line 52
	mov	DWORD PTR [rsp+24], r8d
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
; Line 53
	mov	rax, QWORD PTR mem$[rsp]
	mov	QWORD PTR memPtr$[rsp], rax
$LN2@setMemory:
; Line 54
	cmp	DWORD PTR size$[rsp], 0
	je	SHORT $LN3@setMemory
; Line 55
	mov	rax, QWORD PTR memPtr$[rsp]
	movzx	ecx, BYTE PTR value$[rsp]
	mov	BYTE PTR [rax], cl
; Line 56
	mov	rax, QWORD PTR memPtr$[rsp]
	inc	rax
	mov	QWORD PTR memPtr$[rsp], rax
; Line 57
	mov	eax, DWORD PTR size$[rsp]
	dec	eax
	mov	DWORD PTR size$[rsp], eax
; Line 58
	jmp	SHORT $LN2@setMemory
$LN3@setMemory:
; Line 59
	add	rsp, 24
	ret	0
?setMemory@@YAXPEAXDI@Z ENDP				; setMemory
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
d$ = 0
s$ = 8
dest$ = 32
src$ = 40
amt$ = 48
?copyMemory@@YAXPEAX0_K@Z PROC				; copyMemory
; File D:\code\sprite_animation_maker\png_extractor.h
; Line 41
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
; Line 42
	mov	rax, QWORD PTR dest$[rsp]
	mov	QWORD PTR d$[rsp], rax
; Line 43
	mov	rax, QWORD PTR src$[rsp]
	mov	QWORD PTR s$[rsp], rax
$LN2@copyMemory:
; Line 44
	cmp	QWORD PTR amt$[rsp], 0
	je	SHORT $LN3@copyMemory
; Line 45
	mov	rax, QWORD PTR d$[rsp]
	mov	rcx, QWORD PTR s$[rsp]
	movzx	ecx, BYTE PTR [rcx]
	mov	BYTE PTR [rax], cl
; Line 46
	mov	rax, QWORD PTR d$[rsp]
	inc	rax
	mov	QWORD PTR d$[rsp], rax
; Line 47
	mov	rax, QWORD PTR s$[rsp]
	inc	rax
	mov	QWORD PTR s$[rsp], rax
; Line 48
	mov	rax, QWORD PTR amt$[rsp]
	dec	rax
	mov	QWORD PTR amt$[rsp], rax
; Line 49
	jmp	SHORT $LN2@copyMemory
$LN3@copyMemory:
; Line 50
	add	rsp, 24
	ret	0
?copyMemory@@YAXPEAX0_K@Z ENDP				; copyMemory
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT vsprintf
_TEXT	SEGMENT
_Buffer$ = 64
_Format$ = 72
_ArgList$ = 80
vsprintf PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 1473
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 1474
	mov	rax, QWORD PTR _ArgList$[rsp]
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8, QWORD PTR _Format$[rsp]
	mov	rdx, -1
	mov	rcx, QWORD PTR _Buffer$[rsp]
	call	_vsnprintf_l
; Line 1475
	add	rsp, 56					; 00000038H
	ret	0
vsprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _vsnprintf_l
_TEXT	SEGMENT
_Result$ = 48
tv74 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_Locale$ = 104
_ArgList$ = 112
_vsnprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 1391
$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
; Line 1392
	call	__local_stdio_printf_options
	mov	rax, QWORD PTR [rax]
	or	rax, 1
	mov	rcx, QWORD PTR _ArgList$[rsp]
	mov	QWORD PTR [rsp+40], rcx
	mov	rcx, QWORD PTR _Locale$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Format$[rsp]
	mov	r8, QWORD PTR _BufferCount$[rsp]
	mov	rdx, QWORD PTR _Buffer$[rsp]
	mov	rcx, rax
	call	__stdio_common_vsprintf
	mov	DWORD PTR _Result$[rsp], eax
; Line 1396
	cmp	DWORD PTR _Result$[rsp], 0
	jge	SHORT $LN3@vsnprintf_
	mov	DWORD PTR tv74[rsp], -1
	jmp	SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
	mov	eax, DWORD PTR _Result$[rsp]
	mov	DWORD PTR tv74[rsp], eax
$LN4@vsnprintf_:
	mov	eax, DWORD PTR tv74[rsp]
; Line 1397
	add	rsp, 72					; 00000048H
	ret	0
_vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT printf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 40
_Format$ = 64
printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 956
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	sub	rsp, 56					; 00000038H
; Line 959
	lea	rax, QWORD PTR _Format$[rsp+8]
	mov	QWORD PTR _ArgList$[rsp], rax
; Line 960
	mov	ecx, 1
	call	__acrt_iob_func
	mov	r9, QWORD PTR _ArgList$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Format$[rsp]
	mov	rcx, rax
	call	_vfprintf_l
	mov	DWORD PTR _Result$[rsp], eax
; Line 961
	mov	QWORD PTR _ArgList$[rsp], 0
; Line 962
	mov	eax, DWORD PTR _Result$[rsp]
; Line 963
	add	rsp, 56					; 00000038H
	ret	0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 644
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 645
	call	__local_stdio_printf_options
	mov	rcx, QWORD PTR _ArgList$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Locale$[rsp]
	mov	r8, QWORD PTR _Format$[rsp]
	mov	rdx, QWORD PTR _Stream$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	__stdio_common_vfprintf
; Line 646
	add	rsp, 56					; 00000038H
	ret	0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
; Line 92
	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
strings$ = 64
toggle$ = 72
count$ = 80
x$ = 88
y$ = 96
w$ = 104
h$ = 112
?toggleSwitch@@YAXPEAPEADPEAIIMMMM@Z PROC		; toggleSwitch
; File D:\code\sprite_animation_maker\gui.h
; Line 606
$LN4:
	movss	DWORD PTR [rsp+32], xmm3
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 607
	mov	rax, QWORD PTR toggle$[rsp]
	mov	eax, DWORD PTR [rax]
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rcx, QWORD PTR strings$[rsp]
	mov	rcx, QWORD PTR [rcx+rax*8]
	call	?button@@YA_NPEADMMMM@Z			; button
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@toggleSwit
; Line 608
	mov	rax, QWORD PTR toggle$[rsp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	xor	edx, edx
	div	DWORD PTR count$[rsp]
	mov	eax, edx
	mov	rcx, QWORD PTR toggle$[rsp]
	mov	DWORD PTR [rcx], eax
$LN2@toggleSwit:
; Line 610
	movss	xmm3, DWORD PTR __real@3e800000
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3f800000
	xorps	xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 611
	movss	xmm3, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1296]
; Line 612
	add	rsp, 56					; 00000038H
	ret	0
?toggleSwitch@@YAXPEAPEADPEAIIMMMM@Z ENDP		; toggleSwitch
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
result$ = 48
ssz$ = 52
hssz$ = 56
tv224 = 60
tv226 = 64
tv245 = 68
th$ = 72
tw$ = 76
$T1 = 80
color$ = 88
color1$ = 104
color2$ = 120
__$ArrayPad$ = 136
text$ = 160
x$ = 168
y$ = 176
w$ = 184
h$ = 192
?button@@YA_NPEADMMMM@Z PROC				; button
; File D:\code\sprite_animation_maker\gui.h
; Line 553
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 152				; 00000098H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 554
	mov	BYTE PTR result$[rsp], 0
; Line 556
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR color1$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR color1$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR color1$[rsp+8], xmm0
; Line 557
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR color2$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR color2$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR color2$[rsp+8], xmm0
; Line 558
	movss	xmm0, DWORD PTR __real@3f333333
	movss	DWORD PTR color$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f333333
	movss	DWORD PTR color$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3f333333
	movss	DWORD PTR color$[rsp+8], xmm0
; Line 559
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rcx, QWORD PTR [rax+1172]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	movzx	eax, al
	test	eax, eax
	je	$LN2@button
; Line 560
	mov	eax, 4
	imul	rax, rax, 0
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR color$[rsp+rax], xmm0
; Line 561
	mov	eax, 4
	imul	rax, rax, 1
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR color$[rsp+rax], xmm0
; Line 562
	mov	eax, 4
	imul	rax, rax, 2
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR color$[rsp+rax], xmm0
; Line 564
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1666]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rcx+rax+1152]
	test	eax, eax
	je	$LN3@button
; Line 565
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	rcx, QWORD PTR [rax+65536]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	movzx	eax, al
	test	eax, eax
	je	$LN5@button
; Line 566
	mov	eax, 4
	imul	rax, rax, 0
	movss	xmm0, DWORD PTR __real@3f333333
	movss	DWORD PTR color$[rsp+rax], xmm0
; Line 567
	mov	eax, 4
	imul	rax, rax, 1
	movss	xmm0, DWORD PTR __real@3f333333
	movss	DWORD PTR color$[rsp+rax], xmm0
; Line 568
	mov	eax, 4
	imul	rax, rax, 2
	movss	xmm0, DWORD PTR __real@3f333333
	movss	DWORD PTR color$[rsp+rax], xmm0
; Line 569
	mov	eax, 4
	imul	rax, rax, 0
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR color1$[rsp+rax], xmm0
; Line 570
	mov	eax, 4
	imul	rax, rax, 1
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR color1$[rsp+rax], xmm0
; Line 571
	mov	eax, 4
	imul	rax, rax, 2
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR color1$[rsp+rax], xmm0
; Line 572
	mov	eax, 4
	imul	rax, rax, 0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR color2$[rsp+rax], xmm0
; Line 573
	mov	eax, 4
	imul	rax, rax, 1
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR color2$[rsp+rax], xmm0
; Line 574
	mov	eax, 4
	imul	rax, rax, 2
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR color2$[rsp+rax], xmm0
$LN5@button:
; Line 575
	jmp	$LN4@button
$LN3@button:
; Line 576
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65571]
	test	eax, eax
	je	SHORT $LN6@button
; Line 577
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	rcx, QWORD PTR [rax+65536]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@button
; Line 578
	mov	BYTE PTR result$[rsp], 1
; Line 579
	movss	xmm2, DWORD PTR __real@bf800000
	movss	xmm1, DWORD PTR __real@bf800000
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0Vector2@@QEAA@MM@Z			; Vector2::Vector2
	mov	rcx, QWORD PTR ?gui@@3PEAUGUI@@EA
	add	rcx, 65536				; 00010000H
	mov	rdx, QWORD PTR [rax]
	call	??4Vector2@@QEAAXT0@@Z			; Vector2::operator=
$LN7@button:
$LN6@button:
$LN4@button:
$LN2@button:
; Line 584
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fa999999999999a
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ssz$[rsp], xmm0
; Line 585
	cvtss2sd xmm0, DWORD PTR ssz$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR hssz$[rsp], xmm0
; Line 587
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1352]
; Line 588
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fd51eb851eb851f
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1360]
; Line 589
	lea	r8, QWORD PTR th$[rsp]
	lea	rdx, QWORD PTR tw$[rsp]
	mov	rcx, QWORD PTR text$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1408]
; Line 590
	mov	eax, 4
	imul	rax, rax, 2
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	edx, 4
	imul	rdx, rdx, 0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR color$[rsp+rax]
	movss	xmm1, DWORD PTR color$[rsp+rcx]
	movss	xmm0, DWORD PTR color$[rsp+rdx]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 591
	movss	xmm3, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1296]
; Line 592
	movss	xmm0, DWORD PTR ssz$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1352]
; Line 593
	mov	eax, 4
	imul	rax, rax, 2
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	edx, 4
	imul	rdx, rdx, 0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR color1$[rsp+rax]
	movss	xmm1, DWORD PTR color1$[rsp+rcx]
	movss	xmm0, DWORD PTR color1$[rsp+rdx]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 594
	movss	xmm0, DWORD PTR y$[rsp]
	addss	xmm0, DWORD PTR h$[rsp]
	movaps	xmm3, xmm0
	movss	xmm2, DWORD PTR x$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 595
	movss	xmm0, DWORD PTR y$[rsp]
	addss	xmm0, DWORD PTR h$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	addss	xmm1, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	addss	xmm2, DWORD PTR h$[rsp]
	movss	DWORD PTR tv224[rsp], xmm2
	movss	xmm3, DWORD PTR x$[rsp]
	subss	xmm3, DWORD PTR hssz$[rsp]
	movss	DWORD PTR tv226[rsp], xmm3
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv224[rsp]
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR tv226[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 596
	mov	eax, 4
	imul	rax, rax, 2
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	edx, 4
	imul	rdx, rdx, 0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR color2$[rsp+rax]
	movss	xmm1, DWORD PTR color2$[rsp+rcx]
	movss	xmm0, DWORD PTR color2$[rsp+rdx]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 597
	movss	xmm0, DWORD PTR x$[rsp]
	addss	xmm0, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	addss	xmm1, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR x$[rsp]
	addss	xmm2, DWORD PTR w$[rsp]
	movss	DWORD PTR tv245[rsp], xmm2
	movss	xmm3, DWORD PTR y$[rsp]
	movaps	xmm2, xmm0
	movss	xmm0, DWORD PTR tv245[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 598
	movss	xmm0, DWORD PTR x$[rsp]
	addss	xmm0, DWORD PTR w$[rsp]
	addss	xmm0, DWORD PTR hssz$[rsp]
	movss	xmm3, DWORD PTR y$[rsp]
	movaps	xmm2, xmm0
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 600
	movss	xmm3, DWORD PTR __real@3f800000
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 601
	movss	xmm0, DWORD PTR h$[rsp]
	divss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR y$[rsp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR th$[rsp]
	divss	xmm1, DWORD PTR __real@40000000
	subss	xmm0, xmm1
	movss	xmm1, DWORD PTR w$[rsp]
	divss	xmm1, DWORD PTR __real@40000000
	movss	xmm2, DWORD PTR x$[rsp]
	addss	xmm2, xmm1
	movaps	xmm1, xmm2
	movss	xmm2, DWORD PTR tw$[rsp]
	divss	xmm2, DWORD PTR __real@40000000
	subss	xmm1, xmm2
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR text$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1328]
; Line 603
	movzx	eax, BYTE PTR result$[rsp]
; Line 604
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 152				; 00000098H
	ret	0
?button@@YA_NPEADMMMM@Z ENDP				; button
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
result$ = 48
active$ = 49
bufLen$ = 52
buffer$ = 56
tv74 = 64
tv250 = 68
tw$ = 72
tx$ = 76
hssz$ = 80
ssz$ = 84
th$ = 88
ty$ = 92
tv362 = 96
tv364 = 100
tv383 = 104
color1$ = 112
color2$ = 128
__$ArrayPad$ = 144
v$ = 176
x$ = 184
y$ = 192
w$ = 200
h$ = 208
?f32Input@@YA_NPEAMMMMM@Z PROC				; f32Input
; File D:\code\sprite_animation_maker\gui.h
; Line 243
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 168				; 000000a8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 244
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	eax, DWORD PTR [rax+65560]
	imul	rax, rax, 256				; 00000100H
	mov	rcx, QWORD PTR ?gui@@3PEAUGUI@@EA
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR buffer$[rsp], rax
; Line 245
	mov	rcx, QWORD PTR buffer$[rsp]
	call	?getLength@@YAIPEAD@Z			; getLength
	mov	DWORD PTR bufLen$[rsp], eax
; Line 247
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR color1$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR color1$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR color1$[rsp+8], xmm0
; Line 248
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR color2$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR color2$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR color2$[rsp+8], xmm0
; Line 250
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	rcx, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	ecx, DWORD PTR [rcx+65560]
	cmp	DWORD PTR [rax+65564], ecx
	jne	SHORT $LN34@f32Input
	mov	DWORD PTR tv74[rsp], 1
	jmp	SHORT $LN35@f32Input
$LN34@f32Input:
	mov	DWORD PTR tv74[rsp], 0
$LN35@f32Input:
	movzx	eax, BYTE PTR tv74[rsp]
	mov	BYTE PTR active$[rsp], al
; Line 251
	mov	BYTE PTR result$[rsp], 0
; Line 252
	movzx	eax, BYTE PTR active$[rsp]
	test	eax, eax
	je	$LN2@f32Input
; Line 253
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1168]
	test	eax, eax
	je	$LN4@f32Input
; Line 255
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movsx	eax, BYTE PTR [rax+1169]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN8@f32Input
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movsx	eax, BYTE PTR [rax+1169]
	cmp	eax, 57					; 00000039H
	jle	SHORT $LN7@f32Input
$LN8@f32Input:
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movsx	eax, BYTE PTR [rax+1169]
	cmp	eax, 45					; 0000002dH
	je	SHORT $LN7@f32Input
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movsx	eax, BYTE PTR [rax+1169]
	cmp	eax, 43					; 0000002bH
	je	SHORT $LN7@f32Input
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movsx	eax, BYTE PTR [rax+1169]
	cmp	eax, 46					; 0000002eH
	jne	$LN5@f32Input
$LN7@f32Input:
; Line 258
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65575]
	test	eax, eax
	je	SHORT $LN9@f32Input
; Line 259
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR buffer$[rsp]
	mov	rdx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	edx, BYTE PTR [rdx+1169]
	mov	BYTE PTR [rcx+rax], dl
; Line 260
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR buffer$[rsp]
	mov	BYTE PTR [rcx+rax], 0
; Line 261
	mov	DWORD PTR bufLen$[rsp], 1
; Line 262
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65575], 0
; Line 263
	jmp	SHORT $LN10@f32Input
$LN9@f32Input:
; Line 264
	mov	eax, DWORD PTR bufLen$[rsp]
	mov	rcx, QWORD PTR buffer$[rsp]
	mov	rdx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	edx, BYTE PTR [rdx+1169]
	mov	BYTE PTR [rcx+rax], dl
	mov	eax, DWORD PTR bufLen$[rsp]
	inc	eax
	mov	DWORD PTR bufLen$[rsp], eax
; Line 265
	mov	eax, DWORD PTR bufLen$[rsp]
	mov	rcx, QWORD PTR buffer$[rsp]
	mov	BYTE PTR [rcx+rax], 0
$LN10@f32Input:
; Line 266
	jmp	$LN6@f32Input
$LN5@f32Input:
; Line 267
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movsx	eax, BYTE PTR [rax+1169]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	ecx, WORD PTR [rcx+1640]
	cmp	eax, ecx
	jne	$LN11@f32Input
; Line 268
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65575]
	test	eax, eax
	je	SHORT $LN13@f32Input
; Line 269
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR buffer$[rsp]
	mov	BYTE PTR [rcx+rax], 0
; Line 270
	mov	DWORD PTR bufLen$[rsp], 0
; Line 271
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65575], 0
; Line 272
	jmp	SHORT $LN14@f32Input
$LN13@f32Input:
; Line 273
	cmp	DWORD PTR bufLen$[rsp], 0
	jbe	SHORT $LN15@f32Input
; Line 274
	mov	eax, DWORD PTR bufLen$[rsp]
	dec	eax
	mov	DWORD PTR bufLen$[rsp], eax
	mov	eax, DWORD PTR bufLen$[rsp]
	mov	rcx, QWORD PTR buffer$[rsp]
	mov	BYTE PTR [rcx+rax], 0
; Line 275
	jmp	SHORT $LN16@f32Input
$LN15@f32Input:
; Line 276
	mov	rax, QWORD PTR v$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0
; Line 277
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR buffer$[rsp]
	mov	BYTE PTR [rcx+rax], 0
$LN16@f32Input:
$LN14@f32Input:
; Line 279
	jmp	$LN12@f32Input
$LN11@f32Input:
; Line 280
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movsx	eax, BYTE PTR [rax+1169]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	ecx, WORD PTR [rcx+1634]
	cmp	eax, ecx
	jne	SHORT $LN17@f32Input
; Line 281
	mov	BYTE PTR result$[rsp], 1
; Line 282
	mov	rcx, QWORD PTR buffer$[rsp]
	call	?stringToF32@@YAMPEBD@Z			; stringToF32
	mov	rax, QWORD PTR v$[rsp]
	movss	DWORD PTR [rax], xmm0
; Line 283
	mov	rax, QWORD PTR v$[rsp]
	cvtss2sd xmm0, DWORD PTR [rax]
	movaps	xmm2, xmm0
	movq	r8, xmm2
	lea	rdx, OFFSET FLAT:$SG27718
	mov	rcx, QWORD PTR buffer$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1368]
; Line 284
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65575], 0
; Line 285
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	DWORD PTR [rax+65564], -1		; ffffffffH
; Line 286
	jmp	$LN18@f32Input
$LN17@f32Input:
; Line 287
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movsx	eax, BYTE PTR [rax+1169]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	ecx, WORD PTR [rcx+1646]
	cmp	eax, ecx
	jne	SHORT $LN19@f32Input
; Line 288
	mov	BYTE PTR result$[rsp], 1
; Line 289
	mov	rcx, QWORD PTR buffer$[rsp]
	call	?stringToF32@@YAMPEBD@Z			; stringToF32
	mov	rax, QWORD PTR v$[rsp]
	movss	DWORD PTR [rax], xmm0
; Line 290
	mov	rax, QWORD PTR v$[rsp]
	cvtss2sd xmm0, DWORD PTR [rax]
	movaps	xmm2, xmm0
	movq	r8, xmm2
	lea	rdx, OFFSET FLAT:$SG27720
	mov	rcx, QWORD PTR buffer$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1368]
; Line 291
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65575], 1
; Line 292
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	eax, DWORD PTR [rax+65564]
	inc	eax
	mov	rcx, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	DWORD PTR [rcx+65564], eax
$LN19@f32Input:
$LN18@f32Input:
$LN12@f32Input:
$LN6@f32Input:
; Line 295
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1168], 0
$LN4@f32Input:
; Line 298
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65569]
	test	eax, eax
	je	$LN20@f32Input
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rcx, QWORD PTR [rax+1172]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN20@f32Input
; Line 299
	mov	BYTE PTR result$[rsp], 1
; Line 300
	mov	rcx, QWORD PTR buffer$[rsp]
	call	?stringToF32@@YAMPEBD@Z			; stringToF32
	mov	rax, QWORD PTR v$[rsp]
	movss	DWORD PTR [rax], xmm0
; Line 301
	mov	rax, QWORD PTR v$[rsp]
	cvtss2sd xmm0, DWORD PTR [rax]
	movaps	xmm2, xmm0
	movq	r8, xmm2
	lea	rdx, OFFSET FLAT:$SG27722
	mov	rcx, QWORD PTR buffer$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1368]
; Line 302
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65575], 0
; Line 303
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	DWORD PTR [rax+65564], -1		; ffffffffH
$LN20@f32Input:
; Line 304
	jmp	SHORT $LN3@f32Input
$LN2@f32Input:
; Line 305
	cmp	DWORD PTR bufLen$[rsp], 0
	je	SHORT $LN22@f32Input
	mov	rcx, QWORD PTR buffer$[rsp]
	call	?stringToF32@@YAMPEBD@Z			; stringToF32
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm1, DWORD PTR [rax]
	ucomiss	xmm1, xmm0
	jp	SHORT $LN38@f32Input
	je	SHORT $LN21@f32Input
$LN38@f32Input:
$LN22@f32Input:
; Line 306
	mov	rax, QWORD PTR v$[rsp]
	cvtss2sd xmm0, DWORD PTR [rax]
	movaps	xmm2, xmm0
	movq	r8, xmm2
	lea	rdx, OFFSET FLAT:$SG27725
	mov	rcx, QWORD PTR buffer$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1368]
$LN21@f32Input:
$LN3@f32Input:
; Line 309
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65569]
	test	eax, eax
	je	$LN23@f32Input
; Line 310
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rcx, QWORD PTR [rax+1172]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	movzx	eax, al
	test	eax, eax
	je	$LN24@f32Input
; Line 311
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	rcx, QWORD PTR [rax+65536]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN25@f32Input
; Line 312
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65575]
	test	eax, eax
	jne	SHORT $LN36@f32Input
	mov	DWORD PTR tv250[rsp], 1
	jmp	SHORT $LN37@f32Input
$LN36@f32Input:
	mov	DWORD PTR tv250[rsp], 0
$LN37@f32Input:
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	ecx, BYTE PTR tv250[rsp]
	mov	BYTE PTR [rax+65575], cl
; Line 313
	jmp	SHORT $LN26@f32Input
$LN25@f32Input:
; Line 314
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65575], 1
$LN26@f32Input:
$LN24@f32Input:
$LN23@f32Input:
; Line 319
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65569]
	test	eax, eax
	je	$LN27@f32Input
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65568]
	test	eax, eax
	jne	SHORT $LN27@f32Input
; Line 320
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rcx, QWORD PTR [rax+1172]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN29@f32Input
; Line 321
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	rcx, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	ecx, DWORD PTR [rcx+65560]
	mov	DWORD PTR [rax+65564], ecx
; Line 322
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65568], 1
$LN29@f32Input:
; Line 323
	jmp	SHORT $LN28@f32Input
$LN27@f32Input:
; Line 324
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1666]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rcx+rax+1152]
	test	eax, eax
	jne	SHORT $LN30@f32Input
; Line 325
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65568], 0
$LN30@f32Input:
$LN28@f32Input:
; Line 328
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ssz$[rsp], xmm0
; Line 329
	cvtss2sd xmm0, DWORD PTR ssz$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR hssz$[rsp], xmm0
; Line 331
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1352]
; Line 332
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fe8000000000000
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1360]
; Line 333
	lea	r8, QWORD PTR th$[rsp]
	lea	rdx, QWORD PTR tw$[rsp]
	mov	rcx, QWORD PTR buffer$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1408]
; Line 334
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3dcccccd
	movss	xmm1, DWORD PTR __real@3dcccccd
	movss	xmm0, DWORD PTR __real@3dcccccd
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 335
	movss	xmm3, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1296]
; Line 336
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f666666
	movss	xmm1, DWORD PTR __real@3f666666
	movss	xmm0, DWORD PTR __real@3f666666
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 337
	movss	xmm0, DWORD PTR w$[rsp]
	divss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR x$[rsp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR tw$[rsp]
	divss	xmm1, DWORD PTR __real@40000000
	subss	xmm0, xmm1
	movss	DWORD PTR tx$[rsp], xmm0
; Line 338
	movss	xmm0, DWORD PTR h$[rsp]
	divss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR y$[rsp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR th$[rsp]
	divss	xmm1, DWORD PTR __real@40000000
	subss	xmm0, xmm1
	movss	DWORD PTR ty$[rsp], xmm0
; Line 339
	movzx	eax, BYTE PTR active$[rsp]
	test	eax, eax
	je	SHORT $LN31@f32Input
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR [rax+1212]
	mulss	xmm0, DWORD PTR __real@40000000
	cvttss2si rax, xmm0
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	mov	eax, edx
	test	eax, eax
	je	SHORT $LN31@f32Input
; Line 340
	movss	xmm0, DWORD PTR tx$[rsp]
	addss	xmm0, DWORD PTR tw$[rsp]
	movss	xmm3, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR __real@40a00000
	movss	xmm1, DWORD PTR y$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1296]
$LN31@f32Input:
; Line 343
	movss	xmm2, DWORD PTR ty$[rsp]
	movss	xmm1, DWORD PTR tx$[rsp]
	mov	rcx, QWORD PTR buffer$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1328]
; Line 346
	mov	eax, 4
	imul	rax, rax, 2
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	edx, 4
	imul	rdx, rdx, 0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR color1$[rsp+rax]
	movss	xmm1, DWORD PTR color1$[rsp+rcx]
	movss	xmm0, DWORD PTR color1$[rsp+rdx]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 347
	movss	xmm0, DWORD PTR y$[rsp]
	addss	xmm0, DWORD PTR h$[rsp]
	movaps	xmm3, xmm0
	movss	xmm2, DWORD PTR x$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 348
	movss	xmm0, DWORD PTR y$[rsp]
	addss	xmm0, DWORD PTR h$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	addss	xmm1, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	addss	xmm2, DWORD PTR h$[rsp]
	movss	DWORD PTR tv362[rsp], xmm2
	movss	xmm3, DWORD PTR x$[rsp]
	subss	xmm3, DWORD PTR hssz$[rsp]
	movss	DWORD PTR tv364[rsp], xmm3
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv362[rsp]
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR tv364[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 349
	mov	eax, 4
	imul	rax, rax, 2
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	edx, 4
	imul	rdx, rdx, 0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR color2$[rsp+rax]
	movss	xmm1, DWORD PTR color2$[rsp+rcx]
	movss	xmm0, DWORD PTR color2$[rsp+rdx]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 350
	movss	xmm0, DWORD PTR x$[rsp]
	addss	xmm0, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	addss	xmm1, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR x$[rsp]
	addss	xmm2, DWORD PTR w$[rsp]
	movss	DWORD PTR tv383[rsp], xmm2
	movss	xmm3, DWORD PTR y$[rsp]
	movaps	xmm2, xmm0
	movss	xmm0, DWORD PTR tv383[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 351
	movss	xmm0, DWORD PTR x$[rsp]
	addss	xmm0, DWORD PTR w$[rsp]
	addss	xmm0, DWORD PTR hssz$[rsp]
	movss	xmm3, DWORD PTR y$[rsp]
	movaps	xmm2, xmm0
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 353
	movzx	eax, BYTE PTR active$[rsp]
	test	eax, eax
	je	SHORT $LN32@f32Input
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65575]
	test	eax, eax
	je	SHORT $LN32@f32Input
; Line 354
	movss	xmm3, DWORD PTR __real@3f000000
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 355
	movss	xmm3, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1296]
$LN32@f32Input:
; Line 358
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	eax, DWORD PTR [rax+65560]
	inc	eax
	mov	rcx, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	DWORD PTR [rcx+65560], eax
; Line 360
	movzx	eax, BYTE PTR result$[rsp]
; Line 361
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 168				; 000000a8H
	ret	0
?f32Input@@YA_NPEAMMMMM@Z ENDP				; f32Input
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
result$ = 48
active$ = 49
ctr$1 = 52
tv67 = 56
tv199 = 60
ssz$ = 64
tw$ = 68
tx$ = 72
hssz$ = 76
th$ = 80
ty$ = 84
tv308 = 88
tv310 = 92
tv329 = 96
color1$ = 104
color2$ = 120
__$ArrayPad$ = 136
text$ = 160
x$ = 168
y$ = 176
w$ = 184
h$ = 192
?textInput@@YA_NPEADMMMM@Z PROC				; textInput
; File D:\code\sprite_animation_maker\gui.h
; Line 143
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 152				; 00000098H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 144
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR color1$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR color1$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR color1$[rsp+8], xmm0
; Line 145
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR color2$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR color2$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3e4ccccd
	movss	DWORD PTR color2$[rsp+8], xmm0
; Line 147
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	rcx, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	ecx, DWORD PTR [rcx+65560]
	cmp	DWORD PTR [rax+65564], ecx
	jne	SHORT $LN28@textInput
	mov	DWORD PTR tv67[rsp], 1
	jmp	SHORT $LN29@textInput
$LN28@textInput:
	mov	DWORD PTR tv67[rsp], 0
$LN29@textInput:
	movzx	eax, BYTE PTR tv67[rsp]
	mov	BYTE PTR active$[rsp], al
; Line 148
	mov	BYTE PTR result$[rsp], 0
; Line 149
	movzx	eax, BYTE PTR active$[rsp]
	test	eax, eax
	je	$LN2@textInput
; Line 150
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1168]
	test	eax, eax
	je	$LN3@textInput
; Line 151
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1168], 0
; Line 152
	mov	rcx, QWORD PTR text$[rsp]
	call	?getLength@@YAIPEAD@Z			; getLength
	mov	DWORD PTR ctr$1[rsp], eax
; Line 153
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movsx	eax, BYTE PTR [rax+1169]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	ecx, WORD PTR [rcx+1640]
	cmp	eax, ecx
	jne	SHORT $LN4@textInput
; Line 154
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65575]
	test	eax, eax
	je	SHORT $LN6@textInput
; Line 155
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR text$[rsp]
	mov	BYTE PTR [rcx+rax], 0
; Line 156
	mov	DWORD PTR ctr$1[rsp], 0
; Line 157
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65575], 0
	jmp	SHORT $LN7@textInput
$LN6@textInput:
; Line 158
	cmp	DWORD PTR ctr$1[rsp], 0
	jbe	SHORT $LN8@textInput
; Line 159
	mov	eax, DWORD PTR ctr$1[rsp]
	dec	eax
	mov	eax, eax
	mov	rcx, QWORD PTR text$[rsp]
	mov	BYTE PTR [rcx+rax], 0
$LN8@textInput:
$LN7@textInput:
; Line 160
	jmp	$LN5@textInput
$LN4@textInput:
; Line 161
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movsx	eax, BYTE PTR [rax+1169]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	ecx, WORD PTR [rcx+1634]
	cmp	eax, ecx
	jne	SHORT $LN9@textInput
; Line 162
	mov	BYTE PTR result$[rsp], 1
; Line 163
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65575], 0
; Line 164
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	DWORD PTR [rax+65564], -1		; ffffffffH
	jmp	$LN10@textInput
$LN9@textInput:
; Line 165
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movsx	eax, BYTE PTR [rax+1169]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	ecx, WORD PTR [rcx+1646]
	cmp	eax, ecx
	jne	SHORT $LN11@textInput
; Line 166
	mov	BYTE PTR result$[rsp], 1
; Line 167
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65575], 0
; Line 168
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	eax, DWORD PTR [rax+65564]
	inc	eax
	mov	rcx, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	DWORD PTR [rcx+65564], eax
; Line 169
	jmp	$LN12@textInput
$LN11@textInput:
; Line 170
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65575]
	test	eax, eax
	je	SHORT $LN13@textInput
; Line 171
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR text$[rsp]
	mov	rdx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	edx, BYTE PTR [rdx+1169]
	mov	BYTE PTR [rcx+rax], dl
; Line 172
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR text$[rsp]
	mov	BYTE PTR [rcx+rax], 0
; Line 173
	mov	DWORD PTR ctr$1[rsp], 1
; Line 174
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65575], 0
; Line 175
	jmp	SHORT $LN14@textInput
$LN13@textInput:
; Line 176
	mov	eax, DWORD PTR ctr$1[rsp]
	mov	rcx, QWORD PTR text$[rsp]
	mov	rdx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	edx, BYTE PTR [rdx+1169]
	mov	BYTE PTR [rcx+rax], dl
; Line 177
	mov	eax, DWORD PTR ctr$1[rsp]
	inc	eax
	mov	eax, eax
	mov	rcx, QWORD PTR text$[rsp]
	mov	BYTE PTR [rcx+rax], 0
; Line 178
	mov	eax, DWORD PTR ctr$1[rsp]
	inc	eax
	mov	DWORD PTR ctr$1[rsp], eax
$LN14@textInput:
$LN12@textInput:
$LN10@textInput:
$LN5@textInput:
$LN3@textInput:
; Line 183
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65569]
	test	eax, eax
	je	SHORT $LN15@textInput
; Line 184
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rcx, QWORD PTR [rax+1172]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN16@textInput
; Line 185
	mov	BYTE PTR result$[rsp], 1
; Line 186
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65575], 0
; Line 187
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	DWORD PTR [rax+65564], -1		; ffffffffH
$LN16@textInput:
$LN15@textInput:
$LN2@textInput:
; Line 192
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65569]
	test	eax, eax
	je	$LN17@textInput
; Line 193
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rcx, QWORD PTR [rax+1172]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	movzx	eax, al
	test	eax, eax
	je	$LN18@textInput
; Line 194
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	rcx, QWORD PTR [rax+65536]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@textInput
; Line 195
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65575]
	test	eax, eax
	jne	SHORT $LN30@textInput
	mov	DWORD PTR tv199[rsp], 1
	jmp	SHORT $LN31@textInput
$LN30@textInput:
	mov	DWORD PTR tv199[rsp], 0
$LN31@textInput:
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	ecx, BYTE PTR tv199[rsp]
	mov	BYTE PTR [rax+65575], cl
; Line 196
	jmp	SHORT $LN20@textInput
$LN19@textInput:
; Line 197
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65575], 1
$LN20@textInput:
$LN18@textInput:
$LN17@textInput:
; Line 202
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65569]
	test	eax, eax
	je	$LN21@textInput
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65568]
	test	eax, eax
	jne	SHORT $LN21@textInput
; Line 203
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rcx, QWORD PTR [rax+1172]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN23@textInput
; Line 204
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	rcx, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	ecx, DWORD PTR [rcx+65560]
	mov	DWORD PTR [rax+65564], ecx
; Line 205
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65568], 1
$LN23@textInput:
; Line 206
	jmp	SHORT $LN22@textInput
$LN21@textInput:
; Line 207
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1666]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rcx+rax+1152]
	test	eax, eax
	jne	SHORT $LN24@textInput
; Line 208
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65568], 0
$LN24@textInput:
$LN22@textInput:
; Line 211
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ssz$[rsp], xmm0
; Line 212
	cvtss2sd xmm0, DWORD PTR ssz$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR hssz$[rsp], xmm0
; Line 214
	movss	xmm0, DWORD PTR ssz$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1352]
; Line 215
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fe8000000000000
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1360]
; Line 216
	lea	r8, QWORD PTR th$[rsp]
	lea	rdx, QWORD PTR tw$[rsp]
	mov	rcx, QWORD PTR text$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1408]
; Line 217
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3dcccccd
	movss	xmm1, DWORD PTR __real@3dcccccd
	movss	xmm0, DWORD PTR __real@3dcccccd
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 218
	movss	xmm3, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1296]
; Line 219
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f666666
	movss	xmm1, DWORD PTR __real@3f666666
	movss	xmm0, DWORD PTR __real@3f666666
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 220
	movss	xmm0, DWORD PTR w$[rsp]
	divss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR x$[rsp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR tw$[rsp]
	divss	xmm1, DWORD PTR __real@40000000
	subss	xmm0, xmm1
	movss	DWORD PTR tx$[rsp], xmm0
; Line 221
	movss	xmm0, DWORD PTR h$[rsp]
	divss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR y$[rsp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR th$[rsp]
	divss	xmm1, DWORD PTR __real@40000000
	subss	xmm0, xmm1
	movss	DWORD PTR ty$[rsp], xmm0
; Line 222
	movzx	eax, BYTE PTR active$[rsp]
	test	eax, eax
	je	SHORT $LN25@textInput
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movss	xmm0, DWORD PTR [rax+1212]
	mulss	xmm0, DWORD PTR __real@40000000
	cvttss2si rax, xmm0
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	mov	eax, edx
	test	eax, eax
	je	SHORT $LN25@textInput
; Line 223
	movss	xmm0, DWORD PTR tx$[rsp]
	addss	xmm0, DWORD PTR tw$[rsp]
	movss	xmm3, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR __real@40a00000
	movss	xmm1, DWORD PTR y$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1296]
$LN25@textInput:
; Line 225
	movss	xmm2, DWORD PTR ty$[rsp]
	movss	xmm1, DWORD PTR tx$[rsp]
	mov	rcx, QWORD PTR text$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1328]
; Line 226
	mov	eax, 4
	imul	rax, rax, 2
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	edx, 4
	imul	rdx, rdx, 0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR color1$[rsp+rax]
	movss	xmm1, DWORD PTR color1$[rsp+rcx]
	movss	xmm0, DWORD PTR color1$[rsp+rdx]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 227
	movss	xmm0, DWORD PTR y$[rsp]
	addss	xmm0, DWORD PTR h$[rsp]
	movaps	xmm3, xmm0
	movss	xmm2, DWORD PTR x$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 228
	movss	xmm0, DWORD PTR y$[rsp]
	addss	xmm0, DWORD PTR h$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	addss	xmm1, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	addss	xmm2, DWORD PTR h$[rsp]
	movss	DWORD PTR tv308[rsp], xmm2
	movss	xmm3, DWORD PTR x$[rsp]
	subss	xmm3, DWORD PTR hssz$[rsp]
	movss	DWORD PTR tv310[rsp], xmm3
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv308[rsp]
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR tv310[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 229
	mov	eax, 4
	imul	rax, rax, 2
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	edx, 4
	imul	rdx, rdx, 0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR color2$[rsp+rax]
	movss	xmm1, DWORD PTR color2$[rsp+rcx]
	movss	xmm0, DWORD PTR color2$[rsp+rdx]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 230
	movss	xmm0, DWORD PTR x$[rsp]
	addss	xmm0, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	addss	xmm1, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR x$[rsp]
	addss	xmm2, DWORD PTR w$[rsp]
	movss	DWORD PTR tv329[rsp], xmm2
	movss	xmm3, DWORD PTR y$[rsp]
	movaps	xmm2, xmm0
	movss	xmm0, DWORD PTR tv329[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 231
	movss	xmm0, DWORD PTR x$[rsp]
	addss	xmm0, DWORD PTR w$[rsp]
	addss	xmm0, DWORD PTR hssz$[rsp]
	movss	xmm3, DWORD PTR y$[rsp]
	movaps	xmm2, xmm0
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 233
	movzx	eax, BYTE PTR active$[rsp]
	test	eax, eax
	je	SHORT $LN26@textInput
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65575]
	test	eax, eax
	je	SHORT $LN26@textInput
; Line 234
	movss	xmm3, DWORD PTR __real@3f000000
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 235
	movss	xmm3, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1296]
$LN26@textInput:
; Line 238
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	eax, DWORD PTR [rax+65560]
	inc	eax
	mov	rcx, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	DWORD PTR [rcx+65560], eax
; Line 240
	movzx	eax, BYTE PTR result$[rsp]
; Line 241
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 152				; 00000098H
	ret	0
?textInput@@YA_NPEADMMMM@Z ENDP				; textInput
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
drawX$ = 48
bds$1 = 49
clicked$ = 50
d$2 = 52
tv136 = 56
tv189 = 60
tv203 = 64
tv230 = 68
tv232 = 72
tv240 = 76
tv243 = 80
c1$ = 88
__$ArrayPad$ = 104
v$ = 128
x$ = 136
y$ = 144
w$ = 152
h$ = 160
?checkBox@@YA_NPEA_NMMMM@Z PROC				; checkBox
; File D:\code\sprite_animation_maker\gui.h
; Line 94
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 95
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR c1$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR c1$[rsp+4], xmm0
	movss	xmm0, DWORD PTR __real@3f4ccccd
	movss	DWORD PTR c1$[rsp+8], xmm0
; Line 96
	mov	BYTE PTR drawX$[rsp], 0
; Line 97
	mov	BYTE PTR clicked$[rsp], 0
; Line 98
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rcx, QWORD PTR [rax+1172]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	movzx	eax, al
	test	eax, eax
	je	$LN2@checkBox
; Line 99
	mov	eax, 4
	imul	rax, rax, 0
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR c1$[rsp+rax], xmm0
; Line 100
	mov	eax, 4
	imul	rax, rax, 1
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR c1$[rsp+rax], xmm0
; Line 101
	mov	eax, 4
	imul	rax, rax, 2
	movss	xmm0, DWORD PTR __real@3f666666
	movss	DWORD PTR c1$[rsp+rax], xmm0
; Line 103
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	rcx, QWORD PTR [rax+65536]
	call	?inBounds@@YA_NTVector2@@MMMM@Z		; inBounds
	mov	BYTE PTR bds$1[rsp], al
; Line 104
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1666]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rcx+rax+1152]
	test	eax, eax
	je	SHORT $LN4@checkBox
	movzx	eax, BYTE PTR bds$1[rsp]
	test	eax, eax
	je	SHORT $LN4@checkBox
; Line 105
	mov	rax, QWORD PTR v$[rsp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN6@checkBox
; Line 106
	mov	BYTE PTR drawX$[rsp], 1
$LN6@checkBox:
; Line 107
	jmp	SHORT $LN5@checkBox
$LN4@checkBox:
; Line 108
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65573]
	test	eax, eax
	je	SHORT $LN7@checkBox
	movzx	eax, BYTE PTR bds$1[rsp]
	test	eax, eax
	je	SHORT $LN7@checkBox
; Line 109
	mov	rax, QWORD PTR v$[rsp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN15@checkBox
	mov	DWORD PTR tv136[rsp], 1
	jmp	SHORT $LN16@checkBox
$LN15@checkBox:
	mov	DWORD PTR tv136[rsp], 0
$LN16@checkBox:
	mov	rax, QWORD PTR v$[rsp]
	movzx	ecx, BYTE PTR tv136[rsp]
	mov	BYTE PTR [rax], cl
; Line 110
	mov	BYTE PTR clicked$[rsp], 1
; Line 111
	mov	rax, QWORD PTR v$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR drawX$[rsp], al
	jmp	SHORT $LN8@checkBox
$LN7@checkBox:
; Line 112
	mov	rax, QWORD PTR v$[rsp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN9@checkBox
; Line 113
	mov	BYTE PTR drawX$[rsp], 1
$LN9@checkBox:
$LN8@checkBox:
$LN5@checkBox:
; Line 114
	jmp	SHORT $LN3@checkBox
$LN2@checkBox:
; Line 115
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1666]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rcx+rax+1152]
	test	eax, eax
	jne	SHORT $LN10@checkBox
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65573]
	test	eax, eax
	je	SHORT $LN10@checkBox
; Line 116
	mov	BYTE PTR drawX$[rsp], 1
	jmp	SHORT $LN11@checkBox
$LN10@checkBox:
; Line 117
	mov	rax, QWORD PTR v$[rsp]
	movzx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN12@checkBox
; Line 118
	mov	BYTE PTR drawX$[rsp], 1
$LN12@checkBox:
$LN11@checkBox:
$LN3@checkBox:
; Line 122
	mov	eax, 4
	imul	rax, rax, 2
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	edx, 4
	imul	rdx, rdx, 0
	movss	xmm3, DWORD PTR __real@41100000
	movss	xmm2, DWORD PTR c1$[rsp+rax]
	movss	xmm1, DWORD PTR c1$[rsp+rcx]
	movss	xmm0, DWORD PTR c1$[rsp+rdx]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 123
	movss	xmm3, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1296]
; Line 124
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f333333
	movss	xmm1, DWORD PTR __real@3f333333
	movss	xmm0, DWORD PTR __real@3f333333
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 125
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1352]
; Line 126
	movss	xmm0, DWORD PTR y$[rsp]
	addss	xmm0, DWORD PTR h$[rsp]
	movaps	xmm3, xmm0
	movss	xmm2, DWORD PTR x$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 127
	movss	xmm0, DWORD PTR y$[rsp]
	addss	xmm0, DWORD PTR h$[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	addss	xmm1, DWORD PTR w$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	addss	xmm2, DWORD PTR h$[rsp]
	movss	DWORD PTR tv189[rsp], xmm2
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv189[rsp]
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 128
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3e99999a
	movss	xmm1, DWORD PTR __real@3e99999a
	movss	xmm0, DWORD PTR __real@3e99999a
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 129
	movss	xmm0, DWORD PTR x$[rsp]
	addss	xmm0, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	addss	xmm1, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR x$[rsp]
	addss	xmm2, DWORD PTR w$[rsp]
	movss	DWORD PTR tv203[rsp], xmm2
	movss	xmm3, DWORD PTR y$[rsp]
	movaps	xmm2, xmm0
	movss	xmm0, DWORD PTR tv203[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 130
	movss	xmm0, DWORD PTR x$[rsp]
	addss	xmm0, DWORD PTR w$[rsp]
	movss	xmm3, DWORD PTR y$[rsp]
	movaps	xmm2, xmm0
	movss	xmm1, DWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 132
	movzx	eax, BYTE PTR drawX$[rsp]
	test	eax, eax
	je	$LN13@checkBox
; Line 133
	cvtss2sd xmm0, DWORD PTR h$[rsp]
	mulsd	xmm0, QWORD PTR __real@3fc999999999999a
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR d$2[rsp], xmm0
; Line 134
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3dcccccd
	movss	xmm1, DWORD PTR __real@3dcccccd
	movss	xmm0, DWORD PTR __real@3dcccccd
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1272]
; Line 135
	movss	xmm0, DWORD PTR d$2[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1352]
; Line 136
	movss	xmm0, DWORD PTR y$[rsp]
	addss	xmm0, DWORD PTR h$[rsp]
	subss	xmm0, DWORD PTR d$2[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	addss	xmm1, DWORD PTR w$[rsp]
	subss	xmm1, DWORD PTR d$2[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	addss	xmm2, DWORD PTR d$2[rsp]
	movss	DWORD PTR tv230[rsp], xmm2
	movss	xmm3, DWORD PTR x$[rsp]
	addss	xmm3, DWORD PTR d$2[rsp]
	movss	DWORD PTR tv232[rsp], xmm3
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv230[rsp]
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR tv232[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
; Line 137
	movss	xmm0, DWORD PTR y$[rsp]
	addss	xmm0, DWORD PTR h$[rsp]
	subss	xmm0, DWORD PTR d$2[rsp]
	movss	xmm1, DWORD PTR x$[rsp]
	addss	xmm1, DWORD PTR d$2[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	addss	xmm2, DWORD PTR d$2[rsp]
	movss	DWORD PTR tv240[rsp], xmm2
	movss	xmm3, DWORD PTR x$[rsp]
	addss	xmm3, DWORD PTR w$[rsp]
	subss	xmm3, DWORD PTR d$2[rsp]
	movss	DWORD PTR tv243[rsp], xmm3
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv240[rsp]
	movaps	xmm1, xmm0
	movss	xmm0, DWORD PTR tv243[rsp]
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	call	QWORD PTR [rax+1320]
$LN13@checkBox:
; Line 140
	movzx	eax, BYTE PTR clicked$[rsp]
; Line 141
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	ret	0
?checkBox@@YA_NPEA_NMMMM@Z ENDP				; checkBox
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
?finalizeGUI@@YAXXZ PROC				; finalizeGUI
; File D:\code\sprite_animation_maker\gui.h
; Line 67
	sub	rsp, 40					; 00000028H
; Line 68
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	cmp	DWORD PTR [rax+65564], -1		; ffffffffH
	jne	SHORT $LN2@finalizeGU
; Line 69
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	BYTE PTR [rax+1168], 0
$LN2@finalizeGU:
; Line 72
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65569]
	test	eax, eax
	je	SHORT $LN3@finalizeGU
; Line 73
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	add	rax, 65536				; 00010000H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rdx, QWORD PTR [rcx+1172]
	mov	rcx, rax
	call	??4Vector2@@QEAAXT0@@Z			; Vector2::operator=
$LN3@finalizeGU:
; Line 75
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65570]
	test	eax, eax
	je	SHORT $LN4@finalizeGU
; Line 76
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	add	rax, 65544				; 00010008H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rdx, QWORD PTR [rcx+1172]
	mov	rcx, rax
	call	??4Vector2@@QEAAXT0@@Z			; Vector2::operator=
$LN4@finalizeGU:
; Line 78
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1666]
	mov	rcx, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	rdx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rdx+rax+1152]
	mov	BYTE PTR [rcx+65573], al
; Line 79
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1668]
	mov	rcx, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	rdx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rdx+rax+1152]
	mov	BYTE PTR [rcx+65574], al
; Line 80
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	add	rax, 65552				; 00010010H
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	mov	rdx, QWORD PTR [rcx+1172]
	mov	rcx, rax
	call	??4Vector2@@QEAAXT0@@Z			; Vector2::operator=
; Line 82
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	cmp	DWORD PTR [rax+65560], 0
	je	SHORT $LN5@finalizeGU
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	cmp	DWORD PTR [rax+65564], -1		; ffffffffH
	je	SHORT $LN5@finalizeGU
; Line 83
	xor	edx, edx
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	eax, DWORD PTR [rax+65564]
	mov	rcx, QWORD PTR ?gui@@3PEAUGUI@@EA
	div	DWORD PTR [rcx+65560]
	mov	eax, edx
	mov	rcx, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	DWORD PTR [rcx+65564], eax
$LN5@finalizeGU:
; Line 85
	add	rsp, 40					; 00000028H
	ret	0
?finalizeGUI@@YAXXZ ENDP				; finalizeGUI
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
g$ = 8
?initializeGUI@@YAXPEAUGUI@@@Z PROC			; initializeGUI
; File D:\code\sprite_animation_maker\gui.h
; Line 39
	mov	QWORD PTR [rsp+8], rcx
; Line 40
	mov	rax, QWORD PTR g$[rsp]
	mov	QWORD PTR ?gui@@3PEAUGUI@@EA, rax
; Line 41
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	DWORD PTR [rax+65560], 0
; Line 43
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1666]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rcx+rax+1152]
	test	eax, eax
	je	SHORT $LN2@initialize
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65573]
	test	eax, eax
	jne	SHORT $LN2@initialize
; Line 44
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65569], 1
; Line 45
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65571], 0
	jmp	SHORT $LN3@initialize
$LN2@initialize:
; Line 46
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1666]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rcx+rax+1152]
	test	eax, eax
	jne	SHORT $LN4@initialize
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65573]
	test	eax, eax
	je	SHORT $LN4@initialize
; Line 47
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65571], 1
; Line 48
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65569], 0
; Line 49
	jmp	SHORT $LN5@initialize
$LN4@initialize:
; Line 50
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65569], 0
; Line 51
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65571], 0
$LN5@initialize:
$LN3@initialize:
; Line 54
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1668]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rcx+rax+1152]
	test	eax, eax
	je	SHORT $LN6@initialize
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65574]
	test	eax, eax
	jne	SHORT $LN6@initialize
; Line 55
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65570], 1
; Line 56
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65572], 0
	jmp	SHORT $LN7@initialize
$LN6@initialize:
; Line 57
	mov	rax, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rax+1668]
	mov	rcx, QWORD PTR ?os@@3PEAUOSInterface@@EA
	movzx	eax, BYTE PTR [rcx+rax+1152]
	test	eax, eax
	jne	SHORT $LN8@initialize
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	movzx	eax, BYTE PTR [rax+65574]
	test	eax, eax
	je	SHORT $LN8@initialize
; Line 58
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65572], 1
; Line 59
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65570], 0
; Line 60
	jmp	SHORT $LN9@initialize
$LN8@initialize:
; Line 61
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65570], 0
; Line 62
	mov	rax, QWORD PTR ?gui@@3PEAUGUI@@EA
	mov	BYTE PTR [rax+65572], 0
$LN9@initialize:
$LN7@initialize:
; Line 65
	ret	0
?initializeGUI@@YAXPEAUGUI@@@Z ENDP			; initializeGUI
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv70 = 0
p$ = 32
x$ = 40
y$ = 48
w$ = 56
h$ = 64
?inBounds@@YA_NTVector2@@MMMM@Z PROC			; inBounds
; File D:\code\sprite_animation_maker\gui.h
; Line 34
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
; Line 35
	movss	xmm0, DWORD PTR p$[rsp]
	comiss	xmm0, DWORD PTR x$[rsp]
	jbe	SHORT $LN3@inBounds
	movss	xmm0, DWORD PTR x$[rsp]
	addss	xmm0, DWORD PTR w$[rsp]
	comiss	xmm0, DWORD PTR p$[rsp]
	jbe	SHORT $LN3@inBounds
	movss	xmm0, DWORD PTR p$[rsp+4]
	comiss	xmm0, DWORD PTR y$[rsp]
	jbe	SHORT $LN3@inBounds
	movss	xmm0, DWORD PTR y$[rsp]
	addss	xmm0, DWORD PTR h$[rsp]
	comiss	xmm0, DWORD PTR p$[rsp+4]
	jbe	SHORT $LN3@inBounds
	mov	DWORD PTR tv70[rsp], 1
	jmp	SHORT $LN4@inBounds
$LN3@inBounds:
	mov	DWORD PTR tv70[rsp], 0
$LN4@inBounds:
	movzx	eax, BYTE PTR tv70[rsp]
; Line 36
	add	rsp, 24
	ret	0
?inBounds@@YA_NTVector2@@MMMM@Z ENDP			; inBounds
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
$T4 = 80
$T5 = 96
$T6 = 112
$T7 = 128
$T8 = 144
$T9 = 160
$T10 = 176
$T11 = 192
$T12 = 208
$T13 = 224
$T14 = 240
$T15 = 256
$T16 = 272
$T17 = 288
forward$ = 304
right$ = 320
mat$ = 336
$T18 = 400
$T19 = 416
$T20 = 432
$T21 = 448
$T22 = 464
__$ArrayPad$ = 480
__$ReturnUdt$ = 528
position$ = 536
target$ = 544
up$ = 552
?lookAt@@YA?ATMatrix4@@TVector3@@00@Z PROC		; lookAt
; File D:\code\sprite_animation_maker\mathematics.h
; Line 940
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 504				; 000001f8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 941
	mov	rax, QWORD PTR target$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T1[rsp], xmm0
	mov	rax, QWORD PTR position$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T2[rsp], xmm0
	lea	r8, QWORD PTR $T1[rsp]
	lea	rdx, QWORD PTR $T2[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??G@YA?ATVector3@@T0@0@Z		; operator-
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T3[rsp], xmm0
	lea	rdx, QWORD PTR $T3[rsp]
	lea	rcx, QWORD PTR forward$[rsp]
	call	?normalOf@@YA?ATVector3@@T1@@Z		; normalOf
; Line 942
	mov	rax, QWORD PTR up$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T4[rsp], xmm0
	movaps	xmm0, XMMWORD PTR forward$[rsp]
	movdqa	XMMWORD PTR $T5[rsp], xmm0
	lea	r8, QWORD PTR $T4[rsp]
	lea	rdx, QWORD PTR $T5[rsp]
	lea	rcx, QWORD PTR $T19[rsp]
	call	?cross@@YA?ATVector3@@T1@0@Z		; cross
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T6[rsp], xmm0
	lea	rdx, QWORD PTR $T6[rsp]
	lea	rcx, QWORD PTR right$[rsp]
	call	?normalOf@@YA?ATVector3@@T1@@Z		; normalOf
; Line 943
	movaps	xmm0, XMMWORD PTR forward$[rsp]
	movdqa	XMMWORD PTR $T7[rsp], xmm0
	movaps	xmm0, XMMWORD PTR right$[rsp]
	movdqa	XMMWORD PTR $T8[rsp], xmm0
	lea	r8, QWORD PTR $T7[rsp]
	lea	rdx, QWORD PTR $T8[rsp]
	lea	rcx, QWORD PTR $T20[rsp]
	call	?cross@@YA?ATVector3@@T1@0@Z		; cross
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T9[rsp], xmm0
	lea	rdx, QWORD PTR $T9[rsp]
	mov	rcx, QWORD PTR up$[rsp]
	call	??4Vector3@@QEAAXT0@@Z			; Vector3::operator=
; Line 944
	lea	rcx, QWORD PTR mat$[rsp]
	call	??0Matrix4@@QEAA@XZ			; Matrix4::Matrix4
; Line 945
	mov	eax, 16
	imul	rax, rax, 0
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 0
	movss	xmm0, DWORD PTR right$[rsp]
	movss	DWORD PTR [rax+rcx], xmm0
; Line 946
	mov	eax, 16
	imul	rax, rax, 0
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR up$[rsp]
	movss	xmm0, DWORD PTR [rdx]
	movss	DWORD PTR [rax+rcx], xmm0
; Line 947
	movss	xmm0, DWORD PTR forward$[rsp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, 16
	imul	rax, rax, 0
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 2
	movss	DWORD PTR [rax+rcx], xmm0
; Line 948
	mov	eax, 16
	imul	rax, rax, 0
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 3
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+rcx], xmm0
; Line 949
	mov	eax, 16
	imul	rax, rax, 1
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 0
	movss	xmm0, DWORD PTR right$[rsp+4]
	movss	DWORD PTR [rax+rcx], xmm0
; Line 950
	mov	eax, 16
	imul	rax, rax, 1
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR up$[rsp]
	movss	xmm0, DWORD PTR [rdx+4]
	movss	DWORD PTR [rax+rcx], xmm0
; Line 951
	movss	xmm0, DWORD PTR forward$[rsp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, 16
	imul	rax, rax, 1
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 2
	movss	DWORD PTR [rax+rcx], xmm0
; Line 952
	mov	eax, 16
	imul	rax, rax, 1
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 3
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+rcx], xmm0
; Line 953
	mov	eax, 16
	imul	rax, rax, 2
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 0
	movss	xmm0, DWORD PTR right$[rsp+8]
	movss	DWORD PTR [rax+rcx], xmm0
; Line 954
	mov	eax, 16
	imul	rax, rax, 2
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR up$[rsp]
	movss	xmm0, DWORD PTR [rdx+8]
	movss	DWORD PTR [rax+rcx], xmm0
; Line 955
	movss	xmm0, DWORD PTR forward$[rsp+8]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, 16
	imul	rax, rax, 2
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 2
	movss	DWORD PTR [rax+rcx], xmm0
; Line 956
	mov	eax, 16
	imul	rax, rax, 2
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 3
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+rcx], xmm0
; Line 957
	mov	rax, QWORD PTR position$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T11[rsp], xmm0
	movaps	xmm0, XMMWORD PTR right$[rsp]
	movdqa	XMMWORD PTR $T10[rsp], xmm0
	lea	rdx, QWORD PTR $T10[rsp]
	lea	rcx, QWORD PTR $T21[rsp]
	call	??G@YA?ATVector3@@T0@@Z			; operator-
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T12[rsp], xmm0
	lea	rdx, QWORD PTR $T11[rsp]
	lea	rcx, QWORD PTR $T12[rsp]
	call	?dot@@YAMTVector3@@0@Z			; dot
	mov	eax, 16
	imul	rax, rax, 3
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 0
	movss	DWORD PTR [rax+rcx], xmm0
; Line 958
	mov	rax, QWORD PTR position$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T14[rsp], xmm0
	mov	rax, QWORD PTR up$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T13[rsp], xmm0
	lea	rdx, QWORD PTR $T13[rsp]
	lea	rcx, QWORD PTR $T22[rsp]
	call	??G@YA?ATVector3@@T0@@Z			; operator-
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T15[rsp], xmm0
	lea	rdx, QWORD PTR $T14[rsp]
	lea	rcx, QWORD PTR $T15[rsp]
	call	?dot@@YAMTVector3@@0@Z			; dot
	mov	eax, 16
	imul	rax, rax, 3
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 1
	movss	DWORD PTR [rax+rcx], xmm0
; Line 959
	mov	rax, QWORD PTR position$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T16[rsp], xmm0
	movaps	xmm0, XMMWORD PTR forward$[rsp]
	movdqa	XMMWORD PTR $T17[rsp], xmm0
	lea	rdx, QWORD PTR $T16[rsp]
	lea	rcx, QWORD PTR $T17[rsp]
	call	?dot@@YAMTVector3@@0@Z			; dot
	mov	eax, 16
	imul	rax, rax, 3
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 2
	movss	DWORD PTR [rax+rcx], xmm0
; Line 960
	mov	eax, 16
	imul	rax, rax, 3
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 3
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax+rcx], xmm0
; Line 961
	lea	rax, QWORD PTR mat$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 64					; 00000040H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 962
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 504				; 000001f8H
	pop	rdi
	pop	rsi
	ret	0
?lookAt@@YA?ATMatrix4@@TVector3@@00@Z ENDP		; lookAt
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tmp0$ = 32
tmp2$ = 48
$T1 = 64
$T2 = 80
$T3 = 96
tmp1$ = 112
$T4 = 128
$T5 = 144
tmp3$ = 160
tmp4$ = 176
$T6 = 192
$T7 = 208
__$ReturnUdt$ = 240
v1$ = 248
v2$ = 256
?cross@@YA?ATVector3@@T1@0@Z PROC			; cross
; File D:\code\sprite_animation_maker\mathematics.h
; Line 605
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 232				; 000000e8H
; Line 606
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v1$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	shufps	xmm0, XMMWORD PTR [rcx], 201		; 000000c9H
	movaps	XMMWORD PTR $T1[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movaps	XMMWORD PTR tmp0$[rsp], xmm0
; Line 607
	mov	rax, QWORD PTR v2$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	shufps	xmm0, XMMWORD PTR [rcx], 210		; 000000d2H
	movaps	XMMWORD PTR $T2[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T2[rsp]
	movaps	XMMWORD PTR tmp1$[rsp], xmm0
; Line 608
	mov	rax, QWORD PTR v2$[rsp]
	movaps	xmm0, XMMWORD PTR tmp0$[rsp]
	mulps	xmm0, XMMWORD PTR [rax]
	movaps	XMMWORD PTR $T3[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T3[rsp]
	movaps	XMMWORD PTR tmp2$[rsp], xmm0
; Line 609
	movaps	xmm0, XMMWORD PTR tmp0$[rsp]
	mulps	xmm0, XMMWORD PTR tmp1$[rsp]
	movaps	XMMWORD PTR $T4[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T4[rsp]
	movaps	XMMWORD PTR tmp3$[rsp], xmm0
; Line 610
	movaps	xmm0, XMMWORD PTR tmp2$[rsp]
	shufps	xmm0, XMMWORD PTR tmp2$[rsp], 201	; 000000c9H
	movaps	XMMWORD PTR $T5[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T5[rsp]
	movaps	XMMWORD PTR tmp4$[rsp], xmm0
; Line 611
	movaps	xmm0, XMMWORD PTR tmp3$[rsp]
	subps	xmm0, XMMWORD PTR tmp4$[rsp]
	movaps	XMMWORD PTR $T6[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T6[rsp]
	movaps	XMMWORD PTR $T7[rsp], xmm0
	lea	rdx, QWORD PTR $T7[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Vector3@@QEAA@T__m128@@@Z		; Vector3::Vector3
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 612
	add	rsp, 232				; 000000e8H
	ret	0
?cross@@YA?ATVector3@@T1@0@Z ENDP			; cross
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
v1$ = 8
v2$ = 16
?dot@@YAMTVector3@@0@Z PROC				; dot
; File D:\code\sprite_animation_maker\mathematics.h
; Line 587
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
; Line 588
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR [rcx+4]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	mulss	xmm1, DWORD PTR [rcx+8]
	addss	xmm0, xmm1
; Line 589
	ret	0
?dot@@YAMTVector3@@0@Z ENDP				; dot
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
len$ = 32
tv71 = 36
tv75 = 40
tv79 = 44
$T1 = 48
__$ReturnUdt$ = 80
v$ = 88
?normalOf@@YA?ATVector3@@T1@@Z PROC			; normalOf
; File D:\code\sprite_animation_maker\mathematics.h
; Line 552
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
; Line 553
	mov	rax, QWORD PTR v$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T1[rsp], xmm0
	lea	rcx, QWORD PTR $T1[rsp]
	call	?length@@YAMTVector3@@@Z		; length
	movss	DWORD PTR len$[rsp], xmm0
; Line 554
	movss	xmm0, DWORD PTR len$[rsp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN5@normalOf
	je	$LN2@normalOf
$LN5@normalOf:
; Line 555
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	divss	xmm0, DWORD PTR len$[rsp]
	movss	DWORD PTR tv71[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR tv71[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	divss	xmm0, DWORD PTR len$[rsp]
	movss	DWORD PTR tv75[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR tv75[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax]
	divss	xmm0, DWORD PTR len$[rsp]
	movss	DWORD PTR tv79[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR tv79[rsp]
	movss	DWORD PTR [rax], xmm0
	movss	xmm3, DWORD PTR tv71[rsp]
	movss	xmm2, DWORD PTR tv75[rsp]
	movss	xmm1, DWORD PTR tv79[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Vector3@@QEAA@MMM@Z			; Vector3::Vector3
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@normalOf
; Line 556
	jmp	SHORT $LN3@normalOf
$LN2@normalOf:
; Line 557
	xorps	xmm1, xmm1
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Vector3@@QEAA@M@Z			; Vector3::Vector3
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN3@normalOf:
$LN1@normalOf:
; Line 559
	add	rsp, 72					; 00000048H
	ret	0
?normalOf@@YA?ATVector3@@T1@@Z ENDP			; normalOf
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
v$ = 80
?length@@YAMTVector3@@@Z PROC				; length
; File D:\code\sprite_animation_maker\mathematics.h
; Line 462
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
; Line 463
	mov	rdx, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??XVector3@@QEAAXAEAT0@@Z		; Vector3::operator*=
; Line 464
	mov	rax, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	haddps	xmm0, XMMWORD PTR [rcx]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rax], xmm0
; Line 465
	mov	rax, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	haddps	xmm0, XMMWORD PTR [rcx]
	movaps	XMMWORD PTR $T2[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movaps	xmm0, XMMWORD PTR $T2[rsp]
	movups	XMMWORD PTR [rax], xmm0
; Line 466
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax]
	call	?squareRoot@@YAMM@Z			; squareRoot
; Line 467
	add	rsp, 72					; 00000048H
	ret	0
?length@@YAMTVector3@@@Z ENDP				; length
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv70 = 0
$T1 = 16
$T2 = 32
r$ = 64
?squareRoot@@YAMM@Z PROC				; squareRoot
; File D:\code\sprite_animation_maker\mathematics.h
; Line 454
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 56					; 00000038H
; Line 455
	movss	xmm0, DWORD PTR r$[rsp]
	xorps	xmm1, xmm1
	movss	xmm1, xmm0
	movaps	xmm0, xmm1
	movaps	XMMWORD PTR $T1[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	sqrtss	xmm0, xmm0
	movaps	XMMWORD PTR $T2[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T2[rsp]
	movss	DWORD PTR tv70[rsp], xmm0
	movss	xmm0, DWORD PTR tv70[rsp]
; Line 456
	add	rsp, 56					; 00000038H
	ret	0
?squareRoot@@YAMM@Z ENDP				; squareRoot
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
__$ReturnUdt$ = 96
v$ = 104
??G@YA?ATVector3@@T0@@Z PROC				; operator-
; File D:\code\sprite_animation_maker\mathematics.h
; Line 446
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H
; Line 447
	movaps	xmm0, XMMWORD PTR __xmm@00000000000000000000000000000000
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	subps	xmm0, XMMWORD PTR [rax]
	movaps	XMMWORD PTR $T2[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T2[rsp]
	movaps	XMMWORD PTR $T3[rsp], xmm0
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Vector3@@QEAA@T__m128@@@Z		; Vector3::Vector3
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 448
	add	rsp, 88					; 00000058H
	ret	0
??G@YA?ATVector3@@T0@@Z ENDP				; operator-
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
__$ReturnUdt$ = 48
v1$ = 56
amt$ = 64
??H@YA?ATVector2@@T0@M@Z PROC				; operator+
; File D:\code\sprite_animation_maker\mathematics.h
; Line 430
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 431
	movss	xmm0, DWORD PTR v1$[rsp+4]
	addss	xmm0, DWORD PTR amt$[rsp]
	movss	xmm1, DWORD PTR v1$[rsp]
	addss	xmm1, DWORD PTR amt$[rsp]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Vector2@@QEAA@MM@Z			; Vector2::Vector2
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 432
	add	rsp, 40					; 00000028H
	ret	0
??H@YA?ATVector2@@T0@M@Z ENDP				; operator+
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
__$ReturnUdt$ = 48
v1$ = 56
v2$ = 64
??K@YA?ATVector2@@T0@0@Z PROC				; operator/
; File D:\code\sprite_animation_maker\mathematics.h
; Line 412
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 413
	movss	xmm0, DWORD PTR v1$[rsp+4]
	divss	xmm0, DWORD PTR v2$[rsp+4]
	movss	xmm1, DWORD PTR v1$[rsp]
	divss	xmm1, DWORD PTR v2$[rsp]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Vector2@@QEAA@MM@Z			; Vector2::Vector2
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 414
	add	rsp, 40					; 00000028H
	ret	0
??K@YA?ATVector2@@T0@0@Z ENDP				; operator/
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
__$ReturnUdt$ = 80
v1$ = 88
v2$ = 96
??G@YA?ATVector3@@T0@0@Z PROC				; operator-
; File D:\code\sprite_animation_maker\mathematics.h
; Line 363
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
; Line 364
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	subps	xmm0, XMMWORD PTR [rcx]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movaps	XMMWORD PTR $T2[rsp], xmm0
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Vector3@@QEAA@T__m128@@@Z		; Vector3::Vector3
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 365
	add	rsp, 72					; 00000048H
	ret	0
??G@YA?ATVector3@@T0@0@Z ENDP				; operator-
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
__$ReturnUdt$ = 48
v1$ = 56
v2$ = 64
??G@YA?ATVector2@@T0@0@Z PROC				; operator-
; File D:\code\sprite_animation_maker\mathematics.h
; Line 359
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 360
	movss	xmm0, DWORD PTR v1$[rsp+4]
	subss	xmm0, DWORD PTR v2$[rsp+4]
	movss	xmm1, DWORD PTR v1$[rsp]
	subss	xmm1, DWORD PTR v2$[rsp]
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Vector2@@QEAA@MM@Z			; Vector2::Vector2
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 361
	add	rsp, 40					; 00000028H
	ret	0
??G@YA?ATVector2@@T0@0@Z ENDP				; operator-
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
pct$ = 0
v$ = 32
minA$ = 40
maxA$ = 48
minB$ = 56
maxB$ = 64
?map@@YAMMMMMM@Z PROC					; map
; File D:\code\sprite_animation_maker\mathematics.h
; Line 321
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 24
; Line 322
	movss	xmm0, DWORD PTR v$[rsp]
	subss	xmm0, DWORD PTR minA$[rsp]
	movss	xmm1, DWORD PTR maxA$[rsp]
	subss	xmm1, DWORD PTR minA$[rsp]
	divss	xmm0, xmm1
	movss	DWORD PTR pct$[rsp], xmm0
; Line 323
	movss	xmm0, DWORD PTR maxB$[rsp]
	subss	xmm0, DWORD PTR minB$[rsp]
	mulss	xmm0, DWORD PTR pct$[rsp]
	addss	xmm0, DWORD PTR minB$[rsp]
; Line 324
	add	rsp, 24
	ret	0
?map@@YAMMMMMM@Z ENDP					; map
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
a$ = 8
b$ = 16
?max@@YAMMM@Z PROC					; max
; File D:\code\sprite_animation_maker\mathematics.h
; Line 311
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
; Line 312
	movss	xmm0, DWORD PTR a$[rsp]
	comiss	xmm0, DWORD PTR b$[rsp]
	jbe	SHORT $LN2@max
	movss	xmm0, DWORD PTR a$[rsp]
	jmp	SHORT $LN1@max
	jmp	SHORT $LN3@max
$LN2@max:
; Line 313
	movss	xmm0, DWORD PTR b$[rsp]
$LN3@max:
$LN1@max:
; Line 314
	ret	0
?max@@YAMMM@Z ENDP					; max
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
r$ = 32
__$ArrayPad$ = 40
__$ReturnUdt$ = 64
v$ = 72
min$ = 80
max$ = 88
?clamp@@YA?ATVector2@@T1@00@Z PROC			; clamp
; File D:\code\sprite_animation_maker\mathematics.h
; Line 304
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 305
	mov	rax, QWORD PTR v$[rsp]
	mov	QWORD PTR r$[rsp], rax
; Line 306
	movss	xmm2, DWORD PTR max$[rsp]
	movss	xmm1, DWORD PTR min$[rsp]
	movss	xmm0, DWORD PTR v$[rsp]
	call	?clamp@@YAMMMM@Z			; clamp
	movss	DWORD PTR r$[rsp], xmm0
; Line 307
	movss	xmm2, DWORD PTR max$[rsp+4]
	movss	xmm1, DWORD PTR min$[rsp+4]
	movss	xmm0, DWORD PTR v$[rsp+4]
	call	?clamp@@YAMMMM@Z			; clamp
	movss	DWORD PTR r$[rsp+4], xmm0
; Line 308
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR r$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 309
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
?clamp@@YA?ATVector2@@T1@00@Z ENDP			; clamp
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
v$ = 8
min$ = 16
max$ = 24
?clamp@@YAMMMM@Z PROC					; clamp
; File D:\code\sprite_animation_maker\mathematics.h
; Line 298
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
; Line 299
	movss	xmm0, DWORD PTR min$[rsp]
	comiss	xmm0, DWORD PTR v$[rsp]
	jbe	SHORT $LN2@clamp
	movss	xmm0, DWORD PTR min$[rsp]
	jmp	SHORT $LN1@clamp
$LN2@clamp:
; Line 300
	movss	xmm0, DWORD PTR v$[rsp]
	comiss	xmm0, DWORD PTR max$[rsp]
	jbe	SHORT $LN3@clamp
	movss	xmm0, DWORD PTR max$[rsp]
	jmp	SHORT $LN1@clamp
$LN3@clamp:
; Line 301
	movss	xmm0, DWORD PTR v$[rsp]
$LN1@clamp:
; Line 302
	ret	0
?clamp@@YAMMMM@Z ENDP					; clamp
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Matrix4@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Matrix4@@QEAA@XZ PROC				; Matrix4::Matrix4, COMDAT
; File D:\code\sprite_animation_maker\mathematics.h
; Line 180
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Matrix4@@QEAA@XZ ENDP				; Matrix4::Matrix4
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??4Vector4@@QEAAXT0@@Z
_TEXT	SEGMENT
this$ = 8
a$ = 16
??4Vector4@@QEAAXT0@@Z PROC				; Vector4::operator=, COMDAT
; File D:\code\sprite_animation_maker\mathematics.h
; Line 124
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
; Line 125
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movups	xmm0, XMMWORD PTR [rcx]
	movups	XMMWORD PTR [rax], xmm0
; Line 126
	ret	0
??4Vector4@@QEAAXT0@@Z ENDP				; Vector4::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Vector4@@QEAA@MMMM@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
x$ = 40
y$ = 48
z$ = 56
w$ = 64
??0Vector4@@QEAA@MMMM@Z PROC				; Vector4::Vector4, COMDAT
; File D:\code\sprite_animation_maker\mathematics.h
; Line 111
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
; Line 112
	movss	xmm0, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR z$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm3, DWORD PTR x$[rsp]
	unpcklps xmm1, xmm0
	unpcklps xmm3, xmm2
	movaps	xmm0, xmm3
	movlhps	xmm0, xmm1
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rax], xmm0
; Line 113
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 24
	ret	0
??0Vector4@@QEAA@MMMM@Z ENDP				; Vector4::Vector4
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??XVector3@@QEAAXAEAT0@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
a$ = 40
??XVector3@@QEAAXAEAT0@@Z PROC				; Vector3::operator*=, COMDAT
; File D:\code\sprite_animation_maker\mathematics.h
; Line 68
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
; Line 69
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	mulps	xmm0, XMMWORD PTR [rcx]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rax], xmm0
; Line 70
	add	rsp, 24
	ret	0
??XVector3@@QEAAXAEAT0@@Z ENDP				; Vector3::operator*=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??4Vector3@@QEAAXT0@@Z
_TEXT	SEGMENT
this$ = 8
a$ = 16
??4Vector3@@QEAAXT0@@Z PROC				; Vector3::operator=, COMDAT
; File D:\code\sprite_animation_maker\mathematics.h
; Line 64
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
; Line 65
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movups	xmm0, XMMWORD PTR [rcx]
	movups	XMMWORD PTR [rax], xmm0
; Line 66
	ret	0
??4Vector3@@QEAAXT0@@Z ENDP				; Vector3::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Vector3@@QEAA@MMM@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
x$ = 40
y$ = 48
z$ = 56
??0Vector3@@QEAA@MMM@Z PROC				; Vector3::Vector3, COMDAT
; File D:\code\sprite_animation_maker\mathematics.h
; Line 60
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
; Line 61
	xorps	xmm0, xmm0
	movss	xmm1, DWORD PTR z$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm3, DWORD PTR x$[rsp]
	unpcklps xmm1, xmm0
	unpcklps xmm3, xmm2
	movaps	xmm0, xmm3
	movlhps	xmm0, xmm1
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rax], xmm0
; Line 62
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 24
	ret	0
??0Vector3@@QEAA@MMM@Z ENDP				; Vector3::Vector3
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Vector3@@QEAA@M@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
a$ = 40
??0Vector3@@QEAA@M@Z PROC				; Vector3::Vector3, COMDAT
; File D:\code\sprite_animation_maker\mathematics.h
; Line 57
$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
; Line 58
	xorps	xmm0, xmm0
	movss	xmm1, DWORD PTR a$[rsp]
	movss	xmm2, DWORD PTR a$[rsp]
	movss	xmm3, DWORD PTR a$[rsp]
	unpcklps xmm1, xmm0
	unpcklps xmm3, xmm2
	movaps	xmm0, xmm3
	movlhps	xmm0, xmm1
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rax], xmm0
; Line 59
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 24
	ret	0
??0Vector3@@QEAA@M@Z ENDP				; Vector3::Vector3
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Vector3@@QEAA@T__m128@@@Z
_TEXT	SEGMENT
this$ = 8
a$ = 16
??0Vector3@@QEAA@T__m128@@@Z PROC			; Vector3::Vector3, COMDAT
; File D:\code\sprite_animation_maker\mathematics.h
; Line 56
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movups	xmm0, XMMWORD PTR [rcx]
	movups	XMMWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Vector3@@QEAA@T__m128@@@Z ENDP			; Vector3::Vector3
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??YVector2@@QEAAXT0@@Z
_TEXT	SEGMENT
this$ = 8
a$ = 16
??YVector2@@QEAAXT0@@Z PROC				; Vector2::operator+=, COMDAT
; File D:\code\sprite_animation_maker\mathematics.h
; Line 34
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
; Line 35
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR a$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0
; Line 36
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	addss	xmm0, DWORD PTR a$[rsp+4]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0
; Line 37
	ret	0
??YVector2@@QEAAXT0@@Z ENDP				; Vector2::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??4Vector2@@QEAAXT0@@Z
_TEXT	SEGMENT
this$ = 8
a$ = 16
??4Vector2@@QEAAXT0@@Z PROC				; Vector2::operator=, COMDAT
; File D:\code\sprite_animation_maker\mathematics.h
; Line 24
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
; Line 25
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rax], xmm0
; Line 26
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp+4]
	movss	DWORD PTR [rax+4], xmm0
; Line 27
	ret	0
??4Vector2@@QEAAXT0@@Z ENDP				; Vector2::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Vector2@@QEAA@MM@Z
_TEXT	SEGMENT
this$ = 8
x$ = 16
y$ = 24
??0Vector2@@QEAA@MM@Z PROC				; Vector2::Vector2, COMDAT
; File D:\code\sprite_animation_maker\mathematics.h
; Line 22
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR x$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR y$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Vector2@@QEAA@MM@Z ENDP				; Vector2::Vector2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Vector2@@QEAA@M@Z
_TEXT	SEGMENT
this$ = 8
a$ = 16
??0Vector2@@QEAA@M@Z PROC				; Vector2::Vector2, COMDAT
; File D:\code\sprite_animation_maker\mathematics.h
; Line 21
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR a$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Vector2@@QEAA@M@Z ENDP				; Vector2::Vector2
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
decFound$ = 0
mult$ = 4
d$1 = 8
result$ = 12
c$ = 16
str$ = 48
?stringToF32@@YAMPEBD@Z PROC				; stringToF32
; File D:\code\sprite_animation_maker\utilities.h
; Line 35
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 36
	xorps	xmm0, xmm0
	movss	DWORD PTR result$[rsp], xmm0
; Line 37
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR mult$[rsp], xmm0
; Line 38
	mov	rax, QWORD PTR str$[rsp]
	mov	QWORD PTR c$[rsp], rax
; Line 39
	mov	rax, QWORD PTR c$[rsp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 45					; 0000002dH
	jne	SHORT $LN4@stringToF3
; Line 40
	mov	rax, QWORD PTR c$[rsp]
	inc	rax
	mov	QWORD PTR c$[rsp], rax
; Line 41
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR mult$[rsp], xmm0
$LN4@stringToF3:
; Line 43
	mov	BYTE PTR decFound$[rsp], 0
$LN9@stringToF3:
$LN2@stringToF3:
; Line 44
	mov	rax, QWORD PTR c$[rsp]
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	$LN3@stringToF3
; Line 45
	mov	rax, QWORD PTR c$[rsp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN5@stringToF3
; Line 46
	mov	BYTE PTR decFound$[rsp], 1
; Line 47
	mov	rax, QWORD PTR c$[rsp]
	inc	rax
	mov	QWORD PTR c$[rsp], rax
; Line 48
	jmp	SHORT $LN2@stringToF3
$LN5@stringToF3:
; Line 50
	mov	rax, QWORD PTR c$[rsp]
	movsx	eax, BYTE PTR [rax]
	sub	eax, 48					; 00000030H
	mov	DWORD PTR d$1[rsp], eax
; Line 51
	cmp	DWORD PTR d$1[rsp], 0
	jb	SHORT $LN6@stringToF3
	cmp	DWORD PTR d$1[rsp], 9
	ja	SHORT $LN6@stringToF3
; Line 52
	movzx	eax, BYTE PTR decFound$[rsp]
	test	eax, eax
	je	SHORT $LN7@stringToF3
; Line 53
	movss	xmm0, DWORD PTR mult$[rsp]
	divss	xmm0, DWORD PTR __real@41200000
	movss	DWORD PTR mult$[rsp], xmm0
$LN7@stringToF3:
; Line 55
	movss	xmm0, DWORD PTR result$[rsp]
	mulss	xmm0, DWORD PTR __real@41200000
	mov	eax, DWORD PTR d$1[rsp]
	cvtsi2ss xmm1, rax
	addss	xmm0, xmm1
	movss	DWORD PTR result$[rsp], xmm0
$LN6@stringToF3:
; Line 57
	mov	rax, QWORD PTR c$[rsp]
	inc	rax
	mov	QWORD PTR c$[rsp], rax
; Line 58
	jmp	$LN9@stringToF3
$LN3@stringToF3:
; Line 60
	movss	xmm0, DWORD PTR result$[rsp]
	mulss	xmm0, DWORD PTR mult$[rsp]
; Line 61
	add	rsp, 40					; 00000028H
	ret	0
?stringToF32@@YAMPEBD@Z ENDP				; stringToF32
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
res$ = 0
tv67 = 4
c$ = 8
str$ = 32
?getLength@@YAIPEAD@Z PROC				; getLength
; File D:\code\sprite_animation_maker\utilities.h
; Line 28
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
; Line 29
	mov	DWORD PTR res$[rsp], 0
; Line 30
	mov	rax, QWORD PTR str$[rsp]
	mov	QWORD PTR c$[rsp], rax
$LN2@getLength:
; Line 31
	mov	rax, QWORD PTR c$[rsp]
	movsx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv67[rsp], eax
	mov	rax, QWORD PTR c$[rsp]
	inc	rax
	mov	QWORD PTR c$[rsp], rax
	cmp	DWORD PTR tv67[rsp], 0
	je	SHORT $LN3@getLength
	mov	eax, DWORD PTR res$[rsp]
	inc	eax
	mov	DWORD PTR res$[rsp], eax
	jmp	SHORT $LN2@getLength
$LN3@getLength:
; Line 32
	mov	eax, DWORD PTR res$[rsp]
; Line 33
	add	rsp, 24
	ret	0
?getLength@@YAIPEAD@Z ENDP				; getLength
_TEXT	ENDS
END
